{"ast":null,"code":"var _jsxFileName = \"/Users/janujan/Documents/movies-react-app/src/components/Posters/Posters.js\";\nimport React, { Component } from \"react\";\nimport Poster from \"./Poster/Poster\";\nimport classes from \"./Posters.module.css\";\nimport axios from \"axios\";\nimport Toolbar from \"../Navigation/Toolbar/Toolbar\"; //import {Atoms, Organisms, Molecules} from \"@we.org/shared-component-library\";\n\nclass Posters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      selectedId: null,\n      category: \"\"\n    };\n\n    this.movieSelectedHandler = id => {\n      //console.log(id);\n      //this.setState({selectedId: id});\n      this.props.history.push(\"/movies/\" + id);\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://api.themoviedb.org/3/movie/\" + \"popular\" + \"?api_key=17ff30cdfe7a2e0e372635283aefece3\").then(response => {\n      this.setState({\n        movies: response.data.results,\n        category: \"popular\"\n      }); //console.log(response)\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.match.params); //console.log(this.props);\n    //axios.get('http://api.themoviedb.org/3/movie/popular?api_key=0233eeb82ef3714df67f7e2db8e6ea28')\n    // if (this.props.match.params.category){\n    //new movie\n\n    if (!this.state.category || this.state.category !== this.props.match.params.category) {\n      axios.get(\"http://api.themoviedb.org/3/movie/\" + this.props.match.params.category + \"?api_key=17ff30cdfe7a2e0e372635283aefece3\").then(response => {\n        this.setState({\n          movies: response.data.results,\n          category: this.props.match.params.category\n        }); //console.log(response)\n      });\n    }\n  }\n\n  render() {\n    const movies = this.state.movies.map(movie => //<Link to={'/movies/' + movie.id} key={movie.id} >\n    React.createElement(Poster, {\n      key: movie.id,\n      title: movie.title,\n      src: movie.poster_path,\n      clicked: () => this.movieSelectedHandler(movie.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }) //</Link>\n    );\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      title: this.state.category.toUpperCase(),\n      back: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.Posters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, movies));\n  }\n\n}\n\nexport default Posters;","map":{"version":3,"sources":["/Users/janujan/Documents/movies-react-app/src/components/Posters/Posters.js"],"names":["React","Component","Poster","classes","axios","Toolbar","Posters","state","movies","selectedId","category","movieSelectedHandler","id","props","history","push","componentDidMount","get","then","response","setState","data","results","componentDidUpdate","console","log","match","params","render","map","movie","title","poster_path","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,+BAApB,C,CACA;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BM,KAD8B,GACtB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,UAAU,EAAE,IAFN;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KADsB;;AAAA,SA+C9BC,oBA/C8B,GA+CPC,EAAE,IAAI;AAC3B;AACA;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,aAAaH,EAArC;AACD,KAnD6B;AAAA;;AAO9BI,EAAAA,iBAAiB,GAAG;AAClBZ,IAAAA,KAAK,CACFa,GADH,CAEI,uCACE,SADF,GAEE,2CAJN,EAMGC,IANH,CAMQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,MAAM,EAAEW,QAAQ,CAACE,IAAT,CAAcC,OAAxB;AAAiCZ,QAAAA,QAAQ,EAAE;AAA3C,OAAd,EADgB,CAEhB;AACD,KATH;AAUD;;AAEDa,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWa,KAAX,CAAiBC,MAA7B,EADmB,CAEnB;AACA;AAEA;AACA;;AACA,QACE,CAAC,KAAKpB,KAAL,CAAWG,QAAZ,IACA,KAAKH,KAAL,CAAWG,QAAX,KAAwB,KAAKG,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBjB,QAFlD,EAGE;AACAN,MAAAA,KAAK,CACFa,GADH,CAEI,uCACE,KAAKJ,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBjB,QAD1B,GAEE,2CAJN,EAMGQ,IANH,CAMQC,QAAQ,IAAI;AAChB,aAAKC,QAAL,CAAc;AACZZ,UAAAA,MAAM,EAAEW,QAAQ,CAACE,IAAT,CAAcC,OADV;AAEZZ,UAAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBjB;AAFtB,SAAd,EADgB,CAKhB;AACD,OAZH;AAaD;AACF;;AAQDkB,EAAAA,MAAM,GAAG;AACP,UAAMpB,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAX,CAAkBqB,GAAlB,CACbC,KAAK,IACH;AACA,wBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAAClB,EADb;AAEE,MAAA,KAAK,EAAEkB,KAAK,CAACC,KAFf;AAGE,MAAA,GAAG,EAAED,KAAK,CAACE,WAHb;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKrB,oBAAL,CAA0BmB,KAAK,CAAClB,EAAhC,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHW,CAUb;AAVa,KAAf;AAaA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWG,QAAX,CAAoBuB,WAApB,EAAhB;AAAmD,MAAA,IAAI,EAAE,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAE9B,OAAO,CAACG,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCE,MAAlC,CAFF,CADF;AAMD;;AAzE6B;;AA4EhC,eAAeF,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Poster from \"./Poster/Poster\";\nimport classes from \"./Posters.module.css\";\nimport axios from \"axios\";\nimport Toolbar from \"../Navigation/Toolbar/Toolbar\";\n//import {Atoms, Organisms, Molecules} from \"@we.org/shared-component-library\";\n\nclass Posters extends Component {\n  state = {\n    movies: [],\n    selectedId: null,\n    category: \"\"\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        \"http://api.themoviedb.org/3/movie/\" +\n          \"popular\" +\n          \"?api_key=17ff30cdfe7a2e0e372635283aefece3\"\n      )\n      .then(response => {\n        this.setState({ movies: response.data.results, category: \"popular\" });\n        //console.log(response)\n      });\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.match.params);\n    //console.log(this.props);\n    //axios.get('http://api.themoviedb.org/3/movie/popular?api_key=0233eeb82ef3714df67f7e2db8e6ea28')\n\n    // if (this.props.match.params.category){\n    //new movie\n    if (\n      !this.state.category ||\n      this.state.category !== this.props.match.params.category\n    ) {\n      axios\n        .get(\n          \"http://api.themoviedb.org/3/movie/\" +\n            this.props.match.params.category +\n            \"?api_key=17ff30cdfe7a2e0e372635283aefece3\"\n        )\n        .then(response => {\n          this.setState({\n            movies: response.data.results,\n            category: this.props.match.params.category\n          });\n          //console.log(response)\n        });\n    }\n  }\n\n  movieSelectedHandler = id => {\n    //console.log(id);\n    //this.setState({selectedId: id});\n    this.props.history.push(\"/movies/\" + id);\n  };\n\n  render() {\n    const movies = this.state.movies.map(\n      movie => (\n        //<Link to={'/movies/' + movie.id} key={movie.id} >\n        <Poster\n          key={movie.id}\n          title={movie.title}\n          src={movie.poster_path}\n          clicked={() => this.movieSelectedHandler(movie.id)}\n        />\n      )\n      //</Link>\n    );\n\n    return (\n      <div>\n        <Toolbar title={this.state.category.toUpperCase()} back={false} />\n        <div className={classes.Posters}>{movies}</div>\n      </div>\n    );\n  }\n}\n\nexport default Posters;\n"]},"metadata":{},"sourceType":"module"}