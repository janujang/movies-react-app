{"ast":null,"code":"var _jsxFileName = \"/Users/janujangathieswaran/Documents/React Tutorials/movies-app/src/components/MoviePosterInfo/MoviePosterInfo.js\";\nimport React, { Component } from 'react';\nimport classes from './MoviePosterInfo.module.css';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\n\nclass MoviePosterInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loadedMovie: null\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n\n    if (this.props.match.params.id) {\n      //new post\n      if (!this.state.loadedMovie || this.state.loadedMovie && this.state.loadedMovie.id != this.props.match.params.id) {\n        axios.get('https://api.themoviedb.org/3/movie/' + this.props.match.params.id + '?api_key=0233eeb82ef3714df67f7e2db8e6ea28').then(response => {\n          console.log(response.data);\n          this.setState({\n            loadedMovie: response.data\n          });\n        });\n      }\n    }\n  }\n\n  render() {\n    let content = null;\n\n    if (this.props.id) {\n      content = null;\n    } //check due to asynchronous nature\n\n\n    if (this.state.loadedMovie) {\n      content = React.createElement(\"div\", {\n        className: classes.MoviePosterInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: classes.img,\n        src: 'http://image.tmdb.org/t/p/w185/' + this.state.loadedMovie.poster_path,\n        alt: this.state.loadedMovie.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.TextContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.state.loadedMovie.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Release Date:\"), \" \", this.state.loadedMovie.release_date), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Plot Synopsis:\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), this.state.loadedMovie.overview), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Rating: \"), this.state.loadedMovie.vote_average + '/10')));\n    }\n\n    return content;\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Hi\");\n  }\n\n}\n\n;\nexport default MoviePosterInfo;","map":{"version":3,"sources":["/Users/janujangathieswaran/Documents/React Tutorials/movies-app/src/components/MoviePosterInfo/MoviePosterInfo.js"],"names":["React","Component","classes","axios","ReactDOM","MoviePosterInfo","state","loadedMovie","componentDidMount","console","log","props","match","params","id","get","then","response","data","setState","render","content","img","poster_path","title","TextContainer","release_date","overview","vote_average"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport classes from './MoviePosterInfo.module.css'\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\n\nclass MoviePosterInfo extends Component {\n    state = {\n        loadedMovie: null\n    }\n    componentDidMount(){\n        console.log(this.props.match.params.id);\n        if (this.props.match.params.id){\n            //new post\n            if (!this.state.loadedMovie || (this.state.loadedMovie && this.state.loadedMovie.id != this.props.match.params.id)) {\n                axios.get('https://api.themoviedb.org/3/movie/' + this.props.match.params.id + '?api_key=0233eeb82ef3714df67f7e2db8e6ea28')\n                .then(response => {\n                    console.log(response.data)\n                    this.setState({loadedMovie: response.data});\n                });\n            }\n           \n        }\n    }\n    render(){\n        let content = null;\n        \n        if (this.props.id){\n            content = null;\n        }\n        //check due to asynchronous nature\n        if (this.state.loadedMovie)\n        {\n            content = (\n                <div className={classes.MoviePosterInfo}>\n                    <img \n                        className={classes.img} \n                        src={'http://image.tmdb.org/t/p/w185/' + this.state.loadedMovie.poster_path} \n                        alt={this.state.loadedMovie.title}/>\n                    <div className={classes.TextContainer}>\n                        <h1>{this.state.loadedMovie.title}</h1>   \n                        <p><strong>Release Date:</strong> {this.state.loadedMovie.release_date}</p> \n                        <p><strong>Plot Synopsis:</strong> <br/>{this.state.loadedMovie.overview}</p> \n                        <p><strong>Rating: </strong>{this.state.loadedMovie.vote_average + '/10'}</p> \n                    </div>\n                </div>\n                \n            );\n        }\n        return content;\n        return <h1>Hi</h1>;\n    }\n};\n\nexport default MoviePosterInfo;\n\n"]},"metadata":{},"sourceType":"module"}