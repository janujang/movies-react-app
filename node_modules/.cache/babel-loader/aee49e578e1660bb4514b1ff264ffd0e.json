{"ast":null,"code":"var _jsxFileName = \"/Users/janujan.gathieswar/Documents/GitHub/movies-react-app/src/components/PosterInfo/PosterInfo.js\";\nimport React, { Component } from 'react';\nimport classes from './PosterInfo.module.css';\nimport axios from 'axios';\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\nimport { Atoms, Organisms, Molecules } from \"@we.org/shared-component-library\";\n\nclass PosterInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loadedMovie: null\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n\n    if (this.props.match.params.id) {\n      //new post\n      if (!this.state.loadedMovie || this.state.loadedMovie && this.state.loadedMovie.id !== this.props.match.params.id) {\n        axios.get('https://api.themoviedb.org/3/movie/' + this.props.match.params.id + '?api_key=0233eeb82ef3714df67f7e2db8e6ea28').then(response => {\n          console.log(response.data);\n          this.setState({\n            loadedMovie: response.data\n          });\n        }).catch(error => {}); //go through promises and async\n        //     axios.get('1').then(get('2')).then(get('3')).catch(console.log(err))\n        //     axios.get('1', function() => { \n        //         axios.get('2', function() {\n        //             axios.get('3', function() {}, function(){fdsfdsfdsf}\n        //         }, function(fdsfdsfds))\n        //     }, function() => {fdsfdsf})\n        //     async function() {\n        //     try {\n        //         await axios.get(1)\n        //         await axios.get(2)\n        //         await axios.get(3)\n        //     } catch(error)\n      }\n    }\n  }\n\n  render() {\n    let content = null; // const [element1, element2] = [1,2]\n    // const {element1, element2} = {element1: 1, element2: 2}\n    // const foo = {element1: 1, element2: 2}\n    // const {element1, element2} = foo\n\n    if (this.props.match.params.id) {\n      content = null;\n    } //check due to asynchronous nature\n\n\n    const loadedMovie = this.state.loadedMovie;\n\n    if (loadedMovie) {\n      content = React.createElement(\"div\", {\n        className: classes.PosterInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.loadedMovie.title), React.createElement(\"div\", {\n        className: classes.Columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: classes.img,\n        src: 'http://image.tmdb.org/t/p/w342/' + this.state.loadedMovie.poster_path,\n        alt: this.state.loadedMovie.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.TextContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.state.loadedMovie.release_date), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.loadedMovie.runtime, \" mins\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.state.loadedMovie.vote_average + '/10'), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.state.loadedMovie.overview), React.createElement(\"button\", {\n        className: classes.Buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"MARK AS FAVOURITE\"), React.createElement(\"button\", {\n        className: classes.Buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"REVIEW\"), React.createElement(\"button\", {\n        className: classes.Buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"SHARE\"))), React.createElement(\"div\", {\n        className: classes.Trailer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Trailers:\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Trailer 1\"), React.createElement(Atoms.VideoPlayer, {\n        title: \"Movie1\",\n        videoId: \"123123\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Organisms.TabSection, {\n        tabs: [{\n          key: \"Reviews\",\n          text: \"Reviews\",\n          content: [React.createElement(Molecules.Accordion, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, React.createElement(Molecules.AccordionItem, {\n            title: \"Review 1\",\n            id: 1,\n            name: \"accordion\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, \"Body text. Word limit: 250 words\"), React.createElement(Molecules.AccordionItem, {\n            title: \"Review 2\",\n            id: 1,\n            name: \"accordion\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, \"Body text. Word limit: 250 words\"), React.createElement(Molecules.AccordionItem, {\n            title: \"Review 3\",\n            id: 1,\n            name: \"accordion\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, \"Body text. Word limit: 250 words\"))]\n        }, {\n          key: \"Leave a review\",\n          text: \"Lorem Ipsum\",\n          content: [React.createElement(Atoms.BodyText, {\n            size: \"M\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\")]\n        }, {\n          key: \"multi\",\n          text: \"Multiple\",\n          content: [React.createElement(Atoms.Heading, {\n            size: \"XL\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, \"Hello World!\"), React.createElement(Atoms.BodyText, {\n            size: \"M\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\")]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Reviews\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Leave a review\"), React.createElement(\"div\", {\n        style: {\n          width: \"600px\",\n          height: \"300px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Molecules.InputTextArea, {\n        name: \"text-area-input\",\n        title: \"This is a title\",\n        label: \"Labelled Text Area Input: Error\",\n        placeholder: \"Enter text here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      title: \"Movie Detail\",\n      back: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), content); //return <h1>Hi</h1>;\n  }\n\n}\n\n;\nexport default PosterInfo;","map":{"version":3,"sources":["/Users/janujan.gathieswar/Documents/GitHub/movies-react-app/src/components/PosterInfo/PosterInfo.js"],"names":["React","Component","classes","axios","Toolbar","Atoms","Organisms","Molecules","PosterInfo","state","loadedMovie","componentDidMount","console","log","props","match","params","id","get","then","response","data","setState","catch","error","render","content","title","Columns","img","poster_path","TextContainer","release_date","runtime","vote_average","overview","Buttons","Trailer","key","text","width","height"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport classes from './PosterInfo.module.css'\nimport axios from 'axios';\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\nimport {Atoms, Organisms, Molecules} from \"@we.org/shared-component-library\";\n\n\nclass PosterInfo extends Component {\n    state = {\n        loadedMovie: null\n    }\n    componentDidMount(){\n        console.log(this.props.match.params.id);\n        if (this.props.match.params.id){\n            //new post\n            if (!this.state.loadedMovie || (this.state.loadedMovie && this.state.loadedMovie.id !== this.props.match.params.id)) {\n                axios.get('https://api.themoviedb.org/3/movie/' + this.props.match.params.id + '?api_key=0233eeb82ef3714df67f7e2db8e6ea28')\n                .then(response => {\n                    console.log(response.data)\n                    this.setState({loadedMovie: response.data});\n                }).catch(error => {\n\n                });\n\n                //go through promises and async\n\n            //     axios.get('1').then(get('2')).then(get('3')).catch(console.log(err))\n\n            //     axios.get('1', function() => { \n            //         axios.get('2', function() {\n            //             axios.get('3', function() {}, function(){fdsfdsfdsf}\n            //         }, function(fdsfdsfds))\n            //     }, function() => {fdsfdsf})\n\n            //     async function() {\n            //     try {\n            //         await axios.get(1)\n            //         await axios.get(2)\n            //         await axios.get(3)\n            //     } catch(error)\n            }\n           \n        }\n    }\n    render() {\n        let content = null;\n        // const [element1, element2] = [1,2]\n        // const {element1, element2} = {element1: 1, element2: 2}\n        // const foo = {element1: 1, element2: 2}\n        // const {element1, element2} = foo\n\n        if (this.props.match.params.id){\n            content = null;\n        }\n        //check due to asynchronous nature\n        const { loadedMovie } = this.state\n        if (loadedMovie) {\n            content = (\n                <div className={classes.PosterInfo}>\n                    <h1>{this.state.loadedMovie.title}</h1>   \n\n                    <div className={classes.Columns}>\n                        <img \n                            className={classes.img} \n                            src={'http://image.tmdb.org/t/p/w342/' + this.state.loadedMovie.poster_path} \n                            alt={this.state.loadedMovie.title}/>\n\n                        <div className={classes.TextContainer}>\n                            <h2>{this.state.loadedMovie.release_date}</h2> \n                            <h3>{this.state.loadedMovie.runtime} mins</h3> \n                            <h3>{this.state.loadedMovie.vote_average + '/10'}</h3>\n\n                            <p>{this.state.loadedMovie.overview}</p> \n\n                            <button className={classes.Buttons}>MARK AS FAVOURITE</button>\n                            <button className={classes.Buttons}>REVIEW</button>\n                            <button className={classes.Buttons}>SHARE</button>\n                        </div>\n                    </div>\n                    \n                    <div className={classes.Trailer}>\n                        <hr/>\n                        <h2>Trailers:</h2> \n                        <ul>\n                            <li>Trailer 1</li>\n                            <Atoms.VideoPlayer title=\"Movie1\" videoId=\"123123\" />\n                        </ul>\n                        <hr/>\n\n\n                        {/* Review */}\n                        <Organisms.TabSection\n                            tabs={[\n                                {\n                                    key: \"Reviews\",\n                                    text: \"Reviews\",\n                                    content: [\n                                        <Molecules.Accordion>\n                                            <Molecules.AccordionItem\n                                                title=\"Review 1\"\n                                                id={1}\n                                                name=\"accordion\">\n                                                Body text. Word limit: 250 words\n                                            </Molecules.AccordionItem>\n                                            <Molecules.AccordionItem\n                                                title=\"Review 2\"\n                                                id={1}\n                                                name=\"accordion\">\n                                                Body text. Word limit: 250 words\n                                            </Molecules.AccordionItem>\n                                            <Molecules.AccordionItem\n                                                title=\"Review 3\"\n                                                id={1}\n                                                name=\"accordion\">\n                                                Body text. Word limit: 250 words\n                                            </Molecules.AccordionItem>\n                                        </Molecules.Accordion>\n                                    ],\n                                },\n                                {\n                                    key: \"Leave a review\",\n                                    text: \"Lorem Ipsum\",\n                                    content: [\n                                        <Atoms.BodyText size=\"M\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</Atoms.BodyText>\n                                    ],\n                                },\n                                {\n                                    key: \"multi\",\n                                    text: \"Multiple\",\n                                    content: [\n                                        <Atoms.Heading size=\"XL\">Hello World!</Atoms.Heading>,\n                                        <Atoms.BodyText size=\"M\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</Atoms.BodyText>\n                                    ],\n                                }\n                            ]}\n                        />\n                        <h2>Reviews</h2> \n                        \n\n                        <h2>Leave a review</h2>\n                        <div style={{ width: \"600px\", height: \"300px\" }}>\n                            <Molecules.InputTextArea\n                            name=\"text-area-input\"\n                            title=\"This is a title\"\n                            label=\"Labelled Text Area Input: Error\"\n                            placeholder=\"Enter text here\"\n                            />\n                        </div>\n                    </div>\n\n                </div>\n   \n            );\n        }\n        return (\n            <div>\n                <Toolbar title=\"Movie Detail\" back={true} />\n                {content}\n            </div>\n        );\n        //return <h1>Hi</h1>;\n    }\n};\n\nexport default PosterInfo;\n\n"]},"metadata":{},"sourceType":"module"}