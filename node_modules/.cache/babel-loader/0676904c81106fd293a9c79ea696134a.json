{"ast":null,"code":"var _jsxFileName = \"/Users/janujan.gathieswar/Documents/GitHub/movies-react-app/src/components/PosterInfo/PosterInfo.js\";\nimport React, { Component } from 'react';\nimport classes from './PosterInfo.module.css';\nimport axios from 'axios';\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\n\nclass PosterInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loadedMovie: null\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n\n    if (this.props.match.params.id) {\n      //new post\n      if (!this.state.loadedMovie || this.state.loadedMovie && this.state.loadedMovie.id !== this.props.match.params.id) {\n        axios.get('https://api.themoviedb.org/3/movie/' + this.props.match.params.id + '?api_key=0233eeb82ef3714df67f7e2db8e6ea28').then(response => {\n          console.log(response.data);\n          this.setState({\n            loadedMovie: response.data\n          });\n        });\n      }\n    }\n  }\n\n  render() {\n    let content = null;\n\n    if (this.props.match.params.id) {\n      content = null;\n    } //check due to asynchronous nature\n\n\n    if (this.state.loadedMovie) {\n      content = React.createElement(\"div\", {\n        className: classes.PosterInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.state.loadedMovie.title), React.createElement(\"div\", {\n        class: classes.Columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: classes.img,\n        src: 'http://image.tmdb.org/t/p/w185/' + this.state.loadedMovie.poster_path,\n        alt: this.state.loadedMovie.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.TextContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.state.loadedMovie.release_date), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.state.loadedMovie.runtime), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Plot Synopsis:\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), this.state.loadedMovie.overview), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Rating: \"), this.state.loadedMovie.vote_average + '/10'))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      title: \"Movie Detail\",\n      back: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), content); //return <h1>Hi</h1>;\n  }\n\n}\n\n;\nexport default PosterInfo;","map":{"version":3,"sources":["/Users/janujan.gathieswar/Documents/GitHub/movies-react-app/src/components/PosterInfo/PosterInfo.js"],"names":["React","Component","classes","axios","Toolbar","PosterInfo","state","loadedMovie","componentDidMount","console","log","props","match","params","id","get","then","response","data","setState","render","content","title","Columns","img","poster_path","TextContainer","release_date","runtime","overview","vote_average"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport classes from './PosterInfo.module.css'\nimport axios from 'axios';\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\n\nclass PosterInfo extends Component {\n    state = {\n        loadedMovie: null\n    }\n    componentDidMount(){\n        console.log(this.props.match.params.id);\n        if (this.props.match.params.id){\n            //new post\n            if (!this.state.loadedMovie || (this.state.loadedMovie && this.state.loadedMovie.id !== this.props.match.params.id)) {\n                axios.get('https://api.themoviedb.org/3/movie/' + this.props.match.params.id + '?api_key=0233eeb82ef3714df67f7e2db8e6ea28')\n                .then(response => {\n                    console.log(response.data)\n                    this.setState({loadedMovie: response.data});\n                });\n            }\n           \n        }\n    }\n    render(){\n        let content = null;\n        \n        if (this.props.match.params.id){\n            content = null;\n        }\n        //check due to asynchronous nature\n        if (this.state.loadedMovie)\n        {\n            content = (\n                <div className={classes.PosterInfo}>\n                    <h1>{this.state.loadedMovie.title}</h1>   \n\n                    <div class={classes.Columns}>\n                        <img \n                            className={classes.img} \n                            src={'http://image.tmdb.org/t/p/w185/' + this.state.loadedMovie.poster_path} \n                            alt={this.state.loadedMovie.title}/>\n                        <div className={classes.TextContainer}>\n                            <h2>{this.state.loadedMovie.release_date}</h2> \n                            <h2>{this.state.loadedMovie.runtime}</h2> \n\n                            <p><strong>Plot Synopsis:</strong> <br/>{this.state.loadedMovie.overview}</p> \n                            <p><strong>Rating: </strong>{this.state.loadedMovie.vote_average + '/10'}</p> \n                        </div>\n                    </div>\n                </div>\n                \n            );\n        }\n        return (\n            <div>\n                <Toolbar title=\"Movie Detail\" back={true} />\n                {content}\n            </div>\n        );\n        //return <h1>Hi</h1>;\n    }\n};\n\nexport default PosterInfo;\n\n"]},"metadata":{},"sourceType":"module"}