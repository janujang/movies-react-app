{"ast":null,"code":"import React, { PureComponent, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport smoothscroll from 'smoothscroll-polyfill';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport { CSSTransition } from 'react-transition-group';\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar _extends_1 = createCommonjsModule(function (module) {\n  function _extends() {\n    module.exports = _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  module.exports = _extends;\n});\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar classCallCheck = _classCallCheck;\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar createClass = _createClass;\n\nvar _typeof_1 = createCommonjsModule(function (module) {\n  function _typeof2(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof2 = function _typeof2(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof2 = function _typeof2(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof2(obj);\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n      module.exports = _typeof = function _typeof(obj) {\n        return _typeof2(obj);\n      };\n    } else {\n      module.exports = _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  module.exports = _typeof;\n});\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar assertThisInitialized = _assertThisInitialized;\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof_1(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nvar possibleConstructorReturn = _possibleConstructorReturn;\nvar getPrototypeOf = createCommonjsModule(function (module) {\n  function _getPrototypeOf(o) {\n    module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  module.exports = _getPrototypeOf;\n});\nvar setPrototypeOf = createCommonjsModule(function (module) {\n  function _setPrototypeOf(o, p) {\n    module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  module.exports = _setPrototypeOf;\n});\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nvar inherits = _inherits;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar defineProperty = _defineProperty; // Define browser's specific globals that won't be available during gatsby-build (a Node process)\n\nvar browser = {\n  window: {\n    location: {\n      pathname: \"/\"\n    }\n  },\n  document: {}\n};\n\nif (typeof window !== \"undefined\") {\n  browser.window = window;\n}\n\nif (typeof document !== \"undefined\") {\n  browser.document = document;\n}\n\nif (typeof Element !== \"undefined\") {\n  browser.Element = Element;\n}\n\nvar StringUtils = function StringUtils() {\n  classCallCheck(this, StringUtils);\n};\n\ndefineProperty(StringUtils, \"formatMax\", function () {\n  var string = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var maxLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  if (string.length <= maxLength) {\n    return string;\n  }\n\n  return \"\".concat(string.substring(0, maxLength), \"...\");\n});\n/* eslint-disable import/prefer-default-export */\n\nvar composeClassName = function composeClassName(classes) {\n  var theClasses = classes.filter(function (className) {\n    return !!className;\n  });\n  return theClasses.join(\" \").trim();\n};\n/* eslint-disable import/prefer-default-export */\n\n\nvar camelize = function camelize(str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\n    return index == 0 ? word.toLowerCase() : word.toUpperCase();\n  }).replace(/\\s+/g, \"\");\n};\n/* eslint-disable import/prefer-export-default */\n\n\nvar index =\n/*#__PURE__*/\nObject.freeze({\n  browser: browser,\n  composeClassName: composeClassName,\n  StringUtils: StringUtils,\n  camelize: camelize\n});\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \".BaseLink {\\n  background-color: transparent;\\n  text-decoration: underline;\\n  border: none;\\n  padding: 0;\\n  color: #19294f;\\n  cursor: pointer; }\\n  .BaseLink.linkStyled {\\n    font-size: 12px;\\n    line-height: 16px;\\n    font-family: soleil;\\n    text-decoration: none; }\\n    @media screen and (min-width: 1024px) {\\n      .BaseLink.linkStyled {\\n        font-size: 16px;\\n        line-height: 24px; } }\\n  .BaseLink:not(.disabled):hover {\\n    text-decoration: underline; }\\n  .BaseLink:not(.disabled):active, .BaseLink:not(.disabled).active {\\n    color: #167cba; }\\n  .BaseLink.disabled {\\n    color: #e9edf1;\\n    cursor: not-allowed; }\\n  .BaseLink.whiteText {\\n    color: #ffffff; }\\n\";\nstyleInject(css);\n\nvar BaseLink =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(BaseLink, _PureComponent);\n\n  function BaseLink() {\n    classCallCheck(this, BaseLink);\n    return possibleConstructorReturn(this, getPrototypeOf(BaseLink).apply(this, arguments));\n  }\n\n  createClass(BaseLink, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          active = _this$props.active,\n          blank = _this$props.blank,\n          className = _this$props.className,\n          children = _this$props.children,\n          href = _this$props.href,\n          external = _this$props.external,\n          internalLinkComponent = _this$props.internalLinkComponent,\n          onClickHandler = _this$props.onClickHandler,\n          tabIndex = _this$props.tabIndex,\n          title = _this$props.title,\n          unstyled = _this$props.unstyled,\n          whiteText = _this$props.whiteText,\n          a11yProps = _this$props.a11yProps;\n      var composedClassName = composeClassName([\"BaseLink\", active ? \"active\" : \"\", className, whiteText ? \"whiteText\" : \"\", unstyled ? \"\" : \"linkStyled\"]);\n\n      if (blank) {\n        return React.createElement(\"button\", _extends_1({}, a11yProps, {\n          type: \"button\",\n          title: title,\n          className: composedClassName\n        }, tabIndex ? {\n          tabIndex: tabIndex\n        } : {}, {\n          onClick: onClickHandler\n        }), children);\n      }\n\n      if (!external) {\n        // You can't render a lowercase react class like this.\n        var LinkComponent = internalLinkComponent;\n        return React.createElement(LinkComponent, _extends_1({\n          title: title,\n          className: composedClassName,\n          to: href\n        }, tabIndex ? {\n          tabIndex: tabIndex\n        } : {}), children);\n      }\n\n      return React.createElement(\"a\", _extends_1({\n        title: title,\n        className: composedClassName,\n        href: href\n      }, tabIndex ? {\n        tabIndex: tabIndex\n      } : {}), children);\n    }\n  }]);\n  return BaseLink;\n}(PureComponent);\n\ndefineProperty(BaseLink, \"propTypes\", {\n  className: PropTypes.string,\n\n  /** The link destination - a relative path for internal links, or absolute for external links */\n  href: PropTypes.string,\n\n  /** Whether or not the link's destination is on a separate site */\n  external: PropTypes.bool,\n\n  /** The component used as the internal link handler when `internal` is true */\n  internalLinkComponent: PropTypes.any,\n\n  /** The title attribute of the anchor tag */\n  title: PropTypes.string,\n\n  /** If true, the link will always appear as active */\n  active: PropTypes.bool,\n\n  /** If true, the link will have no destination and can have an onClickHandler */\n  blank: PropTypes.bool,\n\n  /** The onClick function for a blank link */\n  onClickHandler: PropTypes.func,\n  tabIndex: PropTypes.string,\n  whiteText: PropTypes.bool,\n  unstyled: PropTypes.bool\n});\ndefineProperty(BaseLink, \"defaultProps\", {\n  active: false,\n  blank: false,\n  href: \"\",\n  external: false,\n  internalLinkComponent: null,\n  title: \"\",\n  onClickHandler: null,\n  unstyled: false,\n  whiteText: false\n});\nvar css$1 = \".BodyText {\\n  font-family: MercuryTextG1;\\n  margin-top: 0;\\n  margin-bottom: 0;\\n  white-space: pre-line; }\\n  .BodyText.Centered {\\n    text-align: center; }\\n  .BodyText.L {\\n    font-size: 20px;\\n    font-weight: normal;\\n    line-height: 32px; }\\n    .BodyText.L p {\\n      margin-block-start: 32px;\\n      margin-block-end: 32px; }\\n  .BodyText.M {\\n    font-size: 16px;\\n    font-weight: normal;\\n    line-height: 24px; }\\n    .BodyText.M p {\\n      margin-block-start: 24px;\\n      margin-block-end: 24px; }\\n  .BodyText.S {\\n    font-size: 12px;\\n    font-weight: 600;\\n    line-height: 16px; }\\n    .BodyText.S p {\\n      margin-block-start: 16px;\\n      margin-block-end: 16px; }\\n  @media screen and (min-width: 1024px) {\\n    .BodyText.L {\\n      font-size: 24px;\\n      font-weight: normal;\\n      line-height: 32px; }\\n      .BodyText.L p {\\n        margin-block-start: 32px;\\n        margin-block-end: 32px; }\\n    .BodyText.M {\\n      font-size: 20px;\\n      font-weight: normal;\\n      line-height: 24px; }\\n      .BodyText.M p {\\n        margin-block-start: 24px;\\n        margin-block-end: 24px; }\\n    .BodyText.S {\\n      font-size: 16px;\\n      font-weight: normal;\\n      line-height: 24px; }\\n      .BodyText.S p {\\n        margin-block-start: 24px;\\n        margin-block-end: 24px; } }\\n\";\nstyleInject(css$1);\n\nvar BodyText =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(BodyText, _PureComponent);\n\n  function BodyText() {\n    classCallCheck(this, BodyText);\n    return possibleConstructorReturn(this, getPrototypeOf(BodyText).apply(this, arguments));\n  }\n\n  createClass(BodyText, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          size = _this$props.size,\n          children = _this$props.children,\n          className = _this$props.className,\n          whiteText = _this$props.whiteText,\n          centered = _this$props.centered;\n      var composedClassName = composeClassName([\"BodyText \".concat(size), className, whiteText ? \"whiteText\" : \"\", centered ? \"Centered\" : \"\"]);\n      return React.createElement(\"p\", {\n        className: composedClassName\n      }, children);\n    }\n  }]);\n  return BodyText;\n}(PureComponent);\n\ndefineProperty(BodyText, \"propTypes\", {\n  /** The selection for the size of the body text */\n  size: PropTypes.oneOf([\"L\", \"M\", \"S\"]),\n\n  /** Color of the text, defaults to brand navy. */\n  whiteText: PropTypes.bool,\n  centered: PropTypes.bool\n});\ndefineProperty(BodyText, \"defaultProps\", {\n  size: \"M\",\n  whiteText: false,\n  centered: false\n});\nvar css$2 = \"/* Defining atom specific variables */\\n.ButtonContainer .Button {\\n  height: 48px;\\n  border: 1px solid rgba(0, 0, 0, 0.1);\\n  box-sizing: border-box;\\n  color: #19294f;\\n  font-weight: normal;\\n  font-size: 14px;\\n  line-height: 16px;\\n  letter-spacing: 1px;\\n  text-transform: uppercase;\\n  text-align: center;\\n  overflow: hidden;\\n  /* Theme base styles */\\n  /* Default states definition */ }\\n  .ButtonContainer .Button.L {\\n    height: 48px;\\n    padding: 0 16px 0 16px; }\\n  .ButtonContainer .Button.M {\\n    height: 48px;\\n    padding: 0 16px 0 16px; }\\n  .ButtonContainer .Button.S {\\n    height: 48px;\\n    padding: 0 16px 0 16px; }\\n  .ButtonContainer .Button.Primary {\\n    background-color: #19294f;\\n    color: #ffffff; }\\n    .ButtonContainer .Button.Primary:hover:not(:disabled) {\\n      border-color: #19294f; }\\n  .ButtonContainer .Button.Secondary {\\n    background-color: #ffde30; }\\n    .ButtonContainer .Button.Secondary:hover:not(:disabled) {\\n      border-color: #ffde30; }\\n  .ButtonContainer .Button.Tertiary {\\n    background-color: #f4f6f9; }\\n    .ButtonContainer .Button.Tertiary:hover:not(:disabled) {\\n      border-color: #f4f6f9; }\\n  .ButtonContainer .Button:focus {\\n    border-color: #00aeef; }\\n  .ButtonContainer .Button:hover:not(:disabled) {\\n    background-color: #ffffff;\\n    color: #19294f;\\n    text-decoration: underline;\\n    cursor: pointer; }\\n  .ButtonContainer .Button:active {\\n    /* aka Pressed */\\n    background-color: #ffffff;\\n    border-color: #00aeef;\\n    color: #19294f; }\\n  .ButtonContainer .Button:disabled {\\n    background-color: #e9edf1;\\n    border-color: #e9edf1;\\n    color: #516173;\\n    cursor: not-allowed;\\n    text-decoration: none; }\\n\";\nstyleInject(css$2);\n\nvar Button =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(Button, _PureComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, getPrototypeOf(Button).apply(this, arguments));\n  }\n\n  createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          autoFocus = _this$props.autoFocus,\n          ariaLabel = _this$props.ariaLabel,\n          buttonRef = _this$props.buttonRef,\n          className = _this$props.className,\n          children = _this$props.children,\n          hidden = _this$props.hidden,\n          disabled = _this$props.disabled,\n          onClickHandler = _this$props.onClickHandler,\n          size = _this$props.size,\n          tabIndex = _this$props.tabIndex,\n          theme = _this$props.theme,\n          type = _this$props.type,\n          a11yProps = _this$props.a11yProps;\n      var composedClassName = composeClassName([\"Button\", theme, size, className]);\n      return React.createElement(\"div\", {\n        className: \"ButtonContainer\"\n      }, React.createElement(\"button\", _extends_1({}, hidden ? {\n        style: {\n          display: \"none\"\n        }\n      } : {}, {\n        \"aria-label\": ariaLabel,\n        autoFocus: autoFocus,\n        className: composedClassName,\n        disabled: disabled,\n        onClick: onClickHandler,\n        ref: buttonRef,\n        tabIndex: tabIndex,\n        type: type\n      }, a11yProps), children));\n    }\n  }]);\n  return Button;\n}(PureComponent);\n\ndefineProperty(Button, \"propTypes\", {\n  /** The selection for the theme of the button */\n  theme: PropTypes.oneOf([\"Primary\", \"Secondary\", \"Tertiary\"]),\n\n  /** The selection for the size of the button */\n  size: PropTypes.oneOf([\"L\", \"M\", \"S\"]),\n\n  /** The selection for the HTML type of the button */\n  type: PropTypes.oneOf([\"button\", \"reset\", \"submit\"]),\n  className: PropTypes.string,\n  onClickHandler: PropTypes.func,\n\n  /** Optional attribute for keyboard Accessibility to fix tabindex issues */\n  autoFocus: PropTypes.bool,\n  ariaLabel: PropTypes.string,\n  disabled: PropTypes.bool,\n\n  /** If hidden, the button will have display:none. Used in ButtonSalesforceChat to give Salesforce control over when the button appears. */\n  hidden: PropTypes.bool,\n\n  /** Optional attribute for keyboard Accessibility */\n  tabIndex: PropTypes.string,\n\n  /** Allow parent component to access to the button DOM for action like `focus` */\n  buttonRef: PropTypes.shape({\n    current: PropTypes.instanceOf(browser.Element)\n  }),\n  a11yProps: PropTypes.object\n});\ndefineProperty(Button, \"defaultProps\", {\n  autoFocus: false,\n  buttonRef: React.createRef(),\n  className: \"\",\n  disabled: false,\n  hidden: false,\n  size: \"M\",\n  theme: \"Primary\",\n  type: \"button\",\n  onClickHandler: function onClickHandler() {}\n});\n\nvar Col =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(Col, _PureComponent);\n\n  function Col() {\n    classCallCheck(this, Col);\n    return possibleConstructorReturn(this, getPrototypeOf(Col).apply(this, arguments));\n  }\n\n  createClass(Col, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          children = _this$props.children,\n          xs = _this$props.xs,\n          sm = _this$props.sm,\n          md = _this$props.md,\n          lg = _this$props.lg,\n          xl = _this$props.xl;\n      var cols = {\n        xs: xs,\n        sm: sm,\n        md: md,\n        lg: lg,\n        xl: xl\n      };\n      var classes = [];\n      Object.keys(cols).forEach(function (col) {\n        if (!cols[col]) return;\n        var _cols$col = cols[col],\n            span = _cols$col.span,\n            offset = _cols$col.offset;\n        /* eslint-disable */\n\n        if (span) classes.push(\"col-\".concat(col, \"-\").concat(span));\n        if (offset || offset === 0) classes.push(\"col-\".concat(col, \"-offset-\").concat(offset));\n      });\n      var composedClassName = composeClassName([className].concat(classes));\n      return React.createElement(\"div\", {\n        className: composedClassName\n      }, children);\n    }\n  }]);\n  return Col;\n}(PureComponent);\n\ndefineProperty(Col, \"propTypes\", {\n  children: PropTypes.node.isRequired,\n\n  /** The column sizing. Same as bootstrap but with different sizings.\n   * xs is required, since it's mobile first. */\n  xs: PropTypes.shape({\n    span: PropTypes.number.isRequired,\n    offset: PropTypes.number\n  }).isRequired,\n  sm: PropTypes.shape({\n    span: PropTypes.number.isRequired,\n    offset: PropTypes.number\n  }),\n  md: PropTypes.shape({\n    span: PropTypes.number.isRequired,\n    offset: PropTypes.number\n  }),\n  lg: PropTypes.shape({\n    span: PropTypes.number.isRequired,\n    offset: PropTypes.number\n  }),\n  xl: PropTypes.shape({\n    span: PropTypes.number.isRequired,\n    offset: PropTypes.number\n  }),\n  className: PropTypes.string\n});\n\nvar Container =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(Container, _PureComponent);\n\n  function Container() {\n    classCallCheck(this, Container);\n    return possibleConstructorReturn(this, getPrototypeOf(Container).apply(this, arguments));\n  }\n\n  createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          fluid = _this$props.fluid,\n          style = _this$props.style;\n      var containerClassName = fluid ? \"container-fluid\" : \"container\";\n      return React.createElement(\"div\", {\n        className: composeClassName([containerClassName, className]),\n        style: style\n      }, children);\n    }\n  }]);\n  return Container;\n}(PureComponent);\n\ndefineProperty(Container, \"propTypes\", {\n  /** True if fluid, false if not. */\n  fluid: PropTypes.bool,\n  className: PropTypes.string,\n  style: PropTypes.object,\n\n  /** Children are rendered into the container */\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired\n});\ndefineProperty(Container, \"defaultProps\", {\n  fluid: false,\n  className: \"\"\n});\nvar css$3 = \".DisplayText {\\n  text-align: left;\\n  margin: 0;\\n  display: block; }\\n  .DisplayText.L {\\n    font-size: 20px;\\n    line-height: 24px; }\\n  .DisplayText.M {\\n    font-size: 16px;\\n    line-height: 24px; }\\n  .DisplayText.S {\\n    font-size: 12px;\\n    line-height: 16px; }\\n  @media screen and (min-width: 1024px) {\\n    .DisplayText.L {\\n      font-size: 24px;\\n      line-height: 32px; }\\n    .DisplayText.M {\\n      font-size: 20px;\\n      line-height: 24px; }\\n    .DisplayText.S {\\n      font-size: 16px;\\n      line-height: 24px; } }\\n  .DisplayText.Centered {\\n    text-align: center; }\\n\";\nstyleInject(css$3);\n\nvar DisplayText =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(DisplayText, _PureComponent);\n\n  function DisplayText() {\n    classCallCheck(this, DisplayText);\n    return possibleConstructorReturn(this, getPrototypeOf(DisplayText).apply(this, arguments));\n  }\n\n  createClass(DisplayText, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          size = _this$props.size,\n          centered = _this$props.centered,\n          className = _this$props.className,\n          whiteText = _this$props.whiteText;\n      var composedClassName = composeClassName([\"DisplayText\".concat(centered ? \" Centered\" : \"\"), size, className, whiteText ? \"whiteText\" : \"\"]);\n\n      switch (size) {\n        case \"L\":\n          return React.createElement(\"h6\", {\n            className: composedClassName\n          }, children);\n\n        case \"M\":\n        case \"S\":\n          return React.createElement(\"span\", {\n            className: composedClassName\n          }, children);\n\n        default:\n          return null;\n      }\n    }\n  }]);\n  return DisplayText;\n}(PureComponent);\n\ndefineProperty(DisplayText, \"propTypes\", {\n  /** CSS class to be added along with default classes */\n  className: PropTypes.string,\n\n  /** The selection for the size of the text */\n  size: PropTypes.oneOf([\"L\", \"M\", \"S\"]).isRequired,\n\n  /** If true, the text is centered; otherwise it is left-aligned */\n  centered: PropTypes.bool,\n\n  /** Color of the text, defaults to brand navy. */\n  whiteText: PropTypes.bool\n});\ndefineProperty(DisplayText, \"defaultProps\", {\n  centered: false,\n  className: \"\",\n  whiteText: false\n});\nvar css$4 = \".Divider {\\n  border-top: 1px solid #f4f6f9;\\n  width: 100%;\\n  max-width: 1152px; }\\n\\na .Divider {\\n  color: #f4f6f9; }\\n\";\nstyleInject(css$4);\n\nvar Divider =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(Divider, _PureComponent);\n\n  function Divider() {\n    classCallCheck(this, Divider);\n    return possibleConstructorReturn(this, getPrototypeOf(Divider).apply(this, arguments));\n  }\n\n  createClass(Divider, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          title = _this$props.title;\n      var composedClassName = composeClassName([\"Divider\", className]);\n      return React.createElement(\"hr\", _extends_1({\n        className: composedClassName\n      }, title ? {\n        title: title\n      } : {}));\n    }\n  }]);\n  return Divider;\n}(PureComponent);\n\ndefineProperty(Divider, \"propTypes\", {\n  className: PropTypes.string,\n\n  /** HTML title tag to allow accessible titles */\n  title: PropTypes.string\n});\ndefineProperty(Divider, \"defaultProps\", {\n  className: \"\"\n});\nvar css$5 = \".Heading {\\n  font-weight: bold;\\n  text-align: left; }\\n  .Heading.Centered {\\n    text-align: center; }\\n    .Heading.Centered.Underlined > div {\\n      margin-left: auto;\\n      margin-right: auto; }\\n  .Heading h1, .Heading h2, .Heading h3, .Heading h4, .Heading h5 {\\n    margin-top: 0;\\n    margin-bottom: 0; }\\n  .Heading .XL {\\n    font-size: 36px;\\n    line-height: 40px; }\\n  .Heading .L {\\n    font-size: 32px;\\n    line-height: 40px; }\\n  .Heading .M {\\n    font-size: 28px;\\n    line-height: 32px; }\\n  .Heading .S {\\n    font-size: 24px;\\n    line-height: 32px; }\\n  @media screen and (min-width: 1024px) {\\n    .Heading .XL {\\n      font-size: 72px;\\n      line-height: 88px; }\\n    .Heading .L {\\n      font-size: 56px;\\n      line-height: 64px; }\\n    .Heading .M {\\n      font-size: 36px;\\n      line-height: 48px; }\\n    .Heading .S {\\n      font-size: 28px;\\n      line-height: 32px; } }\\n  .Heading.Underlined > div {\\n    display: block;\\n    width: 56px;\\n    height: 8px;\\n    margin-top: 16px;\\n    margin-bottom: 0px; }\\n\";\nstyleInject(css$5);\n\nvar Heading =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(Heading, _PureComponent);\n\n  function Heading() {\n    classCallCheck(this, Heading);\n    return possibleConstructorReturn(this, getPrototypeOf(Heading).apply(this, arguments));\n  }\n\n  createClass(Heading, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          size = _this$props.size,\n          centered = _this$props.centered,\n          underlined = _this$props.underlined,\n          underlineColor = _this$props.underlineColor,\n          children = _this$props.children,\n          className = _this$props.className,\n          whiteText = _this$props.whiteText;\n      var headingBody = null;\n\n      switch (size) {\n        case \"XL\":\n          headingBody = React.createElement(\"h1\", {\n            className: \"XL\"\n          }, children);\n          break;\n\n        case \"L\":\n          headingBody = React.createElement(\"h2\", {\n            className: \"L\"\n          }, children);\n          break;\n\n        case \"M\":\n          headingBody = React.createElement(\"h3\", {\n            className: \"M\"\n          }, children);\n          break;\n\n        case \"S\":\n          headingBody = React.createElement(\"h4\", {\n            className: \"S\"\n          }, children);\n          break;\n\n        default:\n          headingBody = null;\n      }\n\n      var underline = underlined ? React.createElement(\"div\", {\n        style: {\n          backgroundColor: underlineColor\n        }\n      }) : null;\n      var classNameList = [className, \"Heading\"];\n\n      if (centered) {\n        classNameList.push(\"Centered\");\n      }\n\n      if (underlined) {\n        classNameList.push(\"Underlined\");\n      }\n\n      if (whiteText) classNameList.push(\"whiteText\");\n      var composedClassName = composeClassName(classNameList);\n      return React.createElement(\"div\", {\n        className: composedClassName\n      }, headingBody, underline);\n    }\n  }]);\n  return Heading;\n}(PureComponent);\n\ndefineProperty(Heading, \"propTypes\", {\n  /** CSS class to be added along with default classes */\n  className: PropTypes.string,\n\n  /** The selection for the size of the heading */\n  size: PropTypes.oneOf([\"XL\", \"L\", \"M\", \"S\"]).isRequired,\n\n  /** If true, the heading is centered; otherwise it is left-aligned */\n  centered: PropTypes.bool,\n\n  /** If true, an underline appears below the heading */\n  underlined: PropTypes.bool,\n\n  /** The RGB color of the underline if it exists */\n  underlineColor: PropTypes.string,\n\n  /** Color of the text, defaults to brand navy. */\n  whiteText: PropTypes.bool\n});\ndefineProperty(Heading, \"defaultProps\", {\n  className: \"\",\n  centered: false,\n  underlined: false,\n  underlineColor: \"#1d2530\",\n  whiteText: false\n});\nvar css$6 = \".Icon.L .IconSize {\\n  width: 64px; }\\n\\n.Icon.M .IconSize {\\n  width: 32px; }\\n\\n.Icon.S .IconSize {\\n  width: 16px; }\\n\\n.Icon.DefaultWhite .ColoredBase {\\n  fill: #ffffff; }\\n  .Icon.DefaultWhite .ColoredBase:hover {\\n    fill: #19294f;\\n    cursor: pointer; }\\n\\n.Icon.DefaultGrey .ColoredBase {\\n  fill: #a8aab7; }\\n  .Icon.DefaultGrey .ColoredBase:hover {\\n    fill: #19294f;\\n    cursor: pointer; }\\n\";\nstyleInject(css$6);\nvar IconPaths = {\n  add: React.createElement(\"path\", {\n    id: \"a-add\",\n    d: \"M6.495 14.488l-.002-4.972-4.981-.002A1.51 1.51 0 1 1 1.51 6.49h4.982l-.002-4.98a1.51 1.51 0 1 1 3.022 0l.003 4.982 4.972.002a1.51 1.51 0 1 1 .001 3.022H9.516l.001 4.972A1.509 1.509 0 0 1 8.007 16a1.513 1.513 0 0 1-1.512-1.512z\"\n  }),\n  avatar: React.createElement(\"path\", {\n    id: \"a-avatar\",\n    d: \"M14 12c0-1.08-1.151-2.018-2.862-2.546A3.98 3.98 0 0 1 8 11a3.98 3.98 0 0 1-3.138-1.546C3.151 9.982 2 10.92 2 12v2h12v-2zm-4-8a2 2 0 1 0-4 0v3a2 2 0 1 0 4 0V4zm5 12H1a1 1 0 0 1-1-1v-3c0-1.864 1.648-3.472 4.068-4.331A3.88 3.88 0 0 1 4 7V4a4 4 0 0 1 8 0v3c0 .229-.03.451-.068.669C14.352 8.528 16 10.136 16 12v3a1 1 0 0 1-1 1z\"\n  }),\n  calendar: React.createElement(\"path\", {\n    id: \"a-calendar\",\n    d: \"M4 9h2V7H4v2zm0 3h2v-2H4v2zm3-3h2V7H7v2zm0 3h2v-2H7v2zm3-3h2V7h-2v2zm0 3h2v-2h-2v2zm4-6a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V6zm0 10H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h2v1a1 1 0 0 0 2 0V0h4v1a1 1 0 0 0 2 0V0h2a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2z\"\n  }),\n  caretLeft: React.createElement(\"path\", {\n    id: \"a-caretLeft\",\n    d: \"M13 0L3 8l10 8z\"\n  }),\n  caretRight: React.createElement(\"path\", {\n    id: \"a-caretRight\",\n    d: \"M3 0l10 8-10 8z\"\n  }),\n  checkmark: React.createElement(\"path\", {\n    id: \"a-checkmark\",\n    d: \"M12.724 5.692L7 11.71a.91.91 0 0 1-1.333 0L3.276 9.197a1.03 1.03 0 0 1 0-1.403.911.911 0 0 1 1.333 0l1.724 1.813 5.057-5.316a.91.91 0 0 1 1.334 0 1.026 1.026 0 0 1 0 1.401\"\n  }),\n  checkmarkSolid: React.createElement(\"path\", {\n    id: \"a-checkmarkSolid\",\n    d: \"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zm-.56 11.01l4.07-4.07a.999.999 0 1 0-1.414-1.415L6.732 8.89l-.829-.829A1 1 0 0 0 4.49 9.475l1.536 1.535a.999.999 0 0 0 1.414 0z\"\n  }),\n  chevronDown: React.createElement(\"path\", {\n    id: \"a-chevronDown\",\n    d: \"M8 5.673L12.875.798a.801.801 0 0 1 1.123.012l.222.222c.314.314.31.826.013 1.124L8.556 7.833a.776.776 0 0 1-.608.221.773.773 0 0 1-.504-.221L1.767 2.156a.801.801 0 0 1 .013-1.124L2.002.81A.803.803 0 0 1 3.125.798L8 5.673z\"\n  }),\n  chevronLeft: React.createElement(\"path\", {\n    id: \"a-chevronLeft\",\n    d: \"M6.384 7.456l4.875 4.876a.801.801 0 0 1-.013 1.123l-.222.222a.803.803 0 0 1-1.123.012L4.224 8.012a.776.776 0 0 1-.222-.608.773.773 0 0 1 .222-.503L9.9 1.224a.801.801 0 0 1 1.123.012l.222.222c.314.314.31.826.013 1.123L6.384 7.456z\"\n  }),\n  chevronRight: React.createElement(\"path\", {\n    id: \"a-chevronRight\",\n    d: \"M9.357 7.315L4.482 2.44a.801.801 0 0 1 .013-1.124l.221-.221a.803.803 0 0 1 1.124-.013l5.677 5.677a.776.776 0 0 1 .222.608.773.773 0 0 1-.222.503L5.84 13.548a.801.801 0 0 1-1.124-.013l-.221-.222a.803.803 0 0 1-.013-1.123l4.875-4.875z\"\n  }),\n  chevronUp: React.createElement(\"path\", {\n    id: \"a-chevronUp\",\n    d: \"M7.74 6.098l-4.874 4.876a.801.801 0 0 1-1.124-.013l-.221-.222a.803.803 0 0 1-.013-1.123l5.677-5.677a.776.776 0 0 1 .608-.222c.186.01.367.086.503.222l5.678 5.677a.801.801 0 0 1-.013 1.123l-.222.222a.803.803 0 0 1-1.123.013L7.74 6.098z\"\n  }),\n  close: React.createElement(\"path\", {\n    id: \"a-close\",\n    d: \"M12.616 15.411l-4.611-4.609-4.62 4.617a1.98 1.98 0 0 1-2.804 0 1.978 1.978 0 0 1 0-2.802L5.201 8 .58 3.383a1.978 1.978 0 0 1 0-2.802 1.98 1.98 0 0 1 2.803 0l4.621 4.617 4.61-4.609A1.98 1.98 0 1 1 15.42 3.39l-4.611 4.611 4.61 4.609a1.978 1.978 0 0 1 0 2.801 1.984 1.984 0 0 1-2.802 0z\"\n  }),\n  closeSolid: React.createElement(\"path\", {\n    id: \"a-closeSolid\",\n    d: \"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm9.315 2.718a.993.993 0 0 0 1.403-1.403L9.41 8.007l1.308-1.309a.993.993 0 0 0-1.403-1.403L8.007 6.603 6.694 5.291a.991.991 0 1 0-1.403 1.403l1.312 1.312-1.312 1.313a.991.991 0 1 0 1.403 1.403L8.007 9.41l1.308 1.308z\"\n  }),\n  dollar: React.createElement(\"path\", {\n    id: \"a-dollar\",\n    d: \"M7.154 16v-1.67c-1.73-.159-3.22-.934-4.154-2.226l2.007-1.828c.676.894 1.75 1.55 3.002 1.55.934 0 1.828-.278 1.828-1.073 0-.755-.715-.954-1.331-1.133l-2.207-.577c-1.709-.457-2.802-1.53-2.802-3.398 0-2.028 1.45-3.538 3.657-3.916V0H9.46v1.73c1.45.198 2.663.774 3.319 1.848L10.79 5.386c-.596-.815-1.63-1.192-2.564-1.192-.874 0-1.57.358-1.57 1.093 0 .616.577.815 1.252.994l2.087.576c1.869.497 3.12 1.51 3.12 3.459 0 2.226-1.629 3.537-3.656 3.915V16H7.154z\"\n  }),\n  download: React.createElement(\"path\", {\n    id: \"a-download\",\n    d: \"M7.61 11.424L4.3 8.114a.552.552 0 1 1 .78-.78l2.368 2.369V.552a.552.552 0 0 1 1.104 0v9.15l2.368-2.368a.552.552 0 1 1 .78.78l-3.31 3.31a.565.565 0 0 1-.084.07l-.043.022c-.017.01-.034.02-.052.028-.018.007-.037.012-.056.017-.016.005-.03.011-.047.014a.551.551 0 0 1-.216 0c-.016-.003-.031-.009-.047-.014-.019-.005-.038-.01-.056-.017-.018-.008-.035-.018-.052-.028-.015-.007-.03-.014-.043-.023a.565.565 0 0 1-.084-.069zm7.838-1.045c.305 0 .552.247.552.552v3.862H0v-3.862a.552.552 0 0 1 1.103 0v2.759h13.794V10.93c0-.305.247-.552.551-.552z\"\n  }),\n  email: React.createElement(\"path\", {\n    id: \"a-email\",\n    d: \"M8.012 9.02L9 10l-1 1-1-1 .01-.01-.986-.977-1.499 1.483-1.027-.989 1.515-1.495-1.495-1.48.99-1.028 3.506 3.513-.002.002zm2.99-1l1.465 1.484-1.026.985L10 9.033l-.96.97-1.029-.99 3.514-3.506.989.988-1.511 1.525zM1.995 2h12.012C15.106 2 16 2.9 16 4.009v7.982A2.003 2.003 0 0 1 14.006 14H1.994C.894 14 0 13.1 0 11.991V4.01C0 2.902.893 2 1.994 2zm1.008 2C2.45 4 2 4.453 2 4.997v6.006c0 .55.456.997 1.002.997h9.996c.553 0 1.002-.453 1.002-.997V4.997c0-.55-.456-.997-1.002-.997H3.002z\"\n  }),\n  global: React.createElement(\"path\", {\n    id: \"a-global\",\n    d: \"M3.012 7.885C3.503 7.83 4.52 7.755 5 8c.831.423 1.734 1.448 1.734 1.448L4.74 11.763A4.956 4.956 0 0 0 8 13a5 5 0 0 0 5-5c0-.473-.086-.922-.209-1.355-.407.475-1.232 1.084-1.232 1.084-.7-.078-.36.788-.36.788.295 1.916-.721 2.152-.721 2.152C9.093 12.092 8 9 8 9c-.256-1.721-.404-2.272-.404-2.272-1.773-1.108-.026-1.512.35-1.576h.011c.09-.013.068-.014-.011 0-.502.069-.406-.236-.71-.788-.307-.557-.682.094-.721 0-.038-.093-.215 1.02-.72 1.182-.505.162-.36-1.182-.36-1.182-.975 1.493-1.294 1.112-1.396.621a4.97 4.97 0 0 0-1.027 2.9M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14\"\n  }),\n  hamburger: React.createElement(\"path\", {\n    id: \"a-hamburger\",\n    d: \"M0 16h16V0H0v16zm3-5h10v1.103H3V11zm0-3.5h10v1.103H3V7.5zM3 4h10v1.103H3V4z\"\n  }),\n  infoSolid: React.createElement(\"path\", {\n    id: \"a-infoSolid\",\n    d: \"M9.619 12.006H6.38c-.213 0-.385-.201-.385-.448s.172-.448.385-.448L7 11V8l-.62-.116c-.213 0-.385-.201-.385-.448s.172-.448.385-.448h2.514c.077 0 .102-.032.113-.058C9.004 6.945 9 6.959 9 7v4l.619.11c.213 0 .386.201.386.448s-.173.448-.386.448zM7 4h.98c.007 0 .013-.004.02-.004.007 0 .013.004.02.004H9v.94c.001.022.012.04.012.061 0 .022-.011.04-.012.061V6h-.967c-.012.001-.022.007-.033.007-.012 0-.022-.006-.033-.007H7v-.939c-.002-.021-.013-.038-.013-.06 0-.021.011-.039.013-.06V4zm1-4a8 8 0 0 0-8 8 8 8 0 1 0 16 0 8 8 0 0 0-8-8z\"\n  }),\n  locationPin: React.createElement(\"path\", {\n    id: \"a-locationPin\",\n    d: \"M7.346 15.243S2 9.313 2 6a6 6 0 1 1 12 0c0 3.314-5.346 9.243-5.346 9.243-.365.427-.947.418-1.308 0zM8 10a4 4 0 1 0 0-8 4 4 0 0 0 0 8zm0-2a2 2 0 1 1 0-4 2 2 0 0 1 0 4z\"\n  }),\n  search: React.createElement(\"path\", {\n    id: \"a-search\",\n    d: \"M9.222 3.033a4.376 4.376 0 1 0-6.19 6.19 4.376 4.376 0 1 0 6.19-6.19m4.552 10.741a.877.877 0 0 1-1.239 0L9.78 11.017c-2.4 1.794-5.804 1.624-7.984-.557a6.126 6.126 0 0 1 0-8.665 6.126 6.126 0 0 1 8.665 0c2.181 2.18 2.351 5.584.557 7.984l2.757 2.757a.876.876 0 0 1 0 1.238\"\n  }),\n  socialFacebook: React.createElement(\"path\", {\n    id: \"a-socialFacebook\",\n    d: \"M9 16V8h3V6H9V4c.193-.78.413-1.343 2-1h1V0c-.25.074-1.112 0-2 0-2.205 0-3.633 1.329-4 4v2H4v2h2v8h3z\"\n  }),\n  socialInstagram: React.createElement(\"path\", {\n    id: \"a-socialInstagram\",\n    d: \"M15.58 2.757c.197.507.333 1.088.37 1.942.044.853.05 1.125.05 3.301s-.012 2.448-.05 3.301c-.037.847-.173 1.435-.37 1.942a3.91 3.91 0 0 1-.922 1.415 3.91 3.91 0 0 1-1.415.922c-.507.197-1.088.333-1.942.37-.853.044-1.125.05-3.301.05s-2.448-.012-3.301-.05c-.847-.037-1.435-.173-1.942-.37a3.91 3.91 0 0 1-1.415-.922 3.91 3.91 0 0 1-.922-1.415C.223 12.736.087 12.155.05 11.3.005 10.448 0 10.176 0 8s.012-2.448.05-3.301c.037-.847.173-1.435.37-1.942a3.91 3.91 0 0 1 .922-1.415A3.91 3.91 0 0 1 2.757.42C3.264.223 3.845.087 4.7.05 5.552.005 5.824 0 8 0s2.448.012 3.301.05c.847.037 1.435.173 1.942.37.525.204.97.476 1.415.922.446.445.718.89.922 1.415zm-1.625 8.198C13.989 10.186 14 9.949 14 8c0-1.95-.011-2.18-.045-2.955-.034-.712-.153-1.096-.254-1.356a2.289 2.289 0 0 0-.548-.842 2.264 2.264 0 0 0-.842-.548c-.255-.101-.644-.22-1.356-.254C10.186 2.005 9.949 2 8 2c-1.95 0-2.18.011-2.955.045-.712.034-1.096.153-1.356.254a2.289 2.289 0 0 0-.842.548 2.264 2.264 0 0 0-.548.842c-.101.255-.22.644-.254 1.356C2.005 5.814 2 6.051 2 8c0 1.95.011 2.18.045 2.955.034.712.153 1.096.254 1.356.136.344.294.587.548.842.255.254.503.418.842.548.255.101.644.22 1.356.254.769.04 1 .045 2.955.045s2.18-.011 2.955-.045c.712-.034 1.096-.153 1.356-.254.344-.136.587-.294.842-.548.254-.255.418-.503.548-.842.101-.255.22-.644.254-1.356zM12 5a1 1 0 1 1 0-2 1 1 0 0 1 0 2zM8 4c2.208 0 4 1.792 4 4s-1.792 4-4 4-4-1.792-4-4 1.792-4 4-4zm0 6c1.102 0 2-.898 2-2a2 2 0 1 0-2 2z\"\n  }),\n  socialLinkedin: React.createElement(\"path\", {\n    id: \"a-socialLinkedin\",\n    d: \"M1.227 5.649H4.13V15H1.227V5.649zM2.684 1a1.687 1.687 0 0 1 0 3.373A1.684 1.684 0 0 1 1 2.686C1 1.756 1.75 1 2.684 1zm3.27 4.649h2.78v1.28h.038c.388-.734 1.333-1.507 2.747-1.507C14.455 5.422 15 7.357 15 9.876V15h-2.898v-4.546c0-1.086-.016-2.481-1.506-2.481-1.511 0-1.738 1.184-1.738 2.4V15H5.96V5.649h-.005z\"\n  }),\n  socialPinterest: React.createElement(\"path\", {\n    id: \"a-socialPinterest\",\n    d: \"M8.234 0C3.51 0 1 2.81 1 5.874c0 1.42.855 3.193 2.224 3.755.207.087.32.05.368-.13.04-.135.22-.79.307-1.099.027-.099.013-.185-.074-.278-.454-.488-.815-1.377-.815-2.211 0-2.137 1.83-4.212 4.943-4.212 2.692 0 4.576 1.624 4.576 3.946 0 2.625-1.497 4.441-3.44 4.441-1.076 0-1.877-.784-1.623-1.754.307-1.155.908-2.396.908-3.23 0-.747-.454-1.365-1.383-1.365-1.095 0-1.983 1.007-1.983 2.36 0 .858.327 1.438.327 1.438L4.052 12.36c-.34 1.285.047 3.367.08 3.546.02.099.14.13.208.05.107-.13 1.416-1.866 1.783-3.12l.681-2.31c.361.605 1.403 1.112 2.512 1.112 3.3 0 5.684-2.693 5.684-6.035C14.987 2.397 12.034 0 8.234 0\"\n  }),\n  socialTwitter: React.createElement(\"path\", {\n    id: \"a-socialTwitter\",\n    d: \"M16 3.42a6.945 6.945 0 0 1-1.885.477c.677-.375 1.198-.968 1.443-1.675-.634.346-1.336.6-2.084.734A3.415 3.415 0 0 0 11.077 2C9.264 2 7.795 3.356 7.795 5.03c0 .236.028.468.084.69-2.728-.127-5.146-1.333-6.766-3.166A2.844 2.844 0 0 0 .67 4.077c0 1.052.58 1.979 1.46 2.522A3.483 3.483 0 0 1 .643 6.22v.038c0 1.468 1.13 2.693 2.632 2.971a3.564 3.564 0 0 1-1.482.052c.418 1.203 1.63 2.079 3.066 2.104a6.941 6.941 0 0 1-4.076 1.297c-.265 0-.526-.014-.783-.042A9.871 9.871 0 0 0 5.032 14c6.037 0 9.34-4.616 9.34-8.62 0-.13-.004-.261-.01-.392A6.4 6.4 0 0 0 16 3.42z\"\n  }),\n  socialVimeo: React.createElement(\"path\", {\n    id: \"a-socialVimeo\",\n    d: \"M15.992 4.234c-.07 1.577-1.157 3.735-3.263 6.473C10.554 13.569 8.711 15 7.206 15c-.932 0-1.725-.873-2.368-2.613-.429-1.6-.863-3.193-1.291-4.792-.477-1.74-.991-2.613-1.543-2.613-.118 0-.541.255-1.254.764L0 4.765c.788-.7 1.57-1.404 2.336-2.109 1.055-.921 1.843-1.404 2.373-1.453 1.243-.119 2.01.743 2.299 2.586.31 1.99.525 3.226.648 3.708.359 1.648.755 2.478 1.184 2.478.332 0 .836-.537 1.51-1.605.67-1.068 1.03-1.887 1.077-2.445.097-.921-.262-1.388-1.076-1.388-.386 0-.777.087-1.184.266.787-2.608 2.287-3.87 4.505-3.8 1.64.038 2.416 1.117 2.32 3.23z\"\n  }),\n  subtract: React.createElement(\"rect\", {\n    id: \"a-subtract\",\n    width: \"12\",\n    height: \"2\",\n    x: \"2\",\n    y: \"7\",\n    rx: \"1\"\n  })\n};\n\nvar Icon =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(Icon, _PureComponent);\n\n  function Icon() {\n    classCallCheck(this, Icon);\n    return possibleConstructorReturn(this, getPrototypeOf(Icon).apply(this, arguments));\n  }\n\n  createClass(Icon, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          icon = _this$props.icon,\n          size = _this$props.size,\n          defaultColor = _this$props.defaultColor,\n          className = _this$props.className,\n          title = _this$props.title,\n          role = _this$props.role;\n      var composedClassName = composeClassName([\"Icon \".concat(icon, \" \").concat(size, \" \").concat(defaultColor), title, role, className]);\n      var path = Icon.IconPath[icon];\n      var maskId = \"icon-\".concat(icon);\n      var maskLinkId = \"#a-\".concat(icon);\n      var maskUrlRef = \"url(#icon-\".concat(icon, \")\");\n      var iconLabel = \"\".concat(icon, \"-label\");\n      return React.createElement(\"span\", {\n        className: composedClassName\n      }, React.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n        className: \"IconSize\",\n        viewBox: \"0 0 16 16\",\n        role: role,\n        \"aria-labelledby\": iconLabel\n      }, React.createElement(\"title\", {\n        id: iconLabel\n      }, title || \"\".concat(icon, \" icon\")), React.createElement(\"defs\", null, path), React.createElement(\"g\", {\n        fill: \"none\",\n        fillRule: \"evenodd\"\n      }, React.createElement(\"mask\", {\n        id: maskId,\n        fill: \"#fff\"\n      }, React.createElement(\"use\", {\n        xlinkHref: maskLinkId\n      })), React.createElement(\"g\", {\n        mask: maskUrlRef\n      }, React.createElement(\"path\", {\n        className: \"ColoredBase\",\n        d: \"M0 0h16v16H0z\"\n      })))));\n    }\n  }]);\n  return Icon;\n}(PureComponent);\n\ndefineProperty(Icon, \"IconPath\", IconPaths);\ndefineProperty(Icon, \"propTypes\", {\n  className: PropTypes.string,\n\n  /** The selection for the displayed icon */\n  icon: PropTypes.oneOf(Object.keys(Icon.IconPath)).isRequired,\n\n  /** The selection for the size of the icon */\n  size: PropTypes.oneOf([\"S\", \"M\", \"L\"]).isRequired,\n\n  /** The selection for the default color of the icon */\n  defaultColor: PropTypes.oneOf([\"DefaultGrey\", \"DefaultWhite\"]),\n\n  /** The description of the icon, defaults to the name of the icon */\n  title: PropTypes.string,\n\n  /** The role of the icon, defaults to the role of an image */\n  role: PropTypes.string\n});\ndefineProperty(Icon, \"defaultProps\", {\n  className: \"\",\n  size: \"M\",\n  defaultColor: \"DefaultGrey\",\n  title: \"\",\n  role: \"img\"\n});\nvar css$7 = \".IframeContainer iframe {\\n  width: 100%;\\n  min-height: 100px;\\n  /* TODO: decide on default height */\\n  overflow: hidden;\\n  border: none;\\n  margin: 0;\\n  padding: 0; }\\n\";\nstyleInject(css$7);\n\nvar Iframe =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(Iframe, _PureComponent);\n\n  function Iframe() {\n    classCallCheck(this, Iframe);\n    return possibleConstructorReturn(this, getPrototypeOf(Iframe).apply(this, arguments));\n  }\n\n  createClass(Iframe, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          height = _this$props.height,\n          sourceUrl = _this$props.sourceUrl,\n          title = _this$props.title;\n      var composedClassName = composeClassName([\"Iframe\", className]);\n      return React.createElement(\"div\", {\n        className: \"IframeContainer\"\n      }, React.createElement(\"iframe\", {\n        height: height,\n        className: composedClassName,\n        title: title,\n        src: sourceUrl,\n        scrolling: \"no\"\n      }));\n    }\n  }]);\n  return Iframe;\n}(PureComponent);\n\ndefineProperty(Iframe, \"propTypes\", {\n  className: PropTypes.string,\n  height: PropTypes.string,\n  sourceUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired\n});\ndefineProperty(Iframe, \"defaultProps\", {\n  className: \"\",\n  height: \"\"\n});\nvar css$8 = \".Image {\\n  width: 100%;\\n  height: 100%; }\\n  .Image img {\\n    object-fit: cover;\\n    width: 100%;\\n    height: 100%; }\\n  .Image.Circular {\\n    border-radius: 50%;\\n    position: relative;\\n    overflow: hidden;\\n    padding-bottom: 100%; }\\n    .Image.Circular img {\\n      position: absolute; }\\n\";\nstyleInject(css$8);\n\nvar Image =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(Image, _PureComponent);\n\n  function Image() {\n    classCallCheck(this, Image);\n    return possibleConstructorReturn(this, getPrototypeOf(Image).apply(this, arguments));\n  }\n\n  createClass(Image, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          altText = _this$props.altText,\n          className = _this$props.className,\n          circular = _this$props.circular,\n          longdesc = _this$props.longdesc,\n          mobileSource = _this$props.mobileSource,\n          source = _this$props.source; // If we don't care about it updating on resize, we don't need any state\n\n      var isMobile = browser.window.innerWidth < 768;\n      var composedClassName = composeClassName([\"Image\", className, circular ? \"Circular\" : \"\"]);\n\n      if (isMobile) {\n        return React.createElement(\"div\", {\n          className: composedClassName\n        }, React.createElement(\"img\", _extends_1({\n          src: mobileSource || source,\n          alt: altText\n        }, longdesc ? {\n          longdesc: longdesc\n        } : {})));\n      }\n\n      return React.createElement(\"div\", {\n        className: composedClassName\n      }, React.createElement(\"img\", _extends_1({\n        src: source,\n        alt: altText\n      }, longdesc ? {\n        longdesc: longdesc\n      } : {})));\n    }\n  }]);\n  return Image;\n}(PureComponent);\n\ndefineProperty(Image, \"propTypes\", {\n  className: PropTypes.string,\n\n  /** The source file for the main image */\n  source: PropTypes.string.isRequired,\n\n  /** The source file for the mobile image */\n  mobileSource: PropTypes.string,\n\n  /** The essential information conveyed by an image the purposes of the image */\n  altText: PropTypes.string.isRequired,\n\n  /** A long description is used for each img element\n   *  that does not have Alt text conveying the same information as the image. */\n  longdesc: PropTypes.string,\n\n  /** If true, the image is in a circular container */\n  circular: PropTypes.bool\n});\ndefineProperty(Image, \"defaultProps\", {\n  circular: false,\n  className: \"\"\n});\nvar css$9 = \".ImageBackground {\\n  width: 100%;\\n  height: 100%;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  background-position: center; }\\n\";\nstyleInject(css$9);\n\nvar ImageBackground =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(ImageBackground, _PureComponent);\n\n  function ImageBackground() {\n    classCallCheck(this, ImageBackground);\n    return possibleConstructorReturn(this, getPrototypeOf(ImageBackground).apply(this, arguments));\n  }\n\n  createClass(ImageBackground, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          children = _this$props.children,\n          mobileSource = _this$props.mobileSource,\n          source = _this$props.source;\n      var isMobile = browser.window.innerWidth < 768;\n      var imageSource = isMobile && mobileSource ? mobileSource : source;\n      var composedClassName = composeClassName([\"ImageBackground\", className]);\n      return React.createElement(\"div\", {\n        className: composedClassName,\n        style: {\n          backgroundImage: \"url(\".concat(imageSource, \")\")\n        }\n      }, children);\n    }\n  }]);\n  return ImageBackground;\n}(PureComponent);\n\ndefineProperty(ImageBackground, \"propTypes\", {\n  /** The source file for the main image */\n  source: PropTypes.string.isRequired,\n\n  /** The source file for the mobile image */\n  mobileSource: PropTypes.string,\n  className: PropTypes.string\n});\ndefineProperty(ImageBackground, \"defaultProps\", {\n  circular: false,\n  className: \"\"\n});\nvar css$a = \".Label {\\n  width: 100%; }\\n  .Label span {\\n    display: block;\\n    font-family: soleil;\\n    text-transform: uppercase;\\n    font-weight: 700;\\n    font-size: 12px;\\n    line-height: 16px; }\\n\";\nstyleInject(css$a);\n\nvar Label =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(Label, _PureComponent);\n\n  function Label() {\n    classCallCheck(this, Label);\n    return possibleConstructorReturn(this, getPrototypeOf(Label).apply(this, arguments));\n  }\n\n  createClass(Label, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          htmlFor = _this$props.htmlFor,\n          children = _this$props.children,\n          label = _this$props.label,\n          whiteText = _this$props.whiteText;\n      var composedClassName = composeClassName([\"Label\", className]);\n      var spanClassName = composeClassName([\"LabelSpan\", whiteText ? \"whiteText\" : \"\"]);\n      return React.createElement(\"label\", {\n        htmlFor: htmlFor,\n        className: composedClassName\n      }, React.createElement(\"span\", {\n        className: spanClassName\n      }, label), children);\n    }\n  }]);\n  return Label;\n}(PureComponent);\n\ndefineProperty(Label, \"propTypes\", {\n  className: PropTypes.string,\n\n  /** Indicates to which element ID this label referred */\n  htmlFor: PropTypes.string.isRequired,\n\n  /** Text to be rendered */\n  label: PropTypes.string,\n  whiteText: PropTypes.bool\n});\ndefineProperty(Label, \"defaultProps\", {\n  className: \"\",\n  label: null,\n  whiteText: false\n});\nvar css$b = \".ModalWrapper {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  position: fixed !important;\\n  top: 0 !important;\\n  left: 0 !important;\\n  width: 100% !important;\\n  height: 100% !important;\\n  background-color: rgba(0, 0, 0, 0.8);\\n  z-index: 9999; }\\n\";\nstyleInject(css$b);\n\nvar ModalWrapper =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(ModalWrapper, _PureComponent);\n\n  function ModalWrapper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    classCallCheck(this, ModalWrapper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = possibleConstructorReturn(this, (_getPrototypeOf2 = getPrototypeOf(ModalWrapper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    defineProperty(assertThisInitialized(_this), \"_handleOnKeyDown\", function (event) {\n      // close on Escape\n      if (event.keyCode === 27) {\n        var closeHandler = _this.props.closeHandler;\n        closeHandler();\n      }\n    });\n    return _this;\n  }\n\n  createClass(ModalWrapper, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          ariaLabel = _this$props.ariaLabel,\n          ariaDescribedBy = _this$props.ariaDescribedBy,\n          children = _this$props.children,\n          className = _this$props.className,\n          open = _this$props.open;\n      var composedClassName = composeClassName([\"ModalWrapper\", className]);\n\n      if (!open) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: composedClassName,\n        tabIndex: \"-1\",\n        \"aria-modal\": \"true\",\n        \"aria-label\": ariaLabel,\n        \"aria-describedby\": ariaDescribedBy,\n        role: \"dialog\",\n        onKeyDown: this._handleOnKeyDown\n      }, React.createElement(\"div\", {\n        className: composeClassName([\"Modal\"])\n      }, children));\n    }\n  }]);\n  return ModalWrapper;\n}(PureComponent);\n\ndefineProperty(ModalWrapper, \"propTypes\", {\n  closeHandler: PropTypes.func.isRequired,\n  ariaLabel: PropTypes.string,\n  ariaDescribedBy: PropTypes.string,\n  className: PropTypes.string,\n  open: PropTypes.bool\n});\ndefineProperty(ModalWrapper, \"defaultProps\", {\n  ariaLabel: \"modal\",\n  open: false\n});\nvar css$c = \".VideoPlayerContainer {\\n  width: 100%;\\n  padding-top: 56.25%;\\n  /* 16:9 Aspect Ratio */\\n  position: relative; }\\n  .VideoPlayerContainer .VideoPlayer {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    right: 0;\\n    width: 100%;\\n    height: 100%; }\\n\";\nstyleInject(css$c);\n\nvar VideoPlayer =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(VideoPlayer, _PureComponent);\n\n  function VideoPlayer() {\n    classCallCheck(this, VideoPlayer);\n    return possibleConstructorReturn(this, getPrototypeOf(VideoPlayer).apply(this, arguments));\n  }\n\n  createClass(VideoPlayer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          allowFullScreen = _this$props.allowFullScreen,\n          autoplay = _this$props.autoplay,\n          className = _this$props.className,\n          source = _this$props.source,\n          title = _this$props.title,\n          videoId = _this$props.videoId;\n      var composedClassName = composeClassName([\"VideoPlayer\", className]);\n      var SOURCE_URL = {\n        youtube: \"https://www.youtube.com/embed/\",\n        vimeo: \"https://player.vimeo.com/video/\"\n      };\n      var baseUrl = SOURCE_URL[source];\n      var queryString = \"autoplay=\".concat(autoplay ? \"1\" : \"0\");\n      return React.createElement(\"div\", {\n        className: \"VideoPlayerContainer\"\n      }, React.createElement(\"iframe\", {\n        className: composedClassName,\n        title: title,\n        src: \"\".concat(baseUrl).concat(videoId, \"?\").concat(queryString),\n        allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: allowFullScreen,\n        tabIndex: \"-1\"\n      }));\n    }\n  }]);\n  return VideoPlayer;\n}(PureComponent);\n\ndefineProperty(VideoPlayer, \"propTypes\", {\n  allowFullScreen: PropTypes.bool,\n  autoplay: PropTypes.bool,\n  className: PropTypes.string,\n\n  /** Video Player source */\n  source: PropTypes.oneOf([\"vimeo\", \"youtube\"]),\n\n  /** Video Title, required for Accessibility */\n  title: PropTypes.string.isRequired,\n\n  /** Video Player URL Id, for each player source its different,\n   * can be found at sharing options of the video */\n  videoId: PropTypes.string.isRequired\n});\ndefineProperty(VideoPlayer, \"defaultProps\", {\n  allowFullScreen: true,\n  autoplay: false,\n  className: \"\",\n  frameBorder: \"0\",\n  source: \"youtube\"\n});\nvar index$1 =\n/*#__PURE__*/\nObject.freeze({\n  BaseLink: BaseLink,\n  BodyText: BodyText,\n  Button: Button,\n  Col: Col,\n  Container: Container,\n  DisplayText: DisplayText,\n  Divider: Divider,\n  Heading: Heading,\n  Icon: Icon,\n  Iframe: Iframe,\n  Image: Image,\n  ImageBackground: ImageBackground,\n  Label: Label,\n  ModalWrapper: ModalWrapper,\n  VideoPlayer: VideoPlayer\n});\nvar css$d = \".Accordion {\\n  box-sizing: border-box;\\n  width: 100%;\\n  margin: 0;\\n  padding: 0; }\\n\";\nstyleInject(css$d);\n\nvar Accordion =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(Accordion, _PureComponent);\n\n  function Accordion() {\n    classCallCheck(this, Accordion);\n    return possibleConstructorReturn(this, getPrototypeOf(Accordion).apply(this, arguments));\n  }\n\n  createClass(Accordion, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          name = _this$props.name;\n      var composedClassName = composeClassName([\"Accordion\", className]);\n      var childrenToRender = React.Children.map(children, function (child) {\n        return React.cloneElement(child, {\n          name: name\n        });\n      });\n      return React.createElement(\"ul\", {\n        className: composedClassName,\n        \"aria-label\": \"Accordion Control Group Buttons\"\n      }, childrenToRender);\n    }\n  }]);\n  return Accordion;\n}(PureComponent);\n\ndefineProperty(Accordion, \"propTypes\", {\n  className: PropTypes.string,\n  name: PropTypes.string\n});\ndefineProperty(Accordion, \"defaultProps\", {\n  className: \"\"\n});\nvar css$e = \".AccordionItem {\\n  width: 100%;\\n  background-color: #f4f6f9;\\n  margin-top: 8px;\\n  margin-bottom: 8px;\\n  list-style-type: none;\\n  box-sizing: border-box; }\\n  .AccordionItem .AccordionItemIcon {\\n    margin-left: auto;\\n    margin-right: 0px;\\n    align-self: center; }\\n  .AccordionItem .AccordionItemHeader {\\n    width: 100%;\\n    height: 88px;\\n    display: flex;\\n    align-items: center;\\n    padding: 16px;\\n    box-sizing: border-box;\\n    border: none;\\n    background: inherit; }\\n  .AccordionItem .AccordionItemContent {\\n    width: 100%;\\n    padding: 16px;\\n    box-sizing: border-box; }\\n  .AccordionItem .Collapsed {\\n    display: none; }\\n\";\nstyleInject(css$e);\nvar css$f = \".ButtonIconContainer {\\n  display: inline-block; }\\n\\n.ButtonContainer .Button.ButtonIcon {\\n  padding-top: 2px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n  .ButtonContainer .Button.ButtonIcon.L {\\n    width: 48px; }\\n  .ButtonContainer .Button.ButtonIcon.M {\\n    width: 48px; }\\n  .ButtonContainer .Button.ButtonIcon.S {\\n    width: 48px; }\\n  .ButtonContainer .Button.ButtonIcon:hover .Icon .ColoredBase {\\n    fill: #19294f; }\\n  .ButtonContainer .Button.ButtonIcon:hover:disabled .Icon .ColoredBase {\\n    fill: #ffffff;\\n    cursor: not-allowed; }\\n  .ButtonContainer .Button.ButtonIcon:active .Icon .ColoredBase {\\n    fill: #19294f; }\\n\";\nstyleInject(css$f);\n\nvar ButtonIcon =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(ButtonIcon, _PureComponent);\n\n  function ButtonIcon() {\n    classCallCheck(this, ButtonIcon);\n    return possibleConstructorReturn(this, getPrototypeOf(ButtonIcon).apply(this, arguments));\n  }\n\n  createClass(ButtonIcon, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          autoFocus = _this$props.autoFocus,\n          children = _this$props.children,\n          className = _this$props.className,\n          disabled = _this$props.disabled,\n          external = _this$props.external,\n          href = _this$props.href,\n          icon = _this$props.icon,\n          internalLinkComponent = _this$props.internalLinkComponent,\n          onClickHandler = _this$props.onClickHandler,\n          role = _this$props.role,\n          size = _this$props.size,\n          tabIndex = _this$props.tabIndex,\n          theme = _this$props.theme,\n          title = _this$props.title,\n          type = _this$props.type,\n          a11yProps = _this$props.a11yProps;\n      var buttonProps = {\n        autoFocus: autoFocus,\n        children: children,\n        disabled: disabled,\n        onClickHandler: onClickHandler,\n        size: size,\n        tabIndex: tabIndex,\n        theme: theme,\n        type: type,\n        a11yProps: a11yProps\n      };\n      var iconProps = {\n        icon: icon,\n        role: role\n      };\n      var linkProps = {\n        external: external,\n        href: href,\n        internalLinkComponent: internalLinkComponent,\n        title: title\n      };\n      var composedClassName = composeClassName([className, \"ButtonIcon\", size, theme]);\n      var button = React.createElement(Button, _extends_1({\n        className: composedClassName\n      }, buttonProps), React.createElement(Icon, _extends_1({\n        className: \"Icon\",\n        size: \"S\",\n        defaultColor: theme.includes(\"Primary\") ? \"DefaultWhite\" : \"DefaultGrey\"\n      }, iconProps)));\n\n      if (onClickHandler || disabled) {\n        return button;\n      }\n\n      return React.createElement(BaseLink, _extends_1({\n        className: \"ButtonIconContainer\",\n        tabIndex: \"-1\"\n      }, linkProps), button);\n    }\n  }]);\n  return ButtonIcon;\n}(PureComponent);\n\ndefineProperty(ButtonIcon, \"propTypes\", {\n  className: PropTypes.string,\n  onClickHandler: PropTypes.func,\n  disabled: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n\n  /** The selection for the size of the button */\n  size: PropTypes.oneOf([\"L\", \"M\", \"S\"]),\n  tabIndex: PropTypes.string,\n\n  /** The selection for the theme of the button */\n  theme: PropTypes.oneOf([\"Primary\", \"Tertiary\"]),\n\n  /** The selection for the HTML type of the button */\n  type: PropTypes.oneOf([\"button\", \"reset\", \"submit\"]),\n  icon: PropTypes.oneOf(Object.keys(Icon.IconPath)).isRequired,\n\n  /** The component used as the internal link handler when `internal` is true */\n  internalLinkComponent: PropTypes.any,\n\n  /** The role of the icon */\n  role: PropTypes.string,\n\n  /** The title attribute of the anchor tag, required for accessibility */\n  title: PropTypes.string,\n  external: PropTypes.bool,\n  href: PropTypes.string,\n  a11yProps: PropTypes.object\n});\ndefineProperty(ButtonIcon, \"defaultProps\", {\n  autoFocus: false,\n  disabled: false,\n  external: false,\n  href: \"\",\n  internalLinkComponent: null,\n  onClickHandler: null,\n  role: \"img\",\n  size: \"M\",\n  tabIndex: \"\",\n  theme: \"Primary\",\n  title: \"\",\n  type: \"button\"\n});\n\nvar AccordionItem =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(AccordionItem, _PureComponent);\n\n  function AccordionItem(props) {\n    var _this;\n\n    classCallCheck(this, AccordionItem);\n    _this = possibleConstructorReturn(this, getPrototypeOf(AccordionItem).call(this, props));\n    defineProperty(assertThisInitialized(_this), \"onClickHandler\", function () {\n      // Toggle state of being open\n      _this.setState(function (prevState) {\n        return {\n          open: !prevState.open\n        };\n      });\n    });\n    _this.state = {\n      open: props.defaultOpen\n    };\n    return _this;\n  }\n\n  createClass(AccordionItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          header = _this$props.header,\n          children = _this$props.children,\n          className = _this$props.className,\n          id = _this$props.id,\n          name = _this$props.name,\n          title = _this$props.title;\n      var open = this.state.open;\n      var composedClassName = composeClassName([\"AccordionItem\", !open ? \"Collapsed\" : \"\", className]);\n      var headerElements = header;\n\n      if (title) {\n        headerElements = React.createElement(DisplayText, {\n          size: \"L\",\n          className: \"AccordionItemTitle\"\n        }, StringUtils.formatMax(title, 110));\n      }\n\n      var content = React.createElement(\"div\", null, children);\n\n      if (typeof children === \"string\") {\n        content = React.createElement(BodyText, {\n          size: \"M\"\n        }, children);\n      }\n\n      return React.createElement(\"li\", {\n        className: composedClassName\n      }, React.createElement(\"div\", {\n        className: \"AccordionItemHeader\"\n      }, headerElements, React.createElement(\"div\", {\n        className: \"AccordionItemIcon\"\n      }, React.createElement(ButtonIcon, {\n        onClickHandler: this.onClickHandler,\n        type: \"button\",\n        title: open ? \"collapse\" : \"expand\",\n        icon: open ? \"chevronUp\" : \"chevronDown\",\n        size: \"L\",\n        theme: \"Tertiary\",\n        a11yProps: {\n          id: \"\".concat(name, \"-control-\").concat(id),\n          \"aria-expanded\": open,\n          \"aria-controls\": \"\".concat(name, \"-content-\").concat(id)\n        }\n      }))), React.createElement(\"div\", {\n        className: \"AccordionItemContent \".concat(!open ? \"Collapsed\" : \"\"),\n        id: \"\".concat(name, \"-content-\").concat(id),\n        \"aria-hidden\": !open,\n        \"aria-labelledby\": \"\".concat(name, \"-control-\").concat(id)\n      }, content));\n    }\n  }]);\n  return AccordionItem;\n}(PureComponent);\n\ndefineProperty(AccordionItem, \"propTypes\", {\n  className: PropTypes.string,\n\n  /** DEPRECATED: The title displayed on the accordion item */\n  title: PropTypes.string,\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string,\n  defaultOpen: PropTypes.bool,\n\n  /** The content of the top of the accordion, which displays when the accordion is collapsed */\n  header: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)])\n});\ndefineProperty(AccordionItem, \"defaultProps\", {\n  className: \"\",\n  defaultOpen: false,\n  header: []\n});\nvar css$g = \".ButtonContainer .Button.ButtonGhost {\\n  border: none;\\n  background-color: transparent; }\\n\";\nstyleInject(css$g);\n\nvar ButtonGhost =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(ButtonGhost, _PureComponent);\n\n  function ButtonGhost() {\n    classCallCheck(this, ButtonGhost);\n    return possibleConstructorReturn(this, getPrototypeOf(ButtonGhost).apply(this, arguments));\n  }\n\n  createClass(ButtonGhost, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          autoFocus = _this$props.autoFocus,\n          children = _this$props.children,\n          className = _this$props.className,\n          disabled = _this$props.disabled,\n          onClickHandler = _this$props.onClickHandler,\n          tabIndex = _this$props.tabIndex,\n          type = _this$props.type;\n      var buttonProps = {\n        autoFocus: autoFocus,\n        disabled: disabled,\n        onClickHandler: onClickHandler,\n        tabIndex: tabIndex,\n        type: type\n      };\n      var composedClassName = composeClassName([className, \"ButtonGhost\"]);\n      return React.createElement(Button, _extends_1({\n        theme: \"Tertiary\",\n        size: \"L\"\n      }, buttonProps, {\n        className: composedClassName\n      }), React.createElement(\"div\", null, React.createElement(\"div\", null, children), React.createElement(Icon, {\n        icon: \"chevronDown\",\n        size: \"S\"\n      })));\n    }\n  }]);\n  return ButtonGhost;\n}(PureComponent);\n\ndefineProperty(ButtonGhost, \"propTypes\", {\n  /** Optional attribute for keyboard Accessibility to fix tabindex issues */\n  autoFocus: PropTypes.bool,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClickHandler: PropTypes.func,\n\n  /** Optional attribute for keyboard Accessibility */\n  tabIndex: PropTypes.string,\n\n  /** The selection for the HTML type of the button */\n  type: PropTypes.oneOf([\"button\", \"reset\", \"submit\"])\n});\nvar css$h = \".ButtonContainer .Button.ButtonVideo {\\n  width: 180px;\\n  height: 100px;\\n  background-color: transparent;\\n  border-style: none;\\n  padding: 0; }\\n  .ButtonContainer .Button.ButtonVideo .Circle {\\n    margin: auto;\\n    width: 64px;\\n    height: 64px;\\n    border-radius: 50%;\\n    background-color: #ffffff;\\n    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.5); }\\n    .ButtonContainer .Button.ButtonVideo .Circle.Dark {\\n      background-color: #19294f; }\\n    .ButtonContainer .Button.ButtonVideo .Circle .Icon {\\n      margin-top: 18px;\\n      margin-left: 23px;\\n      fill: #19294f;\\n      stroke: #19294f; }\\n      .ButtonContainer .Button.ButtonVideo .Circle .Icon.Dark {\\n        fill: #ffffff;\\n        stroke: #ffffff; }\\n  .ButtonContainer .Button.ButtonVideo .DisplayText {\\n    padding-top: 10px;\\n    width: 180px;\\n    color: #ffffff;\\n    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }\\n  .ButtonContainer .Button.ButtonVideo .DisplayText.Dark {\\n    color: #19294f; }\\n  .ButtonContainer .Button.ButtonVideo:focus {\\n    border: 1px solid #00aeef;\\n    outline: none; }\\n  .ButtonContainer .Button.ButtonVideo:hover, .ButtonContainer .Button.ButtonVideo :active {\\n    border-style: none;\\n    background-color: transparent; }\\n    .ButtonContainer .Button.ButtonVideo:hover .Circle, .ButtonContainer .Button.ButtonVideo :active .Circle {\\n      background-color: #19294f; }\\n      .ButtonContainer .Button.ButtonVideo:hover .Circle.Dark, .ButtonContainer .Button.ButtonVideo :active .Circle.Dark {\\n        background-color: #ffffff; }\\n      .ButtonContainer .Button.ButtonVideo:hover .Circle .Icon, .ButtonContainer .Button.ButtonVideo :active .Circle .Icon {\\n        fill: #ffffff;\\n        stroke: #ffffff; }\\n        .ButtonContainer .Button.ButtonVideo:hover .Circle .Icon.Dark, .ButtonContainer .Button.ButtonVideo :active .Circle .Icon.Dark {\\n          fill: #19294f;\\n          stroke: #19294f; }\\n    .ButtonContainer .Button.ButtonVideo:hover .DisplayText, .ButtonContainer .Button.ButtonVideo :active .DisplayText {\\n      color: #19294f; }\\n      .ButtonContainer .Button.ButtonVideo:hover .DisplayText.Dark, .ButtonContainer .Button.ButtonVideo :active .DisplayText.Dark {\\n        color: #ffffff; }\\n\";\nstyleInject(css$h);\n\nvar ButtonVideo =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(ButtonVideo, _PureComponent);\n\n  function ButtonVideo() {\n    classCallCheck(this, ButtonVideo);\n    return possibleConstructorReturn(this, getPrototypeOf(ButtonVideo).apply(this, arguments));\n  }\n\n  createClass(ButtonVideo, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          buttonRef = _this$props.buttonRef,\n          onClickHandler = _this$props.onClickHandler,\n          autoFocus = _this$props.autoFocus,\n          noDisplayText = _this$props.noDisplayText,\n          tabIndex = _this$props.tabIndex,\n          theme = _this$props.theme;\n      var buttonProps = {\n        onClickHandler: onClickHandler,\n        autoFocus: autoFocus,\n        tabIndex: tabIndex,\n        buttonRef: buttonRef\n      };\n      var composedClassName = composeClassName([\"ButtonVideo\", className]);\n      var themeClass = theme === \"dark\" ? \"Dark\" : null;\n      var playTriangle = React.createElement(\"svg\", {\n        className: composeClassName([\"Icon\", themeClass]),\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"48\",\n        height: \"52\",\n        viewBox: \"0 0 16 16\"\n      }, React.createElement(\"path\", {\n        fillRule: \"evenodd\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        d: \"M6.972 4L.5 7.883V.117L6.972 4z\"\n      }));\n      var displayText = noDisplayText ? null : React.createElement(DisplayText, {\n        className: composeClassName([\"DisplayText\", themeClass]),\n        centered: true,\n        size: \"M\"\n      }, \"watch the video\");\n      return React.createElement(Button, _extends_1({\n        title: noDisplayText ? \"Watch the Video\" : \"\",\n        className: composedClassName,\n        type: \"button\"\n      }, buttonProps), React.createElement(\"div\", {\n        className: composeClassName([\"Circle\", themeClass])\n      }, playTriangle), displayText);\n    }\n  }]);\n  return ButtonVideo;\n}(PureComponent);\n\ndefineProperty(ButtonVideo, \"propTypes\", {\n  autoFocus: PropTypes.bool,\n  buttonRef: PropTypes.shape({\n    current: PropTypes.instanceOf(browser.Element)\n  }),\n  className: PropTypes.string,\n  noDisplayText: PropTypes.bool,\n  onClickHandler: PropTypes.func,\n  tabIndex: PropTypes.string,\n  theme: PropTypes.oneOf([\"light\", \"dark\"])\n});\ndefineProperty(ButtonVideo, \"defaultProps\", {\n  onClickHandler: null,\n  autoFocus: false,\n  noDisplayText: false,\n  tabIndex: \"\",\n  theme: \"light\"\n});\nvar css$i = \".ButtonContainer .Button.ButtonCloseModal {\\n  position: absolute;\\n  right: 30px;\\n  top: 30px;\\n  width: auto;\\n  height: auto;\\n  background-color: transparent;\\n  border-style: none;\\n  padding: 0; }\\n  .ButtonContainer .Button.ButtonCloseModal:focus {\\n    border: 1px solid #00aeef;\\n    outline: none; }\\n  .ButtonContainer .Button.ButtonCloseModal:hover, .ButtonContainer .Button.ButtonCloseModal :active {\\n    border-style: none;\\n    background-color: transparent; }\\n  .ButtonContainer .Button.ButtonCloseModal .Icon .ColoredBase:hover {\\n    fill: #a8aab7;\\n    cursor: pointer; }\\n\";\nstyleInject(css$i);\n\nvar ButtonCloseModal =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(ButtonCloseModal, _PureComponent);\n\n  function ButtonCloseModal() {\n    classCallCheck(this, ButtonCloseModal);\n    return possibleConstructorReturn(this, getPrototypeOf(ButtonCloseModal).apply(this, arguments));\n  }\n\n  createClass(ButtonCloseModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          ariaLabel = _this$props.ariaLabel,\n          autoFocus = _this$props.autoFocus,\n          buttonRef = _this$props.buttonRef,\n          className = _this$props.className,\n          onClickHandler = _this$props.onClickHandler,\n          tabIndex = _this$props.tabIndex;\n      var buttonProps = {\n        ariaLabel: ariaLabel,\n        autoFocus: autoFocus,\n        buttonRef: buttonRef,\n        onClickHandler: onClickHandler,\n        tabIndex: tabIndex\n      };\n      var composedClassName = composeClassName([\"ButtonCloseModal\", className]);\n      return React.createElement(Button, _extends_1({\n        className: composedClassName\n      }, buttonProps), React.createElement(Icon, {\n        size: \"S\",\n        icon: \"close\"\n      }));\n    }\n  }]);\n  return ButtonCloseModal;\n}(PureComponent);\n\nvar css$j = \".Modal {\\n  width: 100%;\\n  height: 50%; }\\n  @media screen and (min-width: 768px) {\\n    .Modal {\\n      width: 50%; } }\\n\";\nstyleInject(css$j);\n\nvar ModalVideo =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(ModalVideo, _PureComponent);\n\n  function ModalVideo(props) {\n    var _this;\n\n    classCallCheck(this, ModalVideo);\n    _this = possibleConstructorReturn(this, getPrototypeOf(ModalVideo).call(this, props));\n    defineProperty(assertThisInitialized(_this), \"_handleOpenModal\", function () {\n      _this.setState({\n        open: true\n      }, function () {\n        _this.closeButton.current.focus();\n      });\n    });\n    defineProperty(assertThisInitialized(_this), \"_handleCloseModal\", function () {\n      _this.setState({\n        open: false\n      }, function () {\n        _this.openButton.current.focus();\n      });\n    });\n    _this.state = {\n      open: false\n    };\n    _this.closeButton = React.createRef();\n    _this.openButton = React.createRef();\n    return _this;\n  }\n\n  createClass(ModalVideo, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          allowFullScreen = _this$props.allowFullScreen,\n          className = _this$props.className,\n          source = _this$props.source,\n          title = _this$props.title,\n          videoId = _this$props.videoId,\n          theme = _this$props.theme,\n          noDisplayText = _this$props.noDisplayText;\n      var open = this.state.open;\n      return React.createElement(\"div\", {\n        className: className\n      }, React.createElement(ButtonVideo, {\n        ariaLabel: \"Modal Open\",\n        buttonRef: this.openButton,\n        className: \"ModalVideoOpen\",\n        noDisplayText: noDisplayText,\n        onClickHandler: this._handleOpenModal,\n        theme: theme\n      }), React.createElement(ModalWrapper, {\n        open: open,\n        closeHandler: this._handleCloseModal,\n        ariaLabel: \"Video Modal\",\n        ariaDescribedBy: \"Open video in a modal\"\n      }, React.createElement(VideoPlayer, {\n        allowFullScreen: allowFullScreen,\n        source: source,\n        title: title,\n        videoId: videoId,\n        autoplay: true\n      }), React.createElement(ButtonCloseModal, {\n        ariaLabel: \"Modal Close\",\n        buttonRef: this.closeButton,\n        className: \"ModalVideoClose\",\n        onClickHandler: this._handleCloseModal\n      })));\n    }\n  }]);\n  return ModalVideo;\n}(PureComponent);\n\ndefineProperty(ModalVideo, \"propTypes\", {\n  title: PropTypes.string.isRequired,\n  videoId: PropTypes.string.isRequired,\n  allowFullScreen: PropTypes.bool,\n  className: PropTypes.string,\n  noDisplayText: PropTypes.bool,\n  source: PropTypes.oneOf([\"vimeo\", \"youtube\"])\n});\nvar css$k = \".Banner {\\n  width: 100%;\\n  height: 500px; }\\n  @media screen and (min-width: 576px) {\\n    .Banner {\\n      height: 768px; } }\\n  @media screen and (min-width: 768px) {\\n    .Banner {\\n      height: 1024px; } }\\n  @media screen and (min-width: 1024px) {\\n    .Banner {\\n      height: 576px; } }\\n  @media screen and (min-width: 1440px) {\\n    .Banner {\\n      height: 810px; } }\\n  @media screen and (min-width: 2560px) {\\n    .Banner {\\n      height: 1440px; } }\\n  .Banner .BannerBackground {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: space-between; }\\n  .Banner .BannerButtonComponent {\\n    position: relative;\\n    bottom: 25px; }\\n\";\nstyleInject(css$k);\n\nvar Banner =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(Banner, _PureComponent);\n\n  function Banner() {\n    classCallCheck(this, Banner);\n    return possibleConstructorReturn(this, getPrototypeOf(Banner).apply(this, arguments));\n  }\n\n  createClass(Banner, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          buttonText = _this$props.buttonText,\n          buttonTheme = _this$props.buttonTheme,\n          buttonType = _this$props.buttonType,\n          className = _this$props.className,\n          imgMobileSource = _this$props.imgMobileSource,\n          imgSource = _this$props.imgSource,\n          linkHref = _this$props.linkHref,\n          linkExternal = _this$props.linkExternal,\n          linkTitle = _this$props.linkTitle,\n          internalLinkComponent = _this$props.internalLinkComponent,\n          socialIcon = _this$props.socialIcon,\n          socialIconTheme = _this$props.socialIconTheme,\n          titleText = _this$props.titleText,\n          titleWhiteText = _this$props.titleWhiteText,\n          videoButtonTheme = _this$props.videoButtonTheme,\n          videoId = _this$props.videoId,\n          videoSource = _this$props.videoSource,\n          videoTitle = _this$props.videoTitle;\n      var headerComponent = React.createElement(\"div\", null);\n      var titleComponent;\n\n      if (titleText) {\n        titleComponent = React.createElement(Container, null, React.createElement(Col, {\n          xs: {\n            span: 12\n          }\n        }, React.createElement(Heading, {\n          centered: true,\n          className: \"BannerTitle\",\n          size: \"XL\",\n          whiteText: titleWhiteText\n        }, titleText)));\n      }\n\n      var buttonComponent;\n\n      if (buttonType === \"button\" && buttonText) {\n        buttonComponent = React.createElement(Button, {\n          theme: buttonTheme\n        }, buttonText);\n      }\n\n      if (buttonType === \"ghost\" && buttonText) {\n        buttonComponent = React.createElement(ButtonGhost, null, buttonText);\n      }\n\n      if (linkHref) {\n        buttonComponent = React.createElement(BaseLink, {\n          internalLinkComponent: internalLinkComponent,\n          external: linkExternal,\n          href: linkHref,\n          title: linkTitle\n        }, buttonComponent);\n      }\n\n      if (buttonType === \"social\") {\n        buttonComponent = React.createElement(ButtonIcon, {\n          external: linkExternal,\n          href: linkHref,\n          icon: socialIcon,\n          size: \"L\",\n          theme: socialIconTheme,\n          internalLinkComponent: internalLinkComponent,\n          title: linkTitle\n        });\n      }\n\n      if (buttonType === \"video\") {\n        buttonComponent = React.createElement(ModalVideo, {\n          className: \"BannerModalVideo\",\n          source: videoSource,\n          videoId: videoId,\n          title: videoTitle,\n          theme: videoButtonTheme\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: composeClassName([\"Banner\", className])\n      }, React.createElement(ImageBackground, {\n        className: \"BannerBackground\",\n        source: imgSource,\n        mobileSource: imgMobileSource\n      }, React.createElement(\"div\", {\n        className: \"BannerHeaderComponent\"\n      }, headerComponent), React.createElement(\"div\", {\n        className: \"BannerTitleComponent\"\n      }, titleComponent), React.createElement(\"div\", {\n        className: \"BannerButtonComponent\"\n      }, buttonComponent)));\n    }\n  }]);\n  return Banner;\n}(PureComponent);\n\ndefineProperty(Banner, \"propTypes\", {\n  className: PropTypes.string,\n  imgSource: PropTypes.string.isRequired,\n  imgMobileSource: PropTypes.string,\n  titleText: PropTypes.string,\n  titleWhiteText: PropTypes.bool,\n  buttonType: PropTypes.oneOf([\"button\", \"ghost\", \"video\", \"social\"]),\n\n  /* link doesn't work for buttonType of `video` */\n  linkHref: PropTypes.string,\n  linkExternal: PropTypes.bool,\n  linkTitle: PropTypes.string,\n  internalLinkComponent: PropTypes.any,\n\n  /* button options only works if buttonType is `button` */\n  buttonTheme: PropTypes.oneOf([\"Primary\", \"Secondary\", \"Tertiary\"]),\n  buttonText: PropTypes.string,\n\n  /* socialIcon options only works if buttonType is `social` */\n  socialIcon: PropTypes.oneOf([\"socialFacebook\", \"socialInstagram\", \"socialLinkedIn\", \"socialPinterest\", \"socialTwitter\", \"socialVimeo\"]),\n  socialIconTheme: PropTypes.oneOf([\"Primary\", \"Tertiary\"]),\n\n  /* video options only works if buttonType is `social` */\n  videoSource: PropTypes.oneOf([\"vimeo\", \"youtube\"]),\n  videoId: PropTypes.string,\n  videoTitle: PropTypes.string,\n  videoButtonTheme: PropTypes.oneOf([\"light\", \"dark\"])\n});\ndefineProperty(Banner, \"defaultProps\", {\n  buttonType: \"button\",\n  buttonTheme: \"Primary\",\n  socialIcon: \"socialFacebook\",\n  socialIconTheme: \"Primary\",\n  videoSource: \"vimeo\",\n  videoButtonTheme: \"light\",\n  internalLinkComponent: null\n});\nvar css$l = \".tile {\\n  overflow: hidden;\\n  height: 225px; }\\n  @media screen and (min-width: 768px) {\\n    .tile {\\n      height: 230px; } }\\n  @media screen and (min-width: 1024px) {\\n    .tile {\\n      height: 285px; } }\\n  @media screen and (min-width: 1440px) {\\n    .tile {\\n      height: 360px; } }\\n\";\nstyleInject(css$l);\n\nvar BaseTile =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(BaseTile, _PureComponent);\n\n  function BaseTile() {\n    classCallCheck(this, BaseTile);\n    return possibleConstructorReturn(this, getPrototypeOf(BaseTile).apply(this, arguments));\n  }\n\n  createClass(BaseTile, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          children = _this$props.children,\n          xs = _this$props.xs,\n          md = _this$props.md,\n          Link = _this$props.Link,\n          LinkTitle = _this$props.LinkTitle,\n          internalLinkComponent = _this$props.internalLinkComponent,\n          _this$props$whiteText = _this$props.whiteText,\n          whiteText = _this$props$whiteText === void 0 ? false : _this$props$whiteText;\n      var composedClassName = composeClassName([\"tile\", className]);\n\n      if (Link) {\n        return React.createElement(Col, {\n          className: composedClassName,\n          xs: xs,\n          md: md\n        }, React.createElement(BaseLink, _extends_1({\n          internalLinkComponent: internalLinkComponent,\n          title: LinkTitle\n        }, {\n          whiteText: whiteText\n        }, Link), children));\n      }\n\n      return React.createElement(Col, {\n        className: composedClassName,\n        xs: xs,\n        md: md\n      }, children);\n    }\n  }]);\n  return BaseTile;\n}(PureComponent);\n\ndefineProperty(BaseTile, \"propTypes\", {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  xs: PropTypes.shape({\n    span: PropTypes.number\n  }),\n  md: PropTypes.shape({\n    span: PropTypes.number\n  }).isRequired,\n  Link: PropTypes.any,\n  internalLinkComponent: PropTypes.any\n});\ndefineProperty(BaseTile, \"defaultProps\", {\n  xs: {\n    span: 12\n  },\n  internalLinkComponent: null\n});\nvar css$m = \".BulletList {\\n  display: block; }\\n  .BulletList .BulletListDivider {\\n    width: 268px;\\n    margin-left: 0;\\n    margin-right: auto; }\\n    @media screen and (min-width: 768px) {\\n      .BulletList .BulletListDivider {\\n        width: 350px; } }\\n  .BulletList ul {\\n    padding-left: 15px; }\\n\";\nstyleInject(css$m);\n\nvar BulletList =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(BulletList, _PureComponent);\n\n  function BulletList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    classCallCheck(this, BulletList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = possibleConstructorReturn(this, (_getPrototypeOf2 = getPrototypeOf(BulletList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    defineProperty(assertThisInitialized(_this), \"_renderTitleSection\", function (title) {\n      if (undefined !== title && title.length > 0) {\n        return React.createElement(React.Fragment, null, React.createElement(DisplayText, {\n          size: \"M\"\n        }, title), React.createElement(Divider, {\n          className: \"BulletListDivider\"\n        }));\n      }\n\n      return \"\";\n    });\n    return _this;\n  }\n\n  createClass(BulletList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          children = _this$props.children,\n          className = _this$props.className;\n      var composedClassName = composeClassName([\"BulletList\", className]);\n      return React.createElement(\"div\", {\n        className: composedClassName\n      }, this._renderTitleSection(title), React.createElement(\"ul\", null, children));\n    }\n  }]);\n  return BulletList;\n}(PureComponent);\n\ndefineProperty(BulletList, \"propTypes\", {\n  className: PropTypes.string,\n\n  /** The title at the top of the list */\n  title: PropTypes.string\n});\ndefineProperty(BulletList, \"defaultProps\", {\n  className: \"\"\n});\nvar css$n = \".BulletListItem {\\n  color: #a8aab7; }\\n  .BulletListItem .BulletListItemText {\\n    color: #19294f; }\\n\";\nstyleInject(css$n);\n\nvar BulletListItem =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(BulletListItem, _PureComponent);\n\n  function BulletListItem() {\n    classCallCheck(this, BulletListItem);\n    return possibleConstructorReturn(this, getPrototypeOf(BulletListItem).apply(this, arguments));\n  }\n\n  createClass(BulletListItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          children = _this$props.children;\n      var composedClassName = composeClassName([\"BulletListItem\", className]);\n      return React.createElement(\"li\", {\n        className: composedClassName\n      }, React.createElement(BodyText, {\n        className: \"BulletListItemText\",\n        size: \"L\"\n      }, children));\n    }\n  }]);\n  return BulletListItem;\n}(PureComponent);\n\ndefineProperty(BulletListItem, \"propTypes\", {\n  className: PropTypes.string\n});\ndefineProperty(BulletListItem, \"defaultProps\", {\n  className: \"\"\n});\nvar css$o = \".PageContainer {\\n  width: 100%;\\n  height: 100%; }\\n  .PageContainer .ButtonBackToTop {\\n    outline: none;\\n    z-index: 200;\\n    position: fixed;\\n    bottom: 17px;\\n    right: 12px; }\\n    @media screen and (min-width: 768px) {\\n      .PageContainer .ButtonBackToTop {\\n        bottom: 30px;\\n        right: 18px; } }\\n    @media screen and (min-width: 1024px) {\\n      .PageContainer .ButtonBackToTop {\\n        right: 50px; } }\\n    @media screen and (min-width: 1440px) {\\n      .PageContainer .ButtonBackToTop {\\n        right: 150px; } }\\n\";\nstyleInject(css$o);\n\nvar ButtonBackToTop =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(ButtonBackToTop, _PureComponent);\n\n  function ButtonBackToTop(props) {\n    var _this;\n\n    classCallCheck(this, ButtonBackToTop);\n    _this = possibleConstructorReturn(this, getPrototypeOf(ButtonBackToTop).call(this, props));\n    defineProperty(assertThisInitialized(_this), \"_handleOnScroll\", function () {\n      if (browser.window.pageYOffset >= browser.document.documentElement.offsetHeight / 5) {\n        _this.setState({\n          scrolled: true\n        });\n      } else {\n        _this.setState({\n          scrolled: false\n        });\n      }\n    });\n    defineProperty(assertThisInitialized(_this), \"_scrollToTop\", function () {\n      browser.window.scroll({\n        top: 0,\n        left: 0,\n        behavior: \"smooth\"\n      }); // above is not supported by safari, chrome or ie\n\n      smoothscroll.polyfill();\n    });\n    _this.state = {\n      scrolled: false\n    };\n    return _this;\n  }\n\n  createClass(ButtonBackToTop, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      browser.window.onscroll = function () {\n        _this2._handleOnScroll();\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var className = this.props.className;\n      var scrolled = this.state.scrolled;\n      var buttonSize = \"L\";\n\n      if (browser.window.innerWidth < 1024) {\n        buttonSize = \"M\";\n      }\n\n      if (browser.window.innerWidth < 768) {\n        buttonSize = \"S\";\n      }\n\n      var composedClassName = composeClassName([\"ButtonBackToTop\", className]);\n      var backToTop = null;\n\n      if (scrolled) {\n        backToTop = React.createElement(ButtonIcon, {\n          className: composedClassName,\n          size: buttonSize,\n          theme: \"Primary\",\n          icon: \"chevronUp\",\n          title: \"Back To Top\",\n          tabIndex: \"-1\",\n          onClickHandler: function onClickHandler() {\n            _this3._scrollToTop();\n          }\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"PageContainer\"\n      }, backToTop);\n    }\n  }]);\n  return ButtonBackToTop;\n}(PureComponent);\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar objectWithoutPropertiesLoose = _objectWithoutPropertiesLoose;\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar objectWithoutProperties = _objectWithoutProperties;\nvar css$p = \".ButtonLink {\\n  display: inline-block; }\\n\";\nstyleInject(css$p);\n\nvar ButtonLink =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(ButtonLink, _PureComponent);\n\n  function ButtonLink() {\n    classCallCheck(this, ButtonLink);\n    return possibleConstructorReturn(this, getPrototypeOf(ButtonLink).apply(this, arguments));\n  }\n\n  createClass(ButtonLink, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          theme = _this$props.theme,\n          size = _this$props.size,\n          autoFocus = _this$props.autoFocus,\n          ariaLabel = _this$props.ariaLabel,\n          disabled = _this$props.disabled,\n          tabIndex = _this$props.tabIndex,\n          children = _this$props.children,\n          linkProps = objectWithoutProperties(_this$props, [\"className\", \"theme\", \"size\", \"autoFocus\", \"ariaLabel\", \"disabled\", \"tabIndex\", \"children\"]);\n      var composedClassName = composeClassName([\"ButtonLink\", className]);\n      return React.createElement(BaseLink, _extends_1({}, linkProps, {\n        className: composedClassName\n      }), React.createElement(Button, {\n        size: size,\n        theme: theme,\n        autoFocus: autoFocus,\n        disabled: disabled,\n        type: \"button\",\n        ariaLabel: ariaLabel,\n        tabIndex: tabIndex\n      }, children));\n    }\n  }]);\n  return ButtonLink;\n}(PureComponent);\n\ndefineProperty(ButtonLink, \"propTypes\", {\n  /** The selection for the theme of the button */\n  theme: PropTypes.oneOf([\"Primary\", \"Secondary\", \"Tertiary\"]),\n\n  /** The selection for the size of the button */\n  size: PropTypes.oneOf([\"L\", \"M\", \"S\"]),\n  className: PropTypes.string,\n\n  /** Optional attribute for keyboard Accessibility to fix tabindex issues */\n  autoFocus: PropTypes.bool,\n  ariaLabel: PropTypes.string,\n  disabled: PropTypes.bool,\n\n  /** Optional attribute for keyboard Accessibility */\n  tabIndex: PropTypes.string,\n\n  /** The link destination - a relative path for internal links, or absolute for external links */\n  href: PropTypes.string,\n\n  /** Whether or not the link's destination is on a separate site */\n  external: PropTypes.bool,\n\n  /** The component used as the internal link handler when `internal` is true */\n  internalLinkComponent: PropTypes.any,\n\n  /** The title attribute of the anchor tag */\n  title: PropTypes.string\n});\ndefineProperty(ButtonLink, \"defaultProps\", {\n  autoFocus: false,\n  className: \"\",\n  disabled: false,\n  size: \"M\",\n  theme: \"Primary\",\n  href: \"\",\n  external: false,\n  internalLinkComponent: null,\n  title: \"\"\n});\nvar css$q = \".Content {\\n  display: flex;\\n  word-wrap: break-word;\\n  flex-direction: column;\\n  text-align: left;\\n  max-width: 100%; }\\n  .Content .ContentTitle {\\n    margin-top: 8px;\\n    margin-bottom: 16px; }\\n    @media screen and (min-width: 768px) {\\n      .Content .ContentTitle {\\n        margin-top: 16px;\\n        margin-bottom: 0px; } }\\n  .Content .ContentBody {\\n    margin-top: 16px; }\\n  .Content .Buttons {\\n    width: 100%;\\n    margin-top: 8px;\\n    align-items: center;\\n    justify-content: center; }\\n    @media screen and (min-width: 768px) {\\n      .Content .Buttons {\\n        flex-direction: row;\\n        justify-content: flex-start;\\n        margin-top: 8px;\\n        display: flex; } }\\n    .Content .Buttons .ButtonLink {\\n      display: flex;\\n      flex: 1 0 100%;\\n      width: 100%;\\n      max-width: 360px;\\n      margin-top: 8px;\\n      margin-left: auto;\\n      margin-right: auto; }\\n      @media screen and (min-width: 768px) {\\n        .Content .Buttons .ButtonLink {\\n          text-align: left;\\n          margin: 0; }\\n          .Content .Buttons .ButtonLink.Two {\\n            flex: 1 0 calc(50% - 8px); } }\\n    @media screen and (min-width: 768px) and (min-width: 1024px) {\\n      .Content .Buttons .ButtonLink.Two {\\n        flex: 1 0 calc(50% - 16px); } }\\n      .Content .Buttons .ButtonLink .ButtonContainer {\\n        width: 100%;\\n        max-width: 360px; }\\n        .Content .Buttons .ButtonLink .ButtonContainer .Button {\\n          width: 100%;\\n          max-width: 360px;\\n          text-align: center; }\\n    @media screen and (min-width: 768px) {\\n      .Content .Buttons .ButtonLink:nth-of-type(2) {\\n        margin-left: 16px; } }\\n    @media screen and (min-width: 1024px) {\\n      .Content .Buttons .ButtonLink:nth-of-type(2) {\\n        margin-left: 32px; } }\\n\";\nstyleInject(css$q);\n\nvar ContentAligned =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(ContentAligned, _PureComponent);\n\n  function ContentAligned() {\n    classCallCheck(this, ContentAligned);\n    return possibleConstructorReturn(this, getPrototypeOf(ContentAligned).apply(this, arguments));\n  }\n\n  createClass(ContentAligned, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          tag = _this$props.tag,\n          title = _this$props.title,\n          body = _this$props.body,\n          bodySize = _this$props.bodySize,\n          button1Theme = _this$props.button1Theme,\n          button1Text = _this$props.button1Text,\n          button2Theme = _this$props.button2Theme,\n          button2Text = _this$props.button2Text,\n          href1 = _this$props.href1,\n          internalLinkComponent1 = _this$props.internalLinkComponent1,\n          link1Title = _this$props.link1Title,\n          linkExternal1 = _this$props.linkExternal1,\n          href2 = _this$props.href2,\n          internalLinkComponent2 = _this$props.internalLinkComponent2,\n          link2Title = _this$props.link2Title,\n          linkExternal2 = _this$props.linkExternal2,\n          textCols = _this$props.textCols;\n      var link1Props = {\n        href: href1,\n        internalLinkComponent: internalLinkComponent1,\n        title: link1Title,\n        external: linkExternal1\n      };\n      var link2Props = {\n        href: href2,\n        internalLinkComponent: internalLinkComponent2,\n        title: link2Title,\n        external: linkExternal2\n      };\n      var composedClassName = composeClassName([\"Content\", className]);\n      var button1 = null;\n      var button2 = null;\n\n      if (button1Text) {\n        button1 = React.createElement(ButtonLink, _extends_1({\n          className: \"ContentButton\",\n          theme: button1Theme\n        }, link1Props), button1Text);\n      }\n\n      if (button1Text && button2Text) {\n        button1 = React.createElement(ButtonLink, _extends_1({\n          className: \"ContentButton Two\",\n          theme: button1Theme\n        }, link1Props), button1Text);\n        button2 = React.createElement(ButtonLink, _extends_1({\n          className: \"ContentButton Two\",\n          theme: button2Theme\n        }, link2Props), button2Text);\n      }\n\n      var tagElement = tag ? React.createElement(DisplayText, {\n        size: \"M\",\n        className: \"ContentSubtitle\"\n      }, StringUtils.formatMax(tag, 30)) : null;\n      var titleElement = title ? React.createElement(Heading, {\n        size: \"M\",\n        className: \"ContentTitle\"\n      }, title) : null;\n      var bodyElement = body ? React.createElement(BodyText, {\n        size: bodySize,\n        className: \"ContentBody\"\n      }, body) : null;\n      var buttonElements = button1 || button2 ? React.createElement(\"div\", {\n        className: \"Buttons\"\n      }, button1, button2) : null;\n      return React.createElement(Col, {\n        className: composedClassName,\n        xs: {\n          span: 12\n        },\n        md: {\n          span: textCols\n        }\n      }, tagElement, titleElement, bodyElement, buttonElements);\n    }\n  }]);\n  return ContentAligned;\n}(PureComponent);\n\ndefineProperty(ContentAligned, \"propTypes\", {\n  className: PropTypes.string,\n  tag: PropTypes.string,\n  title: PropTypes.string,\n  body: PropTypes.string.isRequired,\n  bodySize: PropTypes.string,\n  button1Theme: PropTypes.oneOf([\"Primary\", \"Secondary\", \"Tertiary\"]),\n  button1Text: PropTypes.string,\n  button2Theme: PropTypes.oneOf([\"Primary\", \"Secondary\", \"Tertiary\"]),\n  button2Text: PropTypes.string,\n  href1: PropTypes.string,\n  internalLinkComponent1: PropTypes.any,\n  link1Title: PropTypes.string,\n  linkExternal1: PropTypes.bool,\n  href2: PropTypes.string,\n  internalLinkComponent2: PropTypes.any,\n  link2Title: PropTypes.string,\n  linkExternal2: PropTypes.bool,\n  textCols: PropTypes.number\n});\ndefineProperty(ContentAligned, \"defaultProps\", {\n  tag: \"\",\n  title: \"\",\n  button1Theme: \"Tertiary\",\n  button1Text: null,\n  button2Theme: \"Tertiary\",\n  button2Text: null,\n  link1Title: \"\",\n  linkExternal1: false,\n  link2Title: \"\",\n  linkExternal2: false,\n  textCols: 6\n});\nvar css$r = \".ContentImage {\\n  width: 100%;\\n  position: relative; }\\n  .ContentImage.OneToOne {\\n    padding-top: 100%; }\\n  .ContentImage.FourToThree {\\n    padding-top: 75%; }\\n  .ContentImage.SixteenToNine {\\n    padding-top: 56.25%; }\\n  .ContentImage .Image {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    align-items: center;\\n    display: flex;\\n    flex-direction: column; }\\n  .ContentImage .PlayButton {\\n    position: relative;\\n    top: calc(50% - 50px); }\\n\";\nstyleInject(css$r);\n\nvar ContentImage =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(ContentImage, _PureComponent);\n\n  function ContentImage() {\n    classCallCheck(this, ContentImage);\n    return possibleConstructorReturn(this, getPrototypeOf(ContentImage).apply(this, arguments));\n  }\n\n  createClass(ContentImage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          imgAltText = _this$props.imgAltText,\n          imgMobileSource = _this$props.imgMobileSource,\n          imgSource = _this$props.imgSource,\n          imgLongDesc = _this$props.imgLongDesc,\n          videoButtonTheme = _this$props.videoButtonTheme,\n          videoId = _this$props.videoId,\n          videoSource = _this$props.videoSource,\n          videoTitle = _this$props.videoTitle,\n          aspectRatio = _this$props.aspectRatio,\n          imageCols = _this$props.imageCols;\n      var imageBackgroundProps = {\n        mobileSource: imgMobileSource,\n        source: imgSource\n      };\n      var imageProps = {\n        altText: imgAltText,\n        mobileSource: imgMobileSource,\n        source: imgSource,\n        longdesc: imgLongDesc\n      };\n      var modalProps = {\n        source: videoSource,\n        videoId: videoId,\n        title: videoTitle,\n        theme: videoButtonTheme\n      };\n      var composedClassName = composeClassName([className, \"ContentImage\", aspectRatio]);\n      var imageComponent = React.createElement(Image, imageProps);\n\n      if (videoId && videoTitle) {\n        imageComponent = React.createElement(ImageBackground, _extends_1({\n          className: \"Image\"\n        }, imageBackgroundProps), React.createElement(ModalVideo, _extends_1({\n          className: \"PlayButton\"\n        }, modalProps)));\n      }\n\n      return React.createElement(Col, {\n        xs: {\n          span: 12\n        },\n        md: {\n          span: imageCols\n        }\n      }, React.createElement(\"div\", {\n        className: composedClassName\n      }, imageComponent));\n    }\n  }]);\n  return ContentImage;\n}(PureComponent);\n\ndefineProperty(ContentImage, \"propTypes\", {\n  className: PropTypes.string,\n  videoSource: PropTypes.oneOf([\"vimeo\", \"youtube\"]),\n  videoId: PropTypes.string,\n  videoTitle: PropTypes.string,\n  videoButtonTheme: PropTypes.oneOf([\"light\", \"dark\"]),\n  imgAltText: PropTypes.string,\n  imgSource: PropTypes.string.isRequired,\n  imgLongDesc: PropTypes.string,\n  imgMobileSource: PropTypes.string,\n  aspectRatio: PropTypes.oneOf([\"OneToOne\", \"FourToThree\", \"SixteenToNine\"]),\n  imageCols: PropTypes.number\n});\ndefineProperty(ContentImage, \"defaultProps\", {\n  videoSource: \"vimeo\",\n  videoId: null,\n  videoTitle: null,\n  videoButtonTheme: \"light\",\n  imgMobileSource: \"\",\n  imgLongDesc: \"\",\n  aspectRatio: \"OneToOne\"\n});\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nvar objectSpread = _objectSpread;\n\nvar FormValidations = function FormValidations() {\n  classCallCheck(this, FormValidations);\n};\n\ndefineProperty(FormValidations, \"defaultMessages\", {\n  required: \"This field is required.\",\n  email: \"Please enter a valid email.\"\n});\ndefineProperty(FormValidations, \"required\", function (_ref) {\n  var value = _ref.value,\n      _ref$emptyValue = _ref.emptyValue,\n      emptyValue = _ref$emptyValue === void 0 ? \"\" : _ref$emptyValue;\n  return value !== emptyValue;\n});\ndefineProperty(FormValidations, \"email\", function (_ref2) {\n  var value = _ref2.value;\n  var regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n  return regex.test(String(value).toLowerCase());\n});\n\nvar asFormElement = function asFormElement(Element, FormContext) {\n  var _class, _temp; // eslint-disable-next-line react/no-multi-comp\n\n\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_PureComponent) {\n    inherits(AsForm, _PureComponent);\n\n    function AsForm(_props, _context) {\n      var _this;\n\n      classCallCheck(this, AsForm);\n      _this = possibleConstructorReturn(this, getPrototypeOf(AsForm).call(this, _props));\n      defineProperty(assertThisInitialized(_this), \"_constructValidations\", function (props, context) {\n        var name = props.name,\n            _props$initialValue = props.initialValue,\n            initialValue = _props$initialValue === void 0 ? \"\" : _props$initialValue,\n            required = props.required,\n            _props$emptyValue = props.emptyValue,\n            emptyValue = _props$emptyValue === void 0 ? \"\" : _props$emptyValue;\n        var _props$validateAgains = props.validateAgainst,\n            validateAgainst = _props$validateAgains === void 0 ? {} : _props$validateAgains;\n        var validateAgainstObject = {}; // Process validation object on element for use in form\n\n        if (Object.keys(validateAgainst).length > 0) {\n          Object.keys(validateAgainst).forEach(function (key) {\n            // Set message to default if not provided\n            var message = typeof validateAgainst[key] === \"boolean\" ? FormValidations.defaultMessages[key] : validateAgainst[key];\n            validateAgainstObject[key] = {\n              error: false,\n              fn: FormValidations[key],\n              message: message\n            };\n          });\n        } // Add required shorthand to the object\n\n\n        if (required) {\n          // Set message to default if not provided\n          var message = typeof required === \"boolean\" ? FormValidations.defaultMessages.required : required;\n          validateAgainstObject.required = {\n            error: false,\n            fn: FormValidations.required,\n            emptyValue: emptyValue,\n            message: message\n          };\n        } // Register to the Form state\n\n\n        var register = context.register;\n        register(name, initialValue, validateAgainstObject);\n      });\n      defineProperty(assertThisInitialized(_this), \"_isApproved\", function (submitAttempts, error) {\n        if (submitAttempts > 0) {\n          if (!error) return error;\n        }\n\n        return false;\n      });\n\n      if (typeof _context.register === \"function\") {\n        _this._constructValidations(_props, _context);\n      }\n\n      return _this;\n    }\n\n    createClass(AsForm, [{\n      key: \"render\",\n      value: function render() {\n        // If there is no Form context to register to, just return the element.\n        var _this$context = this.context,\n            onChange = _this$context.onChange,\n            register = _this$context.register,\n            submitAttempts = _this$context.submitAttempts,\n            validations = _this$context.validations,\n            values = _this$context.values;\n\n        if (typeof register !== \"function\") {\n          return React.createElement(Element, this.props);\n        } // Pass down element's value\n\n\n        var name = this.props.name;\n        var value = values[name]; // Pass error, message, and approved as expected by elements\n\n        var error = _typeof_1(validations[name]) === \"object\" ? validations[name].error : false;\n        var message = _typeof_1(validations[name]) === \"object\" ? validations[name].message : \"This field has an error\";\n\n        var approved = this._isApproved(submitAttempts, error); // Props-proxy\n\n\n        return React.createElement(Element, _extends_1({}, this.props, {\n          approved: approved,\n          error: error,\n          message: message,\n          onChangeHandler: onChange,\n          value: value\n        }));\n      }\n    }]);\n    return AsForm;\n  }(PureComponent), defineProperty(_class, \"contextType\", FormContext), defineProperty(_class, \"propTypes\", objectSpread({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }, Element.propTypes)), defineProperty(_class, \"defaultProps\", objectSpread({\n    value: \"\"\n  }, Element.defaultProps)), _temp;\n};\n\nvar runtime_1 = createCommonjsModule(function (module) {\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  var runtime = function (exports) {\n    var Op = Object.prototype;\n    var hasOwn = Op.hasOwnProperty;\n    var undefined; // More compressible than void 0.\n\n    var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n    var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n    var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n    var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n    function wrap(innerFn, outerFn, self, tryLocsList) {\n      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n      var generator = Object.create(protoGenerator.prototype);\n      var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n      // .throw, and .return methods.\n\n      generator._invoke = makeInvokeMethod(innerFn, self, context);\n      return generator;\n    }\n\n    exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n    // record like context.tryEntries[i].completion. This interface could\n    // have been (and was previously) designed to take a closure to be\n    // invoked without arguments, but in all the cases we care about we\n    // already have an existing method we want to call, so there's no need\n    // to create a new function object. We can even get away with assuming\n    // the method takes exactly one argument, since that happens to be true\n    // in every case, so we don't have to touch the arguments object. The\n    // only additional allocation required is the completion record, which\n    // has a stable shape and so hopefully should be cheap to allocate.\n\n    function tryCatch(fn, obj, arg) {\n      try {\n        return {\n          type: \"normal\",\n          arg: fn.call(obj, arg)\n        };\n      } catch (err) {\n        return {\n          type: \"throw\",\n          arg: err\n        };\n      }\n    }\n\n    var GenStateSuspendedStart = \"suspendedStart\";\n    var GenStateSuspendedYield = \"suspendedYield\";\n    var GenStateExecuting = \"executing\";\n    var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n    // breaking out of the dispatch switch statement.\n\n    var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n    // .constructor.prototype properties for functions that return Generator\n    // objects. For full spec compliance, you may wish to configure your\n    // minifier not to mangle the names of these two functions.\n\n    function Generator() {}\n\n    function GeneratorFunction() {}\n\n    function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n    // don't natively support it.\n\n\n    var IteratorPrototype = {};\n\n    IteratorPrototype[iteratorSymbol] = function () {\n      return this;\n    };\n\n    var getProto = Object.getPrototypeOf;\n    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n      // This environment has a native %IteratorPrototype%; use it instead\n      // of the polyfill.\n      IteratorPrototype = NativeIteratorPrototype;\n    }\n\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n    GeneratorFunctionPrototype.constructor = GeneratorFunction;\n    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n    // Iterator interface in terms of a single ._invoke method.\n\n    function defineIteratorMethods(prototype) {\n      [\"next\", \"throw\", \"return\"].forEach(function (method) {\n        prototype[method] = function (arg) {\n          return this._invoke(method, arg);\n        };\n      });\n    }\n\n    exports.isGeneratorFunction = function (genFun) {\n      var ctor = typeof genFun === \"function\" && genFun.constructor;\n      return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n      // do is to check its .name property.\n      (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n    };\n\n    exports.mark = function (genFun) {\n      if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n      } else {\n        genFun.__proto__ = GeneratorFunctionPrototype;\n\n        if (!(toStringTagSymbol in genFun)) {\n          genFun[toStringTagSymbol] = \"GeneratorFunction\";\n        }\n      }\n\n      genFun.prototype = Object.create(Gp);\n      return genFun;\n    }; // Within the body of any async function, `await x` is transformed to\n    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n    // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n    // meant to be awaited.\n\n\n    exports.awrap = function (arg) {\n      return {\n        __await: arg\n      };\n    };\n\n    function AsyncIterator(generator) {\n      function invoke(method, arg, resolve, reject) {\n        var record = tryCatch(generator[method], generator, arg);\n\n        if (record.type === \"throw\") {\n          reject(record.arg);\n        } else {\n          var result = record.arg;\n          var value = result.value;\n\n          if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n            return Promise.resolve(value.__await).then(function (value) {\n              invoke(\"next\", value, resolve, reject);\n            }, function (err) {\n              invoke(\"throw\", err, resolve, reject);\n            });\n          }\n\n          return Promise.resolve(value).then(function (unwrapped) {\n            // When a yielded Promise is resolved, its final value becomes\n            // the .value of the Promise<{value,done}> result for the\n            // current iteration.\n            result.value = unwrapped;\n            resolve(result);\n          }, function (error) {\n            // If a rejected Promise was yielded, throw the rejection back\n            // into the async generator function so it can be handled there.\n            return invoke(\"throw\", error, resolve, reject);\n          });\n        }\n      }\n\n      var previousPromise;\n\n      function enqueue(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new Promise(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n\n        return previousPromise = // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n        // invocations of the iterator.\n        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      } // Define the unified helper method that is used to implement .next,\n      // .throw, and .return (see defineIteratorMethods).\n\n\n      this._invoke = enqueue;\n    }\n\n    defineIteratorMethods(AsyncIterator.prototype);\n\n    AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n      return this;\n    };\n\n    exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n    // AsyncIterator objects; they just return a Promise for the value of\n    // the final result produced by the iterator.\n\n    exports.async = function (innerFn, outerFn, self, tryLocsList) {\n      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n      return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function (result) {\n        return result.done ? result.value : iter.next();\n      });\n    };\n\n    function makeInvokeMethod(innerFn, self, context) {\n      var state = GenStateSuspendedStart;\n      return function invoke(method, arg) {\n        if (state === GenStateExecuting) {\n          throw new Error(\"Generator is already running\");\n        }\n\n        if (state === GenStateCompleted) {\n          if (method === \"throw\") {\n            throw arg;\n          } // Be forgiving, per 25.3.3.3.3 of the spec:\n          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n          return doneResult();\n        }\n\n        context.method = method;\n        context.arg = arg;\n\n        while (true) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (context.method === \"next\") {\n            // Setting context._sent for legacy support of Babel's\n            // function.sent implementation.\n            context.sent = context._sent = context.arg;\n          } else if (context.method === \"throw\") {\n            if (state === GenStateSuspendedStart) {\n              state = GenStateCompleted;\n              throw context.arg;\n            }\n\n            context.dispatchException(context.arg);\n          } else if (context.method === \"return\") {\n            context.abrupt(\"return\", context.arg);\n          }\n\n          state = GenStateExecuting;\n          var record = tryCatch(innerFn, self, context);\n\n          if (record.type === \"normal\") {\n            // If an exception is thrown from innerFn, we leave state ===\n            // GenStateExecuting and loop back for another invocation.\n            state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n            if (record.arg === ContinueSentinel) {\n              continue;\n            }\n\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          } else if (record.type === \"throw\") {\n            state = GenStateCompleted; // Dispatch the exception by looping back around to the\n            // context.dispatchException(context.arg) call above.\n\n            context.method = \"throw\";\n            context.arg = record.arg;\n          }\n        }\n      };\n    } // Call delegate.iterator[context.method](context.arg) and handle the\n    // result, either by returning a { value, done } result from the\n    // delegate iterator, or by modifying context.method and context.arg,\n    // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n    function maybeInvokeDelegate(delegate, context) {\n      var method = delegate.iterator[context.method];\n\n      if (method === undefined) {\n        // A .throw or .return when the delegate iterator has no .throw\n        // method always terminates the yield* loop.\n        context.delegate = null;\n\n        if (context.method === \"throw\") {\n          // Note: [\"return\"] must be used for ES3 parsing compatibility.\n          if (delegate.iterator[\"return\"]) {\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            context.method = \"return\";\n            context.arg = undefined;\n            maybeInvokeDelegate(delegate, context);\n\n            if (context.method === \"throw\") {\n              // If maybeInvokeDelegate(context) changed context.method from\n              // \"return\" to \"throw\", let that override the TypeError below.\n              return ContinueSentinel;\n            }\n          }\n\n          context.method = \"throw\";\n          context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n        }\n\n        return ContinueSentinel;\n      }\n\n      var record = tryCatch(method, delegate.iterator, context.arg);\n\n      if (record.type === \"throw\") {\n        context.method = \"throw\";\n        context.arg = record.arg;\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      var info = record.arg;\n\n      if (!info) {\n        context.method = \"throw\";\n        context.arg = new TypeError(\"iterator result is not an object\");\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      if (info.done) {\n        // Assign the result of the finished delegate to the temporary\n        // variable specified by delegate.resultName (see delegateYield).\n        context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n        context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n        // exception, let the outer generator proceed normally. If\n        // context.method was \"next\", forget context.arg since it has been\n        // \"consumed\" by the delegate iterator. If context.method was\n        // \"return\", allow the original .return call to continue in the\n        // outer generator.\n\n        if (context.method !== \"return\") {\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n      } else {\n        // Re-yield the result returned by the delegate method.\n        return info;\n      } // The delegate iterator is finished, so forget it and continue with\n      // the outer generator.\n\n\n      context.delegate = null;\n      return ContinueSentinel;\n    } // Define Generator.prototype.{next,throw,return} in terms of the\n    // unified ._invoke helper method.\n\n\n    defineIteratorMethods(Gp);\n    Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n    // @@iterator function is called on it. Some browsers' implementations of the\n    // iterator prototype chain incorrectly implement this, causing the Generator\n    // object to not be returned from this call. This ensures that doesn't happen.\n    // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n    Gp[iteratorSymbol] = function () {\n      return this;\n    };\n\n    Gp.toString = function () {\n      return \"[object Generator]\";\n    };\n\n    function pushTryEntry(locs) {\n      var entry = {\n        tryLoc: locs[0]\n      };\n\n      if (1 in locs) {\n        entry.catchLoc = locs[1];\n      }\n\n      if (2 in locs) {\n        entry.finallyLoc = locs[2];\n        entry.afterLoc = locs[3];\n      }\n\n      this.tryEntries.push(entry);\n    }\n\n    function resetTryEntry(entry) {\n      var record = entry.completion || {};\n      record.type = \"normal\";\n      delete record.arg;\n      entry.completion = record;\n    }\n\n    function Context(tryLocsList) {\n      // The root entry object (effectively a try statement without a catch\n      // or a finally block) gives us a place to store values thrown from\n      // locations where there is no enclosing try statement.\n      this.tryEntries = [{\n        tryLoc: \"root\"\n      }];\n      tryLocsList.forEach(pushTryEntry, this);\n      this.reset(true);\n    }\n\n    exports.keys = function (object) {\n      var keys = [];\n\n      for (var key in object) {\n        keys.push(key);\n      }\n\n      keys.reverse(); // Rather than returning an object with a next method, we keep\n      // things simple and return the next function itself.\n\n      return function next() {\n        while (keys.length) {\n          var key = keys.pop();\n\n          if (key in object) {\n            next.value = key;\n            next.done = false;\n            return next;\n          }\n        } // To avoid creating an additional object, we just hang the .value\n        // and .done properties off the next function object itself. This\n        // also ensures that the minifier will not anonymize the function.\n\n\n        next.done = true;\n        return next;\n      };\n    };\n\n    function values(iterable) {\n      if (iterable) {\n        var iteratorMethod = iterable[iteratorSymbol];\n\n        if (iteratorMethod) {\n          return iteratorMethod.call(iterable);\n        }\n\n        if (typeof iterable.next === \"function\") {\n          return iterable;\n        }\n\n        if (!isNaN(iterable.length)) {\n          var i = -1,\n              next = function next() {\n            while (++i < iterable.length) {\n              if (hasOwn.call(iterable, i)) {\n                next.value = iterable[i];\n                next.done = false;\n                return next;\n              }\n            }\n\n            next.value = undefined;\n            next.done = true;\n            return next;\n          };\n\n          return next.next = next;\n        }\n      } // Return an iterator with no values.\n\n\n      return {\n        next: doneResult\n      };\n    }\n\n    exports.values = values;\n\n    function doneResult() {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    Context.prototype = {\n      constructor: Context,\n      reset: function reset(skipTempReset) {\n        this.prev = 0;\n        this.next = 0; // Resetting context._sent for legacy support of Babel's\n        // function.sent implementation.\n\n        this.sent = this._sent = undefined;\n        this.done = false;\n        this.delegate = null;\n        this.method = \"next\";\n        this.arg = undefined;\n        this.tryEntries.forEach(resetTryEntry);\n\n        if (!skipTempReset) {\n          for (var name in this) {\n            // Not sure about the optimal order of these conditions:\n            if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n              this[name] = undefined;\n            }\n          }\n        }\n      },\n      stop: function stop() {\n        this.done = true;\n        var rootEntry = this.tryEntries[0];\n        var rootRecord = rootEntry.completion;\n\n        if (rootRecord.type === \"throw\") {\n          throw rootRecord.arg;\n        }\n\n        return this.rval;\n      },\n      dispatchException: function dispatchException(exception) {\n        if (this.done) {\n          throw exception;\n        }\n\n        var context = this;\n\n        function handle(loc, caught) {\n          record.type = \"throw\";\n          record.arg = exception;\n          context.next = loc;\n\n          if (caught) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            context.method = \"next\";\n            context.arg = undefined;\n          }\n\n          return !!caught;\n        }\n\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          var record = entry.completion;\n\n          if (entry.tryLoc === \"root\") {\n            // Exception thrown outside of any try block that could handle\n            // it, so set the completion value of the entire function to\n            // throw the exception.\n            return handle(\"end\");\n          }\n\n          if (entry.tryLoc <= this.prev) {\n            var hasCatch = hasOwn.call(entry, \"catchLoc\");\n            var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n            if (hasCatch && hasFinally) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              } else if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else if (hasCatch) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              }\n            } else if (hasFinally) {\n              if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else {\n              throw new Error(\"try statement without catch or finally\");\n            }\n          }\n        }\n      },\n      abrupt: function abrupt(type, arg) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n            var finallyEntry = entry;\n            break;\n          }\n        }\n\n        if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n          // Ignore the finally entry if control is not jumping to a\n          // location outside the try/catch block.\n          finallyEntry = null;\n        }\n\n        var record = finallyEntry ? finallyEntry.completion : {};\n        record.type = type;\n        record.arg = arg;\n\n        if (finallyEntry) {\n          this.method = \"next\";\n          this.next = finallyEntry.finallyLoc;\n          return ContinueSentinel;\n        }\n\n        return this.complete(record);\n      },\n      complete: function complete(record, afterLoc) {\n        if (record.type === \"throw\") {\n          throw record.arg;\n        }\n\n        if (record.type === \"break\" || record.type === \"continue\") {\n          this.next = record.arg;\n        } else if (record.type === \"return\") {\n          this.rval = this.arg = record.arg;\n          this.method = \"return\";\n          this.next = \"end\";\n        } else if (record.type === \"normal\" && afterLoc) {\n          this.next = afterLoc;\n        }\n\n        return ContinueSentinel;\n      },\n      finish: function finish(finallyLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.finallyLoc === finallyLoc) {\n            this.complete(entry.completion, entry.afterLoc);\n            resetTryEntry(entry);\n            return ContinueSentinel;\n          }\n        }\n      },\n      \"catch\": function _catch(tryLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc === tryLoc) {\n            var record = entry.completion;\n\n            if (record.type === \"throw\") {\n              var thrown = record.arg;\n              resetTryEntry(entry);\n            }\n\n            return thrown;\n          }\n        } // The context.catch method must only be called with a location\n        // argument that corresponds to a known catch block.\n\n\n        throw new Error(\"illegal catch attempt\");\n      },\n      delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n        this.delegate = {\n          iterator: values(iterable),\n          resultName: resultName,\n          nextLoc: nextLoc\n        };\n\n        if (this.method === \"next\") {\n          // Deliberately forget the last sent value so that we don't\n          // accidentally pass it on to the delegate.\n          this.arg = undefined;\n        }\n\n        return ContinueSentinel;\n      }\n    }; // Regardless of whether this script is executing as a CommonJS module\n    // or not, return the runtime object so that we can declare the variable\n    // regeneratorRuntime in the outer scope, which allows this module to be\n    // injected easily by `bin/regenerator --include-runtime script.js`.\n\n    return exports;\n  }( // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  module.exports);\n\n  try {\n    regeneratorRuntime = runtime;\n  } catch (accidentalStrictMode) {\n    // This module should not be running in strict mode, so the above\n    // assignment should always work unless something is misconfigured. Just\n    // in case runtime.js accidentally runs in strict mode, we can escape\n    // strict mode using a global Function call. This could conceivably fail\n    // if a Content Security Policy forbids using Function, but in that case\n    // the proper solution is to fix the accidental strict mode problem. If\n    // you've misconfigured your bundler to force strict mode and applied a\n    // CSP to forbid Function, and you're not willing to fix either of those\n    // problems, please detail your unique predicament in a GitHub issue.\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n});\nvar regenerator = runtime_1;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar asyncToGenerator = _asyncToGenerator;\nvar FormContext = React.createContext({});\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  inherits(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    classCallCheck(this, Form);\n    _this = possibleConstructorReturn(this, getPrototypeOf(Form).call(this, props)); // State will hold the values and validations,\n    // and be the single source of truth for the entire form\n\n    defineProperty(assertThisInitialized(_this), \"register\", function (name, initialValue, validateAgainst) {\n      var _this$state = _this.state,\n          values = _this$state.values,\n          validations = _this$state.validations,\n          initialValues = _this$state.initialValues; // Sets values into state\n\n      values[name] = initialValue;\n      initialValues[name] = initialValue; // Sets validations for field into state\n\n      if (validateAgainst) {\n        validations[name] = {\n          error: false,\n          message: false,\n          validateAgainst: validateAgainst\n        };\n      }\n\n      _this.setState({\n        values: values,\n        validations: validations,\n        initialValues: initialValues\n      });\n    });\n    defineProperty(assertThisInitialized(_this), \"handleOnChange\", function (_ref) {\n      var name = _ref.name,\n          value = _ref.value;\n      var _this$state2 = _this.state,\n          values = _this$state2.values,\n          validations = _this$state2.validations,\n          formIsValid = _this$state2.formIsValid;\n      values[name] = value; // Only checks for validity on keypress if the form has been submitted.\n      // TODO: Track error and message state throughout,\n      // only display on submit - otherwise there is a lag\n\n      if (!formIsValid && validations[name]) {\n        validations[name] = _this._validate(value, validations[name]);\n      }\n\n      _this.setState({\n        values: values,\n        validations: validations\n      });\n    });\n    defineProperty(assertThisInitialized(_this), \"_validate\", function (value, validations) {\n      var checkedValidations = objectSpread({}, validations);\n      checkedValidations.error = false;\n      checkedValidations.message = false;\n      var validateAgainst = validations.validateAgainst; // Iterate over all the validations from a field\n\n      Object.keys(validateAgainst).forEach(function (key) {\n        var emptyValue = validateAgainst[key].emptyValue;\n        var isError = !validateAgainst[key].fn({\n          value: value,\n          emptyValue: emptyValue\n        });\n        checkedValidations.validateAgainst[key].error = isError;\n        checkedValidations.error = checkedValidations.error || isError; // If there's an error, set the message for the field to it\n\n        if (isError) {\n          var message = validateAgainst[key].message;\n          checkedValidations.message = typeof message === \"string\" ? message : message();\n        }\n      }); // Required always takes precedence for error messages if it's in error.\n\n      if (checkedValidations.error && checkedValidations.required && checkedValidations.required.error) {\n        var message = checkedValidations.required.message;\n        checkedValidations.message = typeof message === \"string\" ? message : message();\n      }\n\n      return checkedValidations;\n    });\n    defineProperty(assertThisInitialized(_this), \"_encode\", function (data) {\n      return Object.keys(data).map(function (key) {\n        return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(data[key]));\n      }).join(\"&\");\n    });\n    defineProperty(assertThisInitialized(_this), \"_sendForm\",\n    /*#__PURE__*/\n    function () {\n      var _ref2 = asyncToGenerator(\n      /*#__PURE__*/\n      regenerator.mark(function _callee(data) {\n        var _this$props, submitUrl, headers, method, formEncode, formData, response;\n\n        return regenerator.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = _this.props, submitUrl = _this$props.submitUrl, headers = _this$props.headers, method = _this$props.method, formEncode = _this$props.formEncode;\n                formData = data;\n\n                if (formEncode) {\n                  headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n                  formData = _this._encode(data);\n                } else {\n                  headers[\"Content-Type\"] = \"application/json\";\n                }\n\n                _context.next = 6;\n                return axios({\n                  url: submitUrl,\n                  method: method,\n                  headers: headers,\n                  data: formData\n                });\n\n              case 6:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    defineProperty(assertThisInitialized(_this), \"_getFormValidStatus\", function (values, validations) {\n      var formIsValid = true;\n      var newValidations = objectSpread({}, validations); // validate all the fields\n\n      Object.keys(validations).forEach(function (name) {\n        var validated = _this._validate(values[name], validations[name]);\n\n        newValidations[name] = validated;\n        formIsValid = formIsValid && !validated.error;\n      });\n      return {\n        formIsValid: formIsValid,\n        newValidations: newValidations\n      };\n    });\n    defineProperty(assertThisInitialized(_this), \"_handleSubmit\", function (event) {\n      event.preventDefault();\n      var _this$state3 = _this.state,\n          validations = _this$state3.validations,\n          values = _this$state3.values,\n          initialValues = _this$state3.initialValues,\n          submitAttempts = _this$state3.submitAttempts;\n      var _this$props2 = _this.props,\n          onSubmit = _this$props2.onSubmit,\n          formEncode = _this$props2.formEncode,\n          formName = _this$props2.formName,\n          submitUrl = _this$props2.submitUrl;\n\n      var _this$_getFormValidSt = _this._getFormValidStatus(values, validations),\n          formIsValid = _this$_getFormValidSt.formIsValid,\n          newValidations = _this$_getFormValidSt.newValidations;\n\n      _this.setState({\n        formIsValid: formIsValid,\n        validations: newValidations,\n        submitAttempts: submitAttempts + 1\n      },\n      /*#__PURE__*/\n      asyncToGenerator(\n      /*#__PURE__*/\n      regenerator.mark(function _callee2() {\n        var data, response;\n        return regenerator.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = objectSpread({\n                  \"form-name\": formName\n                }, values); // If the form is invalid, don't do anything else except call the parents onSubmit\n\n                if (formIsValid) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                if (onSubmit) {\n                  onSubmit(data, false);\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 4:\n                if (!submitUrl) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _context2.next = 7;\n                return _this._sendForm(data);\n\n              case 7:\n                response = _context2.sent;\n\n                if (onSubmit) {\n                  onSubmit(data, response.statusCode);\n                } // TODO: provide real error catching\n\n\n                if (response.status !== 200) {\n                  _this.setState({\n                    fetchFailure: true,\n                    fetchSuccessful: false\n                  });\n                } else {\n                  _this.setState({\n                    fetchSuccessful: true,\n                    fetchFailure: false,\n                    values: initialValues\n                  });\n                }\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      })));\n    });\n    _this.state = {\n      values: {},\n      validations: {},\n      formIsValid: true,\n      fetchSuccessful: false,\n      fetchFailure: false,\n      submitAttempts: 0,\n      initialValues: {} // Lets us reset the form\n\n    };\n    return _this;\n  } // Passed to fields via context so they can register to the form state.\n\n\n  createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state4 = this.state,\n          values = _this$state4.values,\n          validations = _this$state4.validations,\n          submitAttempts = _this$state4.submitAttempts;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          formName = _this$props3.formName,\n          _this$props3$dataAttr = _this$props3.dataAttr,\n          dataAttr = _this$props3$dataAttr === void 0 ? {} : _this$props3$dataAttr; // Render the context and the form\n\n      return React.createElement(FormContext.Provider, {\n        value: {\n          register: this.register,\n          onChange: this.handleOnChange,\n          values: values,\n          validations: validations,\n          submitAttempts: submitAttempts\n        }\n      }, React.createElement(\"form\", _extends_1({\n        onSubmit: this._handleSubmit,\n        name: formName,\n        noValidate: true // Turns off browser validation\n\n      }, dataAttr), children));\n    }\n  }]);\n  return Form;\n}(Component);\n\ndefineProperty(Form, \"propTypes\", {\n  formName: PropTypes.string.isRequired,\n  formEncode: PropTypes.bool,\n  headers: PropTypes.object,\n  method: PropTypes.oneOf([\"POST\", \"GET\", \"PUT\"]),\n  onSubmit: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  submitUrl: PropTypes.string\n});\ndefineProperty(Form, \"defaultProps\", {\n  formEncode: false,\n  headers: {},\n  method: \"POST\",\n  onSubmit: false,\n  submitUrl: \"/\"\n});\nvar css$s = \".InputContainer .ErrorMessage {\\n  height: 16px;\\n  line-height: 16px;\\n  font-size: 12px;\\n  color: #e41647; }\\n  @media screen and (min-width: 1024px) {\\n    .InputContainer .ErrorMessage {\\n      height: 24px;\\n      line-height: 24px; } }\\n\\n.InputContainer .InputGroup {\\n  width: 240px;\\n  outline: none;\\n  border: none;\\n  position: relative;\\n  background-color: transparent;\\n  display: flex; }\\n  .InputContainer .InputGroup .Input {\\n    border: 1px solid #dbdcdf;\\n    padding: 0 10px 0 12px;\\n    width: 240px;\\n    box-sizing: border-box;\\n    height: 48px;\\n    font-family: MercuryTextG1;\\n    font-weight: 600;\\n    font-size: 12px;\\n    letter-spacing: 0.5px;\\n    color: #19294f;\\n    caret-color: #00aeef;\\n    outline: none; }\\n    .InputContainer .InputGroup .Input.approved {\\n      border: 1px solid #0d7f50; }\\n    .InputContainer .InputGroup .Input.error {\\n      border: 1px solid #e41647; }\\n      .InputContainer .InputGroup .Input.error .ColoredBase {\\n        fill: #e41647; }\\n    .InputContainer .InputGroup .Input:hover:not(.error) {\\n      border: 1px solid #c5d0de;\\n      cursor: text; }\\n    .InputContainer .InputGroup .Input:focus {\\n      border: 1px solid #00aeef; }\\n    .InputContainer .InputGroup .Input:active {\\n      border: 1px solid #00aeef; }\\n    .InputContainer .InputGroup .Input:disabled {\\n      background-color: #e9edf1;\\n      border: 1px solid #dbdcdf;\\n      cursor: not-allowed; }\\n  .InputContainer .InputGroup .Icon {\\n    position: absolute;\\n    right: 15px;\\n    top: 13px;\\n    z-index: 2; }\\n    .InputContainer .InputGroup .Icon.S {\\n      max-height: 16px; }\\n    .InputContainer .InputGroup .Icon.M {\\n      max-height: 32px; }\\n    .InputContainer .InputGroup .Icon.L {\\n      max-height: 64px; }\\n  .InputContainer .InputGroup.error .Icon .ColoredBase {\\n    fill: #e41647; }\\n  .InputContainer .InputGroup.approved .Icon .ColoredBase {\\n    fill: #0d7f50; }\\n\";\nstyleInject(css$s);\n\nvar Input =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(Input, _PureComponent);\n\n  function Input() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    classCallCheck(this, Input);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = possibleConstructorReturn(this, (_getPrototypeOf2 = getPrototypeOf(Input)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    defineProperty(assertThisInitialized(_this), \"_onChange\", function (event) {\n      event.preventDefault();\n      var target = event.target;\n      var value = target.value;\n      var name = _this.props.name;\n\n      _this.props.onChangeHandler({\n        name: name,\n        value: value\n      }); // eslint-disable-line\n\n    });\n    return _this;\n  }\n\n  createClass(Input, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          approved = _this$props.approved,\n          className = _this$props.className,\n          disabled = _this$props.disabled,\n          error = _this$props.error,\n          icon = _this$props.icon,\n          label = _this$props.label,\n          name = _this$props.name,\n          placeholder = _this$props.placeholder,\n          title = _this$props.title,\n          value = _this$props.value,\n          message = _this$props.message,\n          type = _this$props.type,\n          whiteText = _this$props.whiteText;\n      var labelProps = {\n        label: label,\n        whiteText: whiteText\n      };\n      var composedClassName = composeClassName([\"Input\", approved ? \"approved\" : \"\", error ? \"error\" : \"\", className]);\n      var iconComponent = null;\n      var noIconStyles = {\n        width: \"100%\"\n      };\n\n      if (icon) {\n        var iconProps = {\n          icon: icon\n        };\n        noIconStyles = null;\n        iconComponent = React.createElement(Icon, _extends_1({\n          size: \"S\"\n        }, iconProps));\n      }\n\n      if (error) {\n        noIconStyles = null;\n        iconComponent = React.createElement(Icon, {\n          size: \"S\",\n          icon: \"close\"\n        });\n      }\n\n      if (approved) {\n        noIconStyles = null;\n        iconComponent = React.createElement(Icon, {\n          size: \"S\",\n          icon: \"checkmark\"\n        });\n      }\n\n      var htmlFor = name;\n      var inputGroupClassName = composeClassName([\"InputGroup\", approved ? \"approved\" : \"\", error ? \"error\" : \"\"]);\n      return React.createElement(\"div\", {\n        className: \"InputContainer\"\n      }, React.createElement(Label, _extends_1({\n        htmlFor: htmlFor\n      }, labelProps), React.createElement(\"div\", {\n        className: inputGroupClassName\n      }, React.createElement(\"input\", {\n        className: composedClassName,\n        disabled: disabled,\n        id: htmlFor,\n        name: name,\n        onChange: this._onChange,\n        placeholder: placeholder,\n        style: noIconStyles,\n        title: title,\n        type: type,\n        value: value\n      }), iconComponent), React.createElement(BodyText, {\n        size: \"S\",\n        className: \"ErrorMessage\",\n        whiteText: whiteText\n      }, message)));\n    }\n  }]);\n  return Input;\n}(PureComponent);\n\ndefineProperty(Input, \"propTypes\", {\n  /** Indicates if the user input is accepted */\n  approved: PropTypes.bool,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n\n  /** Indicates if there is an error in the user input */\n  error: PropTypes.bool,\n  icon: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChangeHandler: PropTypes.func,\n  placeholder: PropTypes.string,\n\n  /** Indicate purpose of text input for accessibility */\n  title: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  initialValue: PropTypes.string,\n  type: PropTypes.oneOf([\"text\", \"email\", \"hidden\"]),\n\n  /** Shorthand for required.\n   * String or Function that returns a string is the error message displayed\n   * If boolean, default error message is used. */\n  required: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.bool]),\n  emptyValue: PropTypes.any,\n\n  /** Defined keys are validated against using standard validators.\n   * String or Function that returns a string is the error message displayed\n   * If boolean, default error message is used. */\n  validateAgainst: PropTypes.object\n});\ndefineProperty(Input, \"defaultProps\", {\n  approved: false,\n  className: \"\",\n  disabled: false,\n  error: false,\n  icon: \"\",\n  placeholder: \"\",\n  initialValue: \"\",\n  emptyValue: \"\"\n});\nvar Input$1 = asFormElement(Input, FormContext);\n\nvar InputHidden = function InputHidden(_ref) {\n  var name = _ref.name,\n      value = _ref.value,\n      onChangeHandler = _ref.onChangeHandler;\n  return React.createElement(\"input\", {\n    type: \"hidden\",\n    name: name,\n    value: value,\n    onChange: onChangeHandler\n  });\n};\n\nvar InputHidden$1 = asFormElement(InputHidden, FormContext);\n\nvar InputText = function InputText(props) {\n  var inputTextProps = objectSpread({}, props, {\n    type: \"text\"\n  });\n  return React.createElement(Input$1, inputTextProps);\n};\n\nvar InputEmail = function InputEmail(props) {\n  var _props$validateAgains = props.validateAgainst,\n      validateAgainst = _props$validateAgains === void 0 ? {} : _props$validateAgains;\n  var email = validateAgainst.email,\n      required = validateAgainst.required;\n  validateAgainst.email = email || true;\n  validateAgainst.required = required || true;\n  var inputEmailProps = objectSpread({}, props, {\n    type: \"email\",\n    validateAgainst: validateAgainst\n  });\n  return React.createElement(Input$1, inputEmailProps);\n};\n\nvar css$t = \".InputDropdown {\\n  width: 240px;\\n  height: 36px; }\\n  .InputDropdown .DropdownSelect {\\n    border: #dbdcdf solid 1px;\\n    font-family: MercuryTextG1;\\n    font-weight: 600;\\n    font-size: 14px;\\n    height: 100%;\\n    padding-left: 14px;\\n    width: 100%;\\n    color: #19294f; }\\n  .InputDropdown .Error {\\n    border: #e41647 solid 1px; }\\n  .InputDropdown .DropdownSelect:hover {\\n    border: #c5d0de solid 1px; }\\n  .InputDropdown .DropdownSelect:focus {\\n    border: #00aeef solid 1px;\\n    color: #19294f; }\\n  .InputDropdown .DropdownSelect[disabled] {\\n    background-color: #e9edf1;\\n    border: rgba(0, 0, 0, 0.1) solid 1px;\\n    color: #516173;\\n    font-family: MercuryTextG1 600 normal; }\\n  .InputDropdown .DropdownItem {\\n    background-color: #ffffff;\\n    color: #19294f;\\n    font-family: MercuryTextG1;\\n    font-weight: 600;\\n    padding-left: 13px; }\\n  .InputDropdown .DropdownItem:checked {\\n    background-color: #f1f4f8; }\\n\";\nstyleInject(css$t);\n\nvar InputDropdown =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(InputDropdown, _PureComponent);\n\n  function InputDropdown() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    classCallCheck(this, InputDropdown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = possibleConstructorReturn(this, (_getPrototypeOf2 = getPrototypeOf(InputDropdown)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    defineProperty(assertThisInitialized(_this), \"_onChange\", function (event) {\n      event.preventDefault();\n      var _this$props = _this.props,\n          onChangeHandler = _this$props.onChangeHandler,\n          name = _this$props.name;\n      var target = event.target;\n      var value = target.value;\n      onChangeHandler({\n        name: name,\n        value: value\n      });\n    });\n    return _this;\n  }\n\n  createClass(InputDropdown, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          disabled = _this$props2.disabled,\n          error = _this$props2.error,\n          name = _this$props2.name,\n          value = _this$props2.value,\n          options = _this$props2.options,\n          placeholder = _this$props2.placeholder;\n      var composedClassName = composeClassName([\"InputDropdown\", className]);\n      var optionItems = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = options[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var option = _step.value;\n          optionItems.push(React.createElement(\"option\", {\n            className: \"DropdownItem\",\n            key: option.value,\n            value: option.value\n          }, option.label));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var optionPlaceholder;\n\n      if (placeholder) {\n        optionPlaceholder = React.createElement(\"option\", {\n          className: \"DropdownPlaceholder\",\n          \"default\": true,\n          hidden: true,\n          value: \"\"\n        }, placeholder);\n      }\n\n      return React.createElement(\"div\", {\n        className: composedClassName\n      }, React.createElement(\"select\", {\n        className: \"DropdownSelect \".concat(error ? \"Error\" : \"\"),\n        name: name,\n        disabled: disabled // eslint-disable-next-line arrow-body-style\n        ,\n        onChange: this._onChange,\n        value: value\n      }, optionPlaceholder, optionItems));\n    }\n  }]);\n  return InputDropdown;\n}(PureComponent);\n\ndefineProperty(InputDropdown, \"propTypes\", {\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  error: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  onChangeHandler: PropTypes.func,\n  placeholder: PropTypes.string,\n\n  /** List of option object */\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n});\ndefineProperty(InputDropdown, \"defaultProps\", {\n  disabled: false,\n  error: false\n});\nvar InputDropdown$1 = asFormElement(InputDropdown, FormContext);\n/* Splitting fields into a seperate folder, like we talked about.\n * The forms will be it's own repository, and will have dependency\n * on the SCL for the label. We may want to have \"naked\" versions of these fields too.\n * Split things into this folder as neccesary until we do the full split.\n */\n\nvar css$u = \".DownloadContainer {\\n  width: 100%;\\n  margin: 0 16px; }\\n  .DownloadContainer .DownloadContent {\\n    display: flex;\\n    flex-wrap: wrap;\\n    margin: 15px 0; }\\n    @media screen and (min-width: 768px) {\\n      .DownloadContainer .DownloadContent {\\n        flex-wrap: nowrap; } }\\n    .DownloadContainer .DownloadContent .DownloadInfo {\\n      display: flex;\\n      flex: 1 0 100%; }\\n      @media screen and (min-width: 768px) {\\n        .DownloadContainer .DownloadContent .DownloadInfo {\\n          flex: 1 0 40%; } }\\n    .DownloadContainer .DownloadContent .Image {\\n      height: 100px;\\n      width: 75px; }\\n      @media screen and (min-width: 576px) {\\n        .DownloadContainer .DownloadContent .Image {\\n          height: 75px;\\n          width: 56.25px; } }\\n      @media screen and (min-width: 768px) {\\n        .DownloadContainer .DownloadContent .Image {\\n          height: 90px;\\n          width: 67.5px; } }\\n      @media screen and (min-width: 1024px) {\\n        .DownloadContainer .DownloadContent .Image {\\n          height: 110px;\\n          width: 82.5px; } }\\n    .DownloadContainer .DownloadContent .DownloadDescription {\\n      margin-left: 8px; }\\n      @media screen and (min-width: 576px) {\\n        .DownloadContainer .DownloadContent .DownloadDescription {\\n          margin-right: 24px; } }\\n      @media screen and (min-width: 768px) {\\n        .DownloadContainer .DownloadContent .DownloadDescription {\\n          margin: 0 36px 0 12px; } }\\n      @media screen and (min-width: 1024px) {\\n        .DownloadContainer .DownloadContent .DownloadDescription {\\n          margin: 0 36px 0 16px; } }\\n    .DownloadContainer .DownloadContent .DownloadButton, .DownloadContainer .DownloadContent .DownloadButtonMobile {\\n      align-items: center;\\n      margin-left: 24px; }\\n      @media screen and (min-width: 768px) {\\n        .DownloadContainer .DownloadContent .DownloadButton, .DownloadContainer .DownloadContent .DownloadButtonMobile {\\n          margin-left: 36px; } }\\n    .DownloadContainer .DownloadContent .DownloadButton {\\n      display: none; }\\n      @media screen and (min-width: 768px) {\\n        .DownloadContainer .DownloadContent .DownloadButton {\\n          display: inline-flex; } }\\n    .DownloadContainer .DownloadContent .DownloadButtonMobile {\\n      display: inline-flex; }\\n      @media screen and (min-width: 768px) {\\n        .DownloadContainer .DownloadContent .DownloadButtonMobile {\\n          display: none; } }\\n    .DownloadContainer .DownloadContent .DownloadLinks {\\n      display: inline-flex; }\\n      .DownloadContainer .DownloadContent .DownloadLinks .InputDropdown {\\n        display: flex;\\n        flex: 1 0 220px;\\n        width: 100%; }\\n        @media screen and (min-width: 576px) {\\n          .DownloadContainer .DownloadContent .DownloadLinks .InputDropdown {\\n            width: 240px;\\n            display: block; } }\\n    .DownloadContainer .DownloadContent .DownloadLabel {\\n      width: auto; }\\n      .DownloadContainer .DownloadContent .DownloadLabel .LabelSpan {\\n        max-width: 240px; }\\n\";\nstyleInject(css$u);\n\nvar DownloadableResources =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(DownloadableResources, _PureComponent);\n\n  function DownloadableResources(props) {\n    var _this;\n\n    classCallCheck(this, DownloadableResources);\n    _this = possibleConstructorReturn(this, getPrototypeOf(DownloadableResources).call(this, props));\n    defineProperty(assertThisInitialized(_this), \"handleOnChange\", function (event) {\n      _this.setState({\n        downloadContent: event.target.value\n      });\n    });\n    var options = props.options;\n    _this.state = {\n      downloadContent: options.length > 0 ? options[0].value : \"\"\n    };\n    return _this;\n  }\n\n  createClass(DownloadableResources, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          label = _this$props.label,\n          options = _this$props.options,\n          source = _this$props.source,\n          altText = _this$props.altText;\n      var downloadContent = this.state.downloadContent; // Create valid id string out of title\n\n      var id = title.replace(/\\W/g, \"_\");\n      var selectedOption = options.find(function (option) {\n        return option.value === downloadContent;\n      });\n      var formattedOptions = options.map(function (option) {\n        return {\n          value: option.value,\n          label: option.label\n        };\n      });\n      var description = selectedOption ? selectedOption.description : \"\";\n      return React.createElement(Container, {\n        fluid: true,\n        className: \"DownloadableResources\"\n      }, React.createElement(\"div\", {\n        className: \"DownloadContainer\"\n      }, React.createElement(Divider, null), React.createElement(\"div\", {\n        className: \"DownloadContent\"\n      }, React.createElement(\"div\", {\n        className: \"DownloadInfo\"\n      }, React.createElement(\"div\", null, React.createElement(Image, {\n        source: source,\n        altText: altText\n      })), React.createElement(\"div\", {\n        className: \"DownloadDescription\"\n      }, React.createElement(DisplayText, {\n        size: \"L\"\n      }, StringUtils.formatMax(title, 75)), React.createElement(BodyText, {\n        size: \"S\"\n      }, description))), React.createElement(Label, {\n        htmlFor: id,\n        label: label,\n        className: \"DownloadLabel\"\n      }, React.createElement(\"div\", {\n        className: \"DownloadLinks\"\n      }, React.createElement(InputDropdown$1, {\n        id: id,\n        options: formattedOptions,\n        name: \"downloadable-content\",\n        onChangeHandler: this.handleOnChange\n      }), React.createElement(ButtonIcon, {\n        icon: \"download\",\n        theme: \"Primary\",\n        size: \"M\",\n        className: \"DownloadButtonMobile\",\n        external: true,\n        download: true,\n        href: downloadContent\n      }), React.createElement(ButtonLink, {\n        theme: \"Primary\",\n        size: \"M\",\n        className: \"DownloadButton\",\n        external: true,\n        download: true,\n        href: downloadContent\n      }, \"Download\")))), React.createElement(Divider, null)));\n    }\n  }]);\n  return DownloadableResources;\n}(PureComponent);\n\ndefineProperty(DownloadableResources, \"propTypes\", {\n  title: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n    description: PropTypes.string\n  })).isRequired,\n  source: PropTypes.string.isRequired,\n  altText: PropTypes.string.isRequired\n}); // Allowed list of locales\n\nvar allowedLocales = [{\n  label: \"Canada/English\",\n  value: \"en-CA\"\n}, {\n  label: \"Canada/Français\",\n  value: \"fr-CA\"\n}, {\n  label: \"United Kingdom/English\",\n  value: \"en-UK\"\n}, {\n  label: \"United States/English\",\n  value: \"en-US\"\n}];\nvar config = {\n  allowedLocales: allowedLocales\n};\nvar config_1 = config.allowedLocales;\nvar css$v = \".LocaleSwitcher {\\n  position: relative;\\n  display: inline-flex;\\n  align-items: center;\\n  max-width: 240px; }\\n  .LocaleSwitcher .DropdownSelect {\\n    padding-left: 48px;\\n    appearance: none;\\n    -webkit-appearance: none;\\n    -moz-appearance: none;\\n    cursor: pointer; }\\n  .LocaleSwitcher .IconCountry {\\n    position: absolute;\\n    left: 8px;\\n    pointer-events: none; }\\n  .LocaleSwitcher .IconSelect {\\n    position: absolute;\\n    right: 16px;\\n    pointer-events: none; }\\n\";\nstyleInject(css$v);\n\nvar LocaleSwitcher =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(LocaleSwitcher, _PureComponent);\n\n  function LocaleSwitcher(props) {\n    var _this;\n\n    classCallCheck(this, LocaleSwitcher);\n    _this = possibleConstructorReturn(this, getPrototypeOf(LocaleSwitcher).call(this, props));\n    defineProperty(assertThisInitialized(_this), \"handleOnChange\", function (target) {\n      _this.setState({\n        locale: target.value\n      }, function () {\n        var _this$state = _this.state,\n            locale = _this$state.locale,\n            allowedLocales = _this$state.allowedLocales,\n            pathnameLocale = _this$state.pathnameLocale;\n        var redirectURL; // Check to see if the url already contains a locale, remove it if true\n\n        if (allowedLocales.filter(function (item) {\n          return item.value === pathnameLocale;\n        }).length > 0) {\n          redirectURL = \"\".concat(locale).concat(browser.window.location.pathname.slice(6));\n        } else {\n          redirectURL = \"\".concat(locale).concat(browser.window.location.pathname);\n        }\n\n        browser.window.location.pathname = redirectURL;\n      });\n    });\n    var _allowedLocales = props.allowedLocales;\n\n    var _pathnameLocale = browser.window.location.pathname.slice(1, 6);\n\n    var _locale;\n\n    if (_allowedLocales.filter(function (item) {\n      return item.value === _pathnameLocale;\n    }).length > 0) {\n      _locale = browser.window.location.pathname.slice(1, 6);\n    } else {\n      _locale = \"en-CA\";\n    }\n\n    _this.state = {\n      locale: _locale,\n      allowedLocales: _allowedLocales,\n      pathnameLocale: _pathnameLocale\n    };\n    return _this;\n  }\n\n  createClass(LocaleSwitcher, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          locale = _this$state2.locale,\n          allowedLocales = _this$state2.allowedLocales;\n      return React.createElement(\"div\", {\n        className: \"LocaleSwitcher\"\n      }, React.createElement(Icon, {\n        icon: \"global\",\n        size: \"S\",\n        className: \"IconCountry\"\n      }), React.createElement(InputDropdown$1, {\n        name: \"locale-switcher\",\n        value: locale,\n        options: allowedLocales,\n        onChangeHandler: this.handleOnChange\n      }), React.createElement(Icon, {\n        icon: \"chevronDown\",\n        size: \"S\",\n        className: \"IconSelect\"\n      }));\n    }\n  }]);\n  return LocaleSwitcher;\n}(PureComponent);\n\ndefineProperty(LocaleSwitcher, \"propTypes\", {\n  /** List of locales supported by the website, stored in config */\n  allowedLocales: PropTypes.array\n});\nvar css$w = \".LocaleSwitcherFirstTimeUser {\\n  display: flex;\\n  background-color: #f1f4f8; }\\n  @media screen and (min-width: 768px) {\\n    .LocaleSwitcherFirstTimeUser {\\n      padding: 0 16px; } }\\n  .LocaleSwitcherFirstTimeUser.Hidden {\\n    display: none; }\\n  .LocaleSwitcherFirstTimeUser .LocaleSwitcherContainer {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    position: relative;\\n    width: 100%;\\n    margin: 8px; }\\n    @media screen and (min-width: 768px) {\\n      .LocaleSwitcherFirstTimeUser .LocaleSwitcherContainer {\\n        flex-direction: row;\\n        margin: 8px auto;\\n        width: auto; } }\\n    .LocaleSwitcherFirstTimeUser .LocaleSwitcherContainer .BodyText {\\n      margin: 0 32px;\\n      text-align: center; }\\n      @media screen and (min-width: 768px) {\\n        .LocaleSwitcherFirstTimeUser .LocaleSwitcherContainer .BodyText {\\n          text-align: left;\\n          margin: 0px; } }\\n    .LocaleSwitcherFirstTimeUser .LocaleSwitcherContainer .LocaleSwitcher {\\n      margin-top: 8px; }\\n      @media screen and (min-width: 768px) {\\n        .LocaleSwitcherFirstTimeUser .LocaleSwitcherContainer .LocaleSwitcher {\\n          margin: 0 8px; } }\\n  .LocaleSwitcherFirstTimeUser .IconClose {\\n    position: absolute;\\n    top: 0;\\n    right: 0; }\\n    @media screen and (min-width: 768px) {\\n      .LocaleSwitcherFirstTimeUser .IconClose {\\n        position: initial;\\n        margin-left: 8px; } }\\n\";\nstyleInject(css$w);\n\nvar LocaleSwitcherFirstTimeUser =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(LocaleSwitcherFirstTimeUser, _PureComponent);\n\n  function LocaleSwitcherFirstTimeUser(props) {\n    var _this;\n\n    classCallCheck(this, LocaleSwitcherFirstTimeUser);\n    _this = possibleConstructorReturn(this, getPrototypeOf(LocaleSwitcherFirstTimeUser).call(this, props));\n    defineProperty(assertThisInitialized(_this), \"handleOnClick\", function (event) {\n      if (event.type === \"click\") {\n        _this.setState({\n          hidden: true\n        });\n      } else if (event.type === \"keypress\" && event.key === \"Enter\") {\n        _this.setState({\n          hidden: true\n        });\n      }\n    });\n    _this.state = {\n      hidden: false\n    };\n    return _this;\n  }\n\n  createClass(LocaleSwitcherFirstTimeUser, [{\n    key: \"render\",\n    value: function render() {\n      var hidden = this.state.hidden;\n      var message = this.props.message;\n      return React.createElement(Container, {\n        fluid: true,\n        className: \"LocaleSwitcherFirstTimeUser \".concat(hidden ? \"Hidden\" : \"\")\n      }, React.createElement(\"div\", {\n        className: \"LocaleSwitcherContainer\"\n      }, React.createElement(BodyText, {\n        size: \"S\"\n      }, message), React.createElement(LocaleSwitcher, {\n        allowedLocales: config_1\n      }), React.createElement(\"span\", {\n        role: \"button\",\n        tabIndex: 0,\n        onClick: this.handleOnClick,\n        onKeyPress: this.handleOnClick,\n        className: \"IconClose\"\n      }, React.createElement(Icon, {\n        icon: \"close\",\n        size: \"S\"\n      }))));\n    }\n  }]);\n  return LocaleSwitcherFirstTimeUser;\n}(PureComponent);\n\ndefineProperty(LocaleSwitcherFirstTimeUser, \"propTypes\", {\n  message: PropTypes.string\n});\ndefineProperty(LocaleSwitcherFirstTimeUser, \"defaultProps\", {\n  message: \"Select your country / language to see content specific to your location and shop online\"\n});\nvar css$x = \".GenericContent .AspectRatio16-9 {\\n  width: 100%;\\n  padding-top: 56.25%;\\n  /* 16:9 Aspect Ratio */\\n  position: relative; }\\n  .GenericContent .AspectRatio16-9 .Image {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    right: 0;\\n    width: 100%;\\n    height: 100%; }\\n\\n.GenericContent .Heading {\\n  margin-top: 18px;\\n  margin-bottom: 9px; }\\n\\n.GenericContent .BodyText {\\n  margin-top: 9px;\\n  margin-bottom: 18px; }\\n\\n.GenericContent .GenericContentButtons {\\n  display: flex;\\n  justify-content: center; }\\n  .GenericContent .GenericContentButtons .BaseLink {\\n    align-items: center;\\n    margin-right: 12px;\\n    margin-left: 12px; }\\n\\n@media screen and (max-width: 575px) {\\n  .GenericContent .GenericContentButtons {\\n    display: block; }\\n    .GenericContent .GenericContentButtons .ButtonContainer {\\n      margin: auto; }\\n      .GenericContent .GenericContentButtons .ButtonContainer .Button {\\n        width: 100%; } }\\n\";\nstyleInject(css$x);\n\nvar GenericContent =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(GenericContent, _PureComponent);\n\n  function GenericContent() {\n    classCallCheck(this, GenericContent);\n    return possibleConstructorReturn(this, getPrototypeOf(GenericContent).apply(this, arguments));\n  }\n\n  createClass(GenericContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          body = _this$props.body,\n          bodySize = _this$props.bodySize,\n          centered = _this$props.centered,\n          titleText = _this$props.titleText,\n          imageAltText = _this$props.imageAltText,\n          imageMobileSource = _this$props.imageMobileSource,\n          imageSource = _this$props.imageSource,\n          imageLongDesc = _this$props.imageLongDesc,\n          className = _this$props.className,\n          buttons = _this$props.buttons;\n      var imageProps = {\n        altText: imageAltText,\n        longDesc: imageLongDesc,\n        mobileSource: imageMobileSource,\n        source: imageSource\n      }; // TODO: Create utility for aspect ratio classes\n\n      var image = React.createElement(\"div\", {\n        className: \"AspectRatio16-9\"\n      }, React.createElement(Image, _extends_1({\n        className: \"GenericContentImage\",\n        key: \"generic-content-image\"\n      }, imageProps)));\n      var title = React.createElement(Heading, {\n        size: \"M\",\n        centered: centered\n      }, StringUtils.formatMax(titleText, 50));\n      var buttonsClassName = centered ? \"Centered\" : \"\";\n      return React.createElement(\"div\", {\n        className: composeClassName([\"GenericContent\", className])\n      }, image, title, React.createElement(BodyText, {\n        size: bodySize,\n        className: \"BodyText\",\n        centered: centered\n      }, body), React.createElement(\"div\", {\n        className: composeClassName([\"GenericContentButtons\", buttonsClassName])\n      }, buttons));\n    }\n  }]);\n  return GenericContent;\n}(PureComponent);\n\ndefineProperty(GenericContent, \"propTypes\", {\n  imageSource: PropTypes.string,\n  imageAltText: PropTypes.string,\n  imageLongDesc: PropTypes.string,\n  imageMobileSource: PropTypes.string,\n  title: PropTypes.string,\n  body: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  buttons: PropTypes.array\n});\ndefineProperty(GenericContent, \"defaultProps\", {\n  mobile: false,\n  buttons: []\n});\nvar css$y = \".ImageLinkWrapper {\\n  display: flex;\\n  overflow: hidden;\\n  width: 100%;\\n  height: 100%; }\\n  .ImageLinkWrapper .ImageLinkImage > img {\\n    transition: all 0.3s ease-in; }\\n  .ImageLinkWrapper:hover .ImageLinkImage > img {\\n    transform: scale(1.03); }\\n\";\nstyleInject(css$y);\n\nvar ImageLink =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(ImageLink, _PureComponent);\n\n  function ImageLink() {\n    classCallCheck(this, ImageLink);\n    return possibleConstructorReturn(this, getPrototypeOf(ImageLink).apply(this, arguments));\n  }\n\n  createClass(ImageLink, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          altText = _this$props.altText,\n          className = _this$props.className,\n          external = _this$props.external,\n          href = _this$props.href,\n          longdesc = _this$props.longdesc,\n          mobileSource = _this$props.mobileSource,\n          source = _this$props.source,\n          title = _this$props.title,\n          internalLinkComponent = _this$props.internalLinkComponent;\n      var imageProps = {\n        altText: altText,\n        mobileSource: mobileSource,\n        source: source,\n        longdesc: longdesc\n      };\n      var linkProps = {\n        external: external,\n        href: href,\n        title: title\n      };\n      var composedClassName = composeClassName([\"ImageLinkWrapper\", className]);\n      return React.createElement(\"div\", {\n        className: composedClassName\n      }, React.createElement(BaseLink, _extends_1({\n        internalLinkComponent: internalLinkComponent,\n        className: \"ImageLink\"\n      }, linkProps), React.createElement(Image, _extends_1({\n        className: \"ImageLinkImage\"\n      }, imageProps))));\n    }\n  }]);\n  return ImageLink;\n}(PureComponent);\n\ndefineProperty(ImageLink, \"propTypes\", {\n  altText: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  external: PropTypes.bool,\n  href: PropTypes.string,\n  longdesc: PropTypes.string,\n  mobileSource: PropTypes.string,\n  source: PropTypes.string.isRequired,\n  title: PropTypes.string,\n\n  /** Changes the component used to create links. */\n  internalLinkComponent: PropTypes.any\n});\ndefineProperty(ImageLink, \"defaultProps\", {\n  href: \"\",\n  external: false,\n  title: \"\",\n  longdesc: \"\",\n  internalLinkComponent: null\n});\nvar css$z = \".TextAreaContainer {\\n  height: 100%; }\\n  .TextAreaContainer .TextAreaGroup {\\n    height: calc(100% - 24px);\\n    width: 100%;\\n    border: 1px solid #dbdcdf; }\\n    .TextAreaContainer .TextAreaGroup .InputTextArea {\\n      height: 100%;\\n      width: 100%;\\n      box-sizing: border-box;\\n      padding: 8px 25px 7px 15px;\\n      border: none;\\n      outline: none;\\n      resize: none;\\n      font-family: MercuryTextG1;\\n      font-weight: 600;\\n      font-size: 16px;\\n      letter-spacing: 0.5px;\\n      color: #19294f;\\n      caret-color: #00aeef; }\\n    .TextAreaContainer .TextAreaGroup .Icon {\\n      display: inline;\\n      position: relative;\\n      bottom: 100%;\\n      left: calc(100% - 24px); }\\n    .TextAreaContainer .TextAreaGroup.approved {\\n      border: 1px solid #0d7f50; }\\n      .TextAreaContainer .TextAreaGroup.approved .Icon .ColoredBase {\\n        fill: #0d7f50; }\\n    .TextAreaContainer .TextAreaGroup.error {\\n      border: 1px solid #e41647; }\\n      .TextAreaContainer .TextAreaGroup.error .Icon .ColoredBase {\\n        fill: #e41647; }\\n    .TextAreaContainer .TextAreaGroup:hover {\\n      border: 1px solid #c5d0de;\\n      cursor: text; }\\n    .TextAreaContainer .TextAreaGroup:focus {\\n      border: 1px solid #00aeef; }\\n    .TextAreaContainer .TextAreaGroup:active {\\n      border: 1px solid #00aeef; }\\n\";\nstyleInject(css$z);\n\nvar InputTextArea =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(InputTextArea, _PureComponent);\n\n  function InputTextArea() {\n    classCallCheck(this, InputTextArea);\n    return possibleConstructorReturn(this, getPrototypeOf(InputTextArea).apply(this, arguments));\n  }\n\n  createClass(InputTextArea, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          approved = _this$props.approved,\n          className = _this$props.className,\n          disabled = _this$props.disabled,\n          error = _this$props.error,\n          icon = _this$props.icon,\n          label = _this$props.label,\n          name = _this$props.name,\n          onChangeHandler = _this$props.onChangeHandler,\n          placeholder = _this$props.placeholder,\n          title = _this$props.title,\n          value = _this$props.value;\n      var labelProps = {\n        label: label\n      };\n      var composedClassName = composeClassName([\"TextAreaGroup\", approved ? \"approved\" : \"\", error ? \"error\" : \"\", className]);\n      var iconComponent = null;\n      var noIconStyles;\n\n      if (icon) {\n        var iconProps = {\n          icon: icon\n        };\n        noIconStyles = null;\n        iconComponent = React.createElement(Icon, _extends_1({\n          size: \"S\"\n        }, iconProps));\n      }\n\n      var htmlFor = name;\n      return React.createElement(\"div\", {\n        className: \"TextAreaContainer\"\n      }, React.createElement(Label, _extends_1({\n        htmlFor: htmlFor\n      }, labelProps), React.createElement(\"div\", {\n        className: composedClassName\n      }, React.createElement(\"textarea\", {\n        className: \"InputTextArea\",\n        id: htmlFor,\n        disabled: disabled,\n        name: name,\n        onChange: onChangeHandler,\n        placeholder: placeholder,\n        style: noIconStyles,\n        title: title,\n        value: value\n      }), iconComponent)));\n    }\n  }]);\n  return InputTextArea;\n}(PureComponent);\n\ndefineProperty(InputTextArea, \"propTypes\", {\n  /** Indicates if the user input is accepted */\n  approved: PropTypes.bool,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n\n  /** Indicates if there is an error in the user input */\n  error: PropTypes.bool,\n  icon: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChangeHandler: PropTypes.func,\n  placeholder: PropTypes.string,\n\n  /** Indicate purpose of text input for accessibility */\n  title: PropTypes.string.isRequired,\n  value: PropTypes.string\n});\ndefineProperty(InputTextArea, \"defaultProps\", {\n  approved: false,\n  className: \"\",\n  disabled: false,\n  error: false,\n  icon: \"\",\n  placeholder: \"\"\n});\n\nvar MarkdownParser =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(MarkdownParser, _PureComponent);\n\n  function MarkdownParser() {\n    classCallCheck(this, MarkdownParser);\n    return possibleConstructorReturn(this, getPrototypeOf(MarkdownParser).apply(this, arguments));\n  }\n\n  createClass(MarkdownParser, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          internalLinkComponent = _this$props.internalLinkComponent;\n      var output = []; // Define Renderers Wrappers for React-Markdown\n\n      var MarkdownLink = function MarkdownLink(props) {\n        var external = props.href[0] !== \"/\";\n        return React.createElement(BaseLink, {\n          unstyled: true,\n          internalLinkComponent: internalLinkComponent,\n          href: props.href,\n          external: external\n        }, props.children);\n      };\n\n      var MarkdownBulletList = function MarkdownBulletList(props) {\n        return React.createElement(BulletList, null, props.children);\n      };\n\n      var MarkdownBulletListItem = function MarkdownBulletListItem(props) {\n        return React.createElement(BulletListItem, null, props.children);\n      };\n\n      var renderers = {\n        link: MarkdownLink,\n        list: MarkdownBulletList,\n        listItem: MarkdownBulletListItem\n      };\n      var childrenArray = children instanceof Array ? children : [children];\n      childrenArray.forEach(function (child) {\n        if (typeof child === \"string\") {\n          var markdownOutput = React.createElement(ReactMarkdown, {\n            source: child,\n            renderers: renderers,\n            allowedTypes: [\"text\", \"break\", \"paragraph\", \"emphasis\", \"strong\", \"link\", \"list\", \"listItem\"]\n          });\n          output.push(markdownOutput);\n        } else {\n          output.push(child);\n        }\n      });\n      return output;\n    }\n  }]);\n  return MarkdownParser;\n}(PureComponent);\n\ndefineProperty(MarkdownParser, \"propTypes\", {\n  internalLinkComponent: PropTypes.any.isRequired\n});\nvar css$A = \".KeyValuePair {\\n  display: flex;\\n  max-width: 100%;\\n  padding-bottom: 8px; }\\n  .KeyValuePair .key {\\n    flex: 50%;\\n    padding-right: 8px; }\\n  .KeyValuePair .value {\\n    flex: 50%; }\\n\";\nstyleInject(css$A);\n\nvar KeyValuePair =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(KeyValuePair, _PureComponent);\n\n  function KeyValuePair() {\n    classCallCheck(this, KeyValuePair);\n    return possibleConstructorReturn(this, getPrototypeOf(KeyValuePair).apply(this, arguments));\n  }\n\n  createClass(KeyValuePair, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          title = _this$props.title,\n          value = _this$props.value;\n      var composedClassName = composeClassName([\"KeyValuePair\", className]);\n      return React.createElement(\"li\", {\n        className: composedClassName\n      }, React.createElement(DisplayText, {\n        size: \"M\",\n        className: \"key\"\n      }, title, \":\"), React.createElement(BodyText, {\n        size: \"M\",\n        className: \"value\"\n      }, value));\n    }\n  }]);\n  return KeyValuePair;\n}(PureComponent);\n\ndefineProperty(KeyValuePair, \"propTypes\", {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  value: PropTypes.string\n});\nvar colors = {\n  \"base-black-color\": {\n    name: \"Base Black\",\n    value: \"base-black-color\",\n    color: \"#1d2530\",\n    type: \"base\"\n  },\n  \"base-white-color\": {\n    name: \"Base White\",\n    value: \"base-white-color\",\n    color: \"#ffffff\",\n    type: \"base\"\n  },\n  \"brand-navy-color\": {\n    name: \"Brand Navy\",\n    value: \"brand-navy-color\",\n    color: \"#19294f\",\n    type: \"brand\"\n  },\n  \"brand-accessible-blue-color\": {\n    name: \"Brand Accessible Blue\",\n    value: \"brand-accessible-blue-color\",\n    color: \"#167cba\",\n    type: \"brand\"\n  },\n  \"brand-blue-color\": {\n    name: \"Brand Blue\",\n    value: \"brand-blue-color\",\n    color: \"#00aeef\",\n    type: \"brand\"\n  },\n  \"brand-orange-color\": {\n    name: \"Brand Orange\",\n    value: \"brand-orange-color\",\n    color: \"#db3b00\",\n    type: \"brand\"\n  },\n  \"brand-purple-color\": {\n    name: \"Brand Purple\",\n    value: \"brand-purple-color\",\n    color: \"#6970b4\",\n    type: \"brand\"\n  },\n  \"brand-red-color\": {\n    name: \"Brand Red\",\n    value: \"brand-red-color\",\n    color: \"#e41647\",\n    type: \"brand\"\n  },\n  \"brand-yellow-color\": {\n    name: \"Brand Yellow\",\n    value: \"brand-yellow-color\",\n    color: \"#ffde30\",\n    type: \"brand\"\n  },\n  \"brand-green-color\": {\n    name: \"Brand Green\",\n    value: \"brand-green-color\",\n    color: \"#0d7f50\",\n    type: \"brand\"\n  },\n  \"brand-grey-color\": {\n    name: \"Brand Grey\",\n    value: \"brand-grey-color\",\n    color: \"#545555\",\n    type: \"brand\"\n  },\n  \"base-icon-color\": {\n    name: \"Base Icon\",\n    value: \"base-icon-color\",\n    color: \"#a8aab7\",\n    type: \"base\"\n  },\n  \"base-blue-grey\": {\n    name: \"Base Blue Grey\",\n    value: \"base-blue-grey\",\n    color: \"#c5d0de\",\n    type: \"base\"\n  },\n  \"base-light-blue-color\": {\n    name: \"Base Light Blue\",\n    value: \"base-light-blue-color\",\n    color: \"#f1f4f8\",\n    type: \"base\"\n  },\n  \"base-elements-color\": {\n    name: \"Base Elements\",\n    value: \"base-elements-color\",\n    color: \"#f4f6f9\",\n    type: \"base\"\n  },\n  \"base-border-yellow-color\": {\n    name: \"Base Border Yellow\",\n    value: \"base-border-yellow-color\",\n    color: \"#e5c72b\",\n    type: \"base\"\n  },\n  \"base-border-grey-color\": {\n    name: \"Base Border Grey\",\n    value: \"base-border-grey-color\",\n    color: \"#dbdcdf\",\n    type: \"base\"\n  },\n  \"base-dark-grey-color\": {\n    name: \"Base Dark Grey\",\n    value: \"base-dark-grey-color\",\n    color: \"#516173\",\n    type: \"base\"\n  },\n  \"base-disabled-grey-color\": {\n    name: \"Base Disabled Grey\",\n    value: \"base-disabled-grey-color\",\n    color: \"#e9edf1\",\n    type: \"base\"\n  }\n};\nvar colors_1 = {\n  colors: colors\n};\nvar colors_2 = colors_1.colors;\nvar css$B = \".TextWithBackground {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  word-break: break-word;\\n  box-sizing: border-box; }\\n  .TextWithBackground * {\\n    overflow: hidden; }\\n\";\nstyleInject(css$B);\n\nvar TextWithBackground =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(TextWithBackground, _PureComponent);\n\n  function TextWithBackground() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    classCallCheck(this, TextWithBackground);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = possibleConstructorReturn(this, (_getPrototypeOf2 = getPrototypeOf(TextWithBackground)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    defineProperty(assertThisInitialized(_this), \"_prepareChildren\", function (children, whiteText) {\n      if (!whiteText) return children;\n      return React.Children.map(children, function (child) {\n        return React.cloneElement(child, {\n          whiteText: true\n        });\n      });\n    });\n    return _this;\n  }\n\n  createClass(TextWithBackground, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          color = _this$props.color,\n          whiteText = _this$props.whiteText,\n          children = _this$props.children;\n      var composedClassName = composeClassName([className, \"TextWithBackground\"]);\n\n      var toRender = this._prepareChildren(children, whiteText);\n\n      return React.createElement(\"div\", {\n        className: composedClassName,\n        style: {\n          backgroundColor: color\n        }\n      }, toRender);\n    }\n  }]);\n  return TextWithBackground;\n}(PureComponent);\n\ndefineProperty(TextWithBackground, \"propTypes\", {\n  className: PropTypes.string,\n\n  /** Hex code for background */\n  color: PropTypes.string,\n  whiteText: PropTypes.bool,\n  children: PropTypes.node.isRequired\n});\ndefineProperty(TextWithBackground, \"defaultProps\", {\n  whiteText: false,\n  color: \"#FFFFFF\"\n});\nvar css$C = \".MarketingtileA, .MarketingTileA > a {\\n  display: flex;\\n  flex-direction: column; }\\n  @media screen and (min-width: 768px) {\\n    .MarketingtileA, .MarketingTileA > a {\\n      flex-direction: row; } }\\n  @media screen and (min-width: 1024px) {\\n    .MarketingtileA, .MarketingTileA > a {\\n      flex-direction: row; } }\\n  @media screen and (min-width: 1440px) {\\n    .MarketingtileA, .MarketingTileA > a {\\n      flex-direction: row; } }\\n\\n.MarketingTileA > a {\\n  display: flex;\\n  overflow: hidden;\\n  width: 100%;\\n  height: 100%;\\n  align-items: flex-start; }\\n  .MarketingTileA > a .TileImage > img {\\n    transition: all 0.3s ease-in; }\\n  .MarketingTileA > a:hover .TileImage > img {\\n    transform: scale(1.03); }\\n\\n.MarketingTileA .TileLink:hover {\\n  text-decoration: None; }\\n\\n.MarketingTileA .TileLink .TileTitle:hover {\\n  text-decoration: underline; }\\n\\n.MarketingTileA .TileImage {\\n  height: 200px; }\\n  @media screen and (min-width: 768px) {\\n    .MarketingTileA .TileImage {\\n      height: 244px; } }\\n  @media screen and (min-width: 1024px) {\\n    .MarketingTileA .TileImage {\\n      height: 300px; } }\\n  @media screen and (min-width: 1440px) {\\n    .MarketingTileA .TileImage {\\n      height: 370px; } }\\n\\n.MarketingTileA .TileText {\\n  z-index: 1;\\n  height: 200px;\\n  padding: 19px 12px 19px 12px;\\n  width: 100%;\\n  word-wrap: break-word; }\\n  @media screen and (min-width: 768px) {\\n    .MarketingTileA .TileText {\\n      padding: 23px 10px 23px 10px;\\n      width: 256px;\\n      height: 244px; } }\\n  @media screen and (min-width: 1024px) {\\n    .MarketingTileA .TileText {\\n      padding: 35px 20px 35px 20px;\\n      width: 320px;\\n      height: 300px; } }\\n  @media screen and (min-width: 1440px) {\\n    .MarketingTileA .TileText {\\n      padding: 70px 30px 70px 30px;\\n      width: 392px;\\n      height: 370px; } }\\n  .MarketingTileA .TileText .TileSubtitle {\\n    height: 20px; }\\n  .MarketingTileA .TileText .TileTitle {\\n    margin: 16px 0px;\\n    height: 72px; }\\n    @media screen and (min-width: 768px) {\\n      .MarketingTileA .TileText .TileTitle {\\n        height: 108px; } }\\n    @media screen and (min-width: 1024px) {\\n      .MarketingTileA .TileText .TileTitle {\\n        height: 126px; } }\\n\";\nstyleInject(css$C);\n\nvar MarketingTileA =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(MarketingTileA, _PureComponent);\n\n  function MarketingTileA() {\n    classCallCheck(this, MarketingTileA);\n    return possibleConstructorReturn(this, getPrototypeOf(MarketingTileA).apply(this, arguments));\n  }\n\n  createClass(MarketingTileA, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          backgroundColor = _this$props.backgroundColor,\n          body = _this$props.body,\n          subTitle = _this$props.subTitle,\n          title = _this$props.title,\n          imageAltText = _this$props.imageAltText,\n          mobile = _this$props.mobile,\n          imageMobileSource = _this$props.imageMobileSource,\n          imageSource = _this$props.imageSource,\n          imageLongDesc = _this$props.imageLongDesc,\n          external = _this$props.external,\n          href = _this$props.href,\n          linkTitle = _this$props.linkTitle,\n          internalLinkComponent = _this$props.internalLinkComponent,\n          className = _this$props.className,\n          tabIndex = _this$props.tabIndex,\n          whiteText = _this$props.whiteText;\n      var imageProps = {\n        altText: imageAltText,\n        longDesc: imageLongDesc,\n        mobileSource: imageMobileSource,\n        source: imageSource\n      };\n      var text = React.createElement(TextWithBackground, {\n        color: backgroundColor,\n        whiteText: whiteText,\n        className: \"TileText\",\n        key: \"marketing-tile-a-text\"\n      }, React.createElement(DisplayText, {\n        size: \"M\",\n        className: \"TileSubtitle\"\n      }, StringUtils.formatMax(subTitle, 30)), React.createElement(Heading, {\n        size: \"M\",\n        className: \"TileTitle\"\n      }, StringUtils.formatMax(title, 30)), React.createElement(BodyText, {\n        size: \"M\",\n        className: \"BodyText\"\n      }, StringUtils.formatMax(body, 80)));\n      var image = React.createElement(Image, _extends_1({\n        className: \"TileImage\",\n        key: \"marketing-tile-a-image\"\n      }, imageProps));\n      var children = [text, image];\n\n      if (mobile) {\n        children = [image, text];\n      }\n\n      var childrenWithLink;\n\n      if (href) {\n        var linkProps = {\n          href: href,\n          internalLinkComponent: internalLinkComponent,\n          title: linkTitle,\n          external: external\n        };\n        childrenWithLink = React.createElement(BaseLink, _extends_1({\n          className: \"TileLink\"\n        }, linkProps), children);\n      }\n\n      return React.createElement(Col, {\n        className: composeClassName([\"MarketingTileA\", className]),\n        xs: {\n          span: 12\n        },\n        md: {\n          span: 12\n        },\n        lg: {\n          span: 12\n        },\n        xl: {\n          span: 12\n        },\n        tabIndex: tabIndex\n      }, childrenWithLink || children);\n    }\n  }]);\n  return MarketingTileA;\n}(PureComponent);\n\ndefineProperty(MarketingTileA, \"propTypes\", {\n  imageSource: PropTypes.string.isRequired,\n  imageAltText: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string,\n  body: PropTypes.string,\n  className: PropTypes.string,\n  href: PropTypes.string,\n  imageLongDesc: PropTypes.string,\n  imageMobileSource: PropTypes.string,\n  internalLinkComponent: PropTypes.any,\n  linkTitle: PropTypes.string,\n  mobile: PropTypes.bool,\n  subTitle: PropTypes.string,\n  tabIndex: PropTypes.string,\n  whiteText: PropTypes.bool\n});\ndefineProperty(MarketingTileA, \"defaultProps\", {\n  backgroundColor: \"#6970b4\",\n  internalLinkComponent: null,\n  mobile: false,\n  whiteText: false\n});\nvar css$D = \".MarketingTileB a {\\n  display: flex;\\n  overflow: hidden;\\n  width: 100%;\\n  height: 100%;\\n  flex-direction: column; }\\n  .MarketingTileB a .TileImage > img {\\n    transition: all 0.3s ease-in; }\\n  .MarketingTileB a:hover .TileImage > img {\\n    transform: scale(1.03); }\\n\\n.MarketingTileB .TileLink:hover {\\n  text-decoration: None; }\\n\\n.MarketingTileB .TileLink .TileTitle:hover {\\n  text-decoration: underline; }\\n\\n.MarketingTileB .TileImage {\\n  height: 200px; }\\n  @media screen and (min-width: 768px) {\\n    .MarketingTileB .TileImage {\\n      height: 273px; } }\\n  @media screen and (min-width: 1024px) {\\n    .MarketingTileB .TileImage {\\n      height: 339px; } }\\n  @media screen and (min-width: 1440px) {\\n    .MarketingTileB .TileImage {\\n      height: 420px; } }\\n\\n.MarketingTileB .TileText {\\n  z-index: 1;\\n  padding: 19px 12px 19px 12px;\\n  height: 200px; }\\n  @media screen and (min-width: 768px) {\\n    .MarketingTileB .TileText {\\n      padding: 14px 14px 14px 14px;\\n      height: 192px; } }\\n  @media screen and (min-width: 1024px) {\\n    .MarketingTileB .TileText {\\n      padding: 20px 80px 20px 20px;\\n      height: 229px; } }\\n  @media screen and (min-width: 1440px) {\\n    .MarketingTileB .TileText {\\n      padding: 24px 98px 27px 30px;\\n      height: 214px; } }\\n\";\nstyleInject(css$D);\n\nvar MarketingTileB =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(MarketingTileB, _PureComponent);\n\n  function MarketingTileB() {\n    classCallCheck(this, MarketingTileB);\n    return possibleConstructorReturn(this, getPrototypeOf(MarketingTileB).apply(this, arguments));\n  }\n\n  createClass(MarketingTileB, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          backgroundColor = _this$props.backgroundColor,\n          body = _this$props.body,\n          className = _this$props.className,\n          href = _this$props.href,\n          imageAltText = _this$props.imageAltText,\n          imageMobileSource = _this$props.imageMobileSource,\n          imageSource = _this$props.imageSource,\n          internalLinkComponent = _this$props.internalLinkComponent,\n          linkExternal = _this$props.linkExternal,\n          linkTitle = _this$props.linkTitle,\n          subTitle = _this$props.subTitle,\n          title = _this$props.title,\n          whiteText = _this$props.whiteText,\n          tabIndex = _this$props.tabIndex;\n      var imageProps = {\n        source: imageSource,\n        mobileSource: imageMobileSource,\n        altText: imageAltText\n      };\n      var image = React.createElement(Image, _extends_1({\n        className: \"TileImage\",\n        key: \"marketing-tile-b-image\"\n      }, imageProps));\n      var text = React.createElement(TextWithBackground, {\n        whiteText: whiteText,\n        color: backgroundColor,\n        className: \"TileText\",\n        key: \"marketing-tile-b-text\"\n      }, React.createElement(DisplayText, {\n        size: \"M\",\n        whiteText: whiteText\n      }, StringUtils.formatMax(subTitle, 30)), React.createElement(Heading, {\n        className: \"TileTitle\",\n        size: \"M\"\n      }, StringUtils.formatMax(title, 40)), React.createElement(BodyText, {\n        size: \"M\"\n      }, StringUtils.formatMax(body, 80)));\n      var children = [image, text];\n      var childrenWithLink;\n\n      if (href) {\n        var linkProps = {\n          href: href,\n          internalLinkComponent: internalLinkComponent,\n          title: linkTitle,\n          external: linkExternal\n        };\n        childrenWithLink = React.createElement(BaseLink, _extends_1({\n          className: \"TileLink\"\n        }, linkProps), image, text);\n      }\n\n      return React.createElement(Col, {\n        className: composeClassName([\"MarketingTileB\", className]),\n        xl: {\n          span: 8\n        },\n        lg: {\n          span: 8\n        },\n        md: {\n          span: 8\n        },\n        sm: {\n          span: 8\n        },\n        xs: {\n          span: 12\n        },\n        tabIndex: tabIndex\n      }, childrenWithLink || children);\n    }\n  }]);\n  return MarketingTileB;\n}(PureComponent);\n\ndefineProperty(MarketingTileB, \"propTypes\", {\n  imageSource: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  imageAltText: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string,\n  body: PropTypes.string,\n  className: PropTypes.string,\n  href: PropTypes.string,\n  imageLongDesc: PropTypes.string,\n  imageMobileSource: PropTypes.string,\n  internalLinkComponent: PropTypes.any,\n  linkExternal: PropTypes.bool,\n  linkTitle: PropTypes.string,\n  subTitle: PropTypes.string,\n  tabIndex: PropTypes.string,\n  whiteText: PropTypes.bool\n});\ndefineProperty(MarketingTileB, \"defaultProps\", {\n  backgroundColor: \"#e41647\",\n  internalLinkComponent: null,\n  linkExternal: false,\n  whiteText: false\n});\nvar css$E = \".MarketingTileC a {\\n  display: flex;\\n  overflow: hidden;\\n  width: 100%;\\n  height: 100%;\\n  flex-direction: column; }\\n  .MarketingTileC a .TileImage > img {\\n    transition: all 0.3s ease-in; }\\n  .MarketingTileC a:hover .TileImage > img {\\n    transform: scale(1.03); }\\n\\n.MarketingTileC .TileLink:hover {\\n  text-decoration: None; }\\n\\n.MarketingTileC .TileLink .TileTitle:hover {\\n  text-decoration: underline; }\\n\\n.MarketingTileC .TileImage {\\n  height: 200px; }\\n  @media screen and (min-width: 768px) {\\n    .MarketingTileC .TileImage {\\n      height: 232px; } }\\n  @media screen and (min-width: 1024px) {\\n    .MarketingTileC .TileImage {\\n      height: 284px; } }\\n  @media screen and (min-width: 1440px) {\\n    .MarketingTileC .TileImage {\\n      height: 356px; } }\\n\\n.MarketingTileC .TileText {\\n  z-index: 1;\\n  padding: 19px 12px 19px 12px;\\n  height: 200px; }\\n  @media screen and (min-width: 768px) {\\n    .MarketingTileC .TileText {\\n      padding: 8px 12px 8px 12px;\\n      height: 232px; } }\\n  @media screen and (min-width: 1024px) {\\n    .MarketingTileC .TileText {\\n      padding: 13px 20px 13px 20px;\\n      height: 284px; } }\\n  @media screen and (min-width: 1440px) {\\n    .MarketingTileC .TileText {\\n      padding: 43px 20px 43px 20px;\\n      height: 278px; } }\\n\";\nstyleInject(css$E);\n\nvar MarketingTileC =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(MarketingTileC, _PureComponent);\n\n  function MarketingTileC() {\n    classCallCheck(this, MarketingTileC);\n    return possibleConstructorReturn(this, getPrototypeOf(MarketingTileC).apply(this, arguments));\n  }\n\n  createClass(MarketingTileC, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          backgroundColor = _this$props.backgroundColor,\n          body = _this$props.body,\n          className = _this$props.className,\n          href = _this$props.href,\n          imageAltText = _this$props.imageAltText,\n          imageMobileSource = _this$props.imageMobileSource,\n          imageSource = _this$props.imageSource,\n          internalLinkComponent = _this$props.internalLinkComponent,\n          linkExternal = _this$props.linkExternal,\n          linkTitle = _this$props.linkTitle,\n          subTitle = _this$props.subTitle,\n          title = _this$props.title,\n          whiteText = _this$props.whiteText,\n          tabIndex = _this$props.tabIndex,\n          mobile = _this$props.mobile;\n      var imageProps = {\n        source: imageSource,\n        mobileSource: imageMobileSource,\n        internalLinkComponent: null,\n        altText: imageAltText\n      };\n      var image = React.createElement(Image, _extends_1({\n        className: \"TileImage\",\n        key: \"marketing-tile-c-image\"\n      }, imageProps));\n      var text = React.createElement(TextWithBackground, {\n        whiteText: whiteText,\n        color: backgroundColor,\n        className: \"TileText\",\n        key: \"marketing-tile-c-text\"\n      }, React.createElement(DisplayText, {\n        size: \"M\",\n        whiteText: whiteText\n      }, StringUtils.formatMax(subTitle, 30)), React.createElement(Heading, {\n        className: \"TileTitle\",\n        size: \"M\",\n        whiteText: whiteText\n      }, StringUtils.formatMax(title, 40)), React.createElement(BodyText, {\n        size: \"M\",\n        whiteText: whiteText\n      }, StringUtils.formatMax(body, 80)));\n      var children = [text, image];\n\n      if (mobile) {\n        children = [image, text];\n      }\n\n      var childrenWithLink;\n\n      if (href) {\n        var linkProps = {\n          href: href,\n          internalLinkComponent: internalLinkComponent,\n          title: linkTitle,\n          external: linkExternal\n        };\n        childrenWithLink = React.createElement(BaseLink, _extends_1({\n          className: \"TileLink\"\n        }, linkProps), children);\n      }\n\n      return React.createElement(Col, {\n        className: composeClassName([\"MarketingTileC\", className]),\n        xl: {\n          span: 4\n        },\n        lg: {\n          span: 4\n        },\n        md: {\n          span: 4\n        },\n        sm: {\n          span: 4\n        },\n        xs: {\n          span: 12\n        },\n        tabIndex: tabIndex\n      }, childrenWithLink || children);\n    }\n  }]);\n  return MarketingTileC;\n}(PureComponent);\n\ndefineProperty(MarketingTileC, \"propTypes\", {\n  imageSource: PropTypes.string.isRequired,\n  imageAltText: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string,\n  body: PropTypes.string,\n  className: PropTypes.string,\n  href: PropTypes.string,\n  imageLongDesc: PropTypes.string,\n  imageMobileSource: PropTypes.string,\n  internalLinkComponent: PropTypes.any,\n  linkExternal: PropTypes.bool,\n  linkTitle: PropTypes.string,\n  mobile: PropTypes.bool,\n  subTitle: PropTypes.string,\n  tabIndex: PropTypes.string,\n  whiteText: PropTypes.bool\n});\ndefineProperty(MarketingTileC, \"defaultProps\", {\n  backgroundColor: \"#0d7f50\",\n  linkExternal: false,\n  mobile: false,\n  whiteText: false\n});\nvar css$F = \".NavigationColumn {\\n  width: 160px;\\n  flex-grow: 1; }\\n  .NavigationColumn .NavigationColumnTitle {\\n    margin-bottom: 10px; }\\n  .NavigationColumn ul {\\n    list-style-type: none;\\n    margin: 0;\\n    padding: 0; }\\n  .NavigationColumn .NavigationColumnItem {\\n    margin-top: 10px;\\n    margin-bottom: 5px; }\\n\";\nstyleInject(css$F);\n\nvar NavigationColumn =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(NavigationColumn, _PureComponent);\n\n  function NavigationColumn() {\n    classCallCheck(this, NavigationColumn);\n    return possibleConstructorReturn(this, getPrototypeOf(NavigationColumn).apply(this, arguments));\n  }\n\n  createClass(NavigationColumn, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          title = _this$props.title,\n          children = _this$props.children;\n      var composedClassName = composeClassName([\"NavigationColumn\", className]);\n      var linkList = children.map(function (node) {\n        var linkNode = objectSpread({}, node);\n        linkNode.props = objectSpread({}, node.props, {\n          tabIndex: \"0\"\n        }); // This uses the link text as the unique key for the list.\n\n        return React.createElement(\"li\", {\n          className: \"NavigationColumnItem\",\n          key: node.props.children\n        }, linkNode);\n      });\n      return React.createElement(\"div\", {\n        className: composedClassName\n      }, React.createElement(DisplayText, {\n        className: \"NavigationColumnTitle\",\n        size: \"M\"\n      }, title), React.createElement(\"ul\", null, linkList));\n    }\n  }]);\n  return NavigationColumn;\n}(PureComponent);\n\ndefineProperty(NavigationColumn, \"propTypes\", {\n  className: PropTypes.string,\n\n  /** The title at the top of the column */\n  title: PropTypes.string.isRequired,\n\n  /** Only text BaseLinks should be passed into this component */\n  children: PropTypes.array.isRequired\n});\nvar css$G = \".NavigationItemMobile {\\n  list-style: none;\\n  margin-left: 0;\\n  padding-left: 0; }\\n  .NavigationItemMobile .BaseLink {\\n    display: flex;\\n    width: 100%;\\n    padding-top: 25px;\\n    padding-bottom: 22px;\\n    border-bottom: 1px solid #dbdcdf; }\\n    .NavigationItemMobile .BaseLink .Icon {\\n      margin-left: auto;\\n      margin-right: 0;\\n      margin-top: 3px; }\\n\";\nstyleInject(css$G);\n\nvar NavigationItemMobile =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(NavigationItemMobile, _PureComponent);\n\n  function NavigationItemMobile() {\n    classCallCheck(this, NavigationItemMobile);\n    return possibleConstructorReturn(this, getPrototypeOf(NavigationItemMobile).apply(this, arguments));\n  }\n\n  createClass(NavigationItemMobile, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          itemKey = _this$props.itemKey,\n          external = _this$props.external,\n          href = _this$props.href,\n          onClickHandler = _this$props.onClickHandler,\n          children = _this$props.children;\n      var composedClassName = composeClassName([\"NavigationItemMobile\", className]);\n      var linkProps = {\n        blank: true\n      };\n\n      if (external && href) {\n        linkProps = {\n          external: true,\n          href: href\n        };\n      }\n\n      return React.createElement(\"li\", {\n        className: composedClassName,\n        key: itemKey\n      }, React.createElement(BaseLink, _extends_1({}, linkProps, {\n        onClickHandler: onClickHandler\n      }), React.createElement(\"div\", null, children), React.createElement(Icon, {\n        icon: \"chevronRight\",\n        size: \"S\",\n        className: \"NavigationItemCaret\",\n        defaultColor: \"DefaultGrey\"\n      })));\n    }\n  }]);\n  return NavigationItemMobile;\n}(PureComponent);\n\ndefineProperty(NavigationItemMobile, \"propTypes\", {\n  className: PropTypes.string,\n  itemKey: PropTypes.string.isRequired,\n  external: PropTypes.bool,\n  href: PropTypes.string,\n  onClickHandler: PropTypes.func,\n  children: PropTypes.any.isRequired\n});\nvar css$H = \".Stories {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%; }\\n  .Stories .StoriesImage {\\n    display: none; }\\n    @media screen and (min-width: 768px) {\\n      .Stories .StoriesImage {\\n        display: block;\\n        height: 80px;\\n        margin-bottom: 6px; } }\\n    @media screen and (min-width: 1024px) {\\n      .Stories .StoriesImage {\\n        height: 104px; } }\\n    @media screen and (min-width: 1440px) {\\n      .Stories .StoriesImage {\\n        height: 144px; } }\\n    .Stories .StoriesImage.Video {\\n      position: relative;\\n      display: flex;\\n      flex-direction: column;\\n      align-items: center; }\\n      @media screen and (max-width: 767px) {\\n        .Stories .StoriesImage.Video {\\n          height: 180px;\\n          margin-bottom: 6px; } }\\n    .Stories .StoriesImage.PlayButton {\\n      display: block;\\n      position: relative;\\n      top: calc(50% - 50px); }\\n  .Stories .StoriesTextWrapper {\\n    height: 72px;\\n    margin-bottom: 24px; }\\n    @media screen and (min-width: 768px) {\\n      .Stories .StoriesTextWrapper {\\n        height: 108px;\\n        margin-bottom: 36px; } }\\n    @media screen and (min-width: 1024px) {\\n      .Stories .StoriesTextWrapper {\\n        height: 104px;\\n        margin-bottom: 32px; } }\\n    @media screen and (min-width: 1440px) {\\n      .Stories .StoriesTextWrapper {\\n        height: 80px;\\n        margin-bottom: 48px; } }\\n    .Stories .StoriesTextWrapper span {\\n      margin-bottom: 8px;\\n      height: 16px;\\n      text-overflow: ellipsis;\\n      word-break: break-word;\\n      overflow: hidden;\\n      white-space: nowrap; }\\n      @media screen and (min-width: 768px) {\\n        .Stories .StoriesTextWrapper span {\\n          margin-bottom: 4px;\\n          height: 32px; } }\\n      @media screen and (min-width: 1024px) {\\n        .Stories .StoriesTextWrapper span {\\n          margin-bottom: 8px;\\n          height: 24px; } }\\n    .Stories .StoriesTextWrapper h6 {\\n      height: 48px;\\n      overflow: hidden; }\\n      @media screen and (min-width: 768px) {\\n        .Stories .StoriesTextWrapper h6 {\\n          height: 72px; } }\\n      @media screen and (min-width: 1440px) {\\n        .Stories .StoriesTextWrapper h6 {\\n          height: 48px; } }\\n\";\nstyleInject(css$H);\n\nvar Stories =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(Stories, _PureComponent);\n\n  function Stories() {\n    classCallCheck(this, Stories);\n    return possibleConstructorReturn(this, getPrototypeOf(Stories).apply(this, arguments));\n  }\n\n  createClass(Stories, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          Image$$1 = _this$props.Image,\n          AltText = _this$props.AltText,\n          Longdesc = _this$props.Longdesc,\n          VideoSource = _this$props.VideoSource,\n          VideoId = _this$props.VideoId,\n          VideoTitle = _this$props.VideoTitle,\n          VideoButtonTheme = _this$props.VideoButtonTheme,\n          Tag = _this$props.Tag,\n          ArticleTitle = _this$props.ArticleTitle,\n          WhiteText = _this$props.WhiteText;\n      var ModalProps = {\n        source: VideoSource,\n        videoId: VideoId,\n        title: VideoTitle,\n        theme: VideoButtonTheme\n      };\n      var storiesTextComponent = React.createElement(\"div\", {\n        className: \"StoriesTextWrapper\"\n      }, React.createElement(DisplayText, {\n        whiteText: WhiteText,\n        size: \"S\"\n      }, StringUtils.formatMax(Tag, 30)), React.createElement(DisplayText, {\n        whiteText: WhiteText,\n        size: \"L\"\n      }, ArticleTitle));\n      var classNameList = [className, \"Stories\"];\n      var storiesTileContent = React.createElement(\"div\", null, React.createElement(Image, {\n        className: \"StoriesImage\",\n        source: Image$$1,\n        altText: AltText,\n        longdesc: Longdesc\n      }), storiesTextComponent);\n\n      if (VideoId && VideoTitle) {\n        classNameList.push(\"WithVideo\");\n        storiesTileContent = React.createElement(\"div\", null, React.createElement(ImageBackground, {\n          className: \"StoriesImage Video\",\n          source: Image$$1\n        }, React.createElement(ModalVideo, _extends_1({\n          className: \"StoriesImage PlayButton\",\n          noDisplayText: true\n        }, ModalProps))), storiesTextComponent);\n      }\n\n      var composedClassName = composeClassName(classNameList);\n      return React.createElement(\"div\", {\n        className: composedClassName\n      }, storiesTileContent);\n    }\n  }]);\n  return Stories;\n}(PureComponent);\n\ndefineProperty(Stories, \"propTypes\", {\n  className: PropTypes.string,\n  Image: PropTypes.string.isRequired,\n  AltText: PropTypes.string.isRequired,\n  Longdesc: PropTypes.string,\n  VideoSource: PropTypes.string,\n  VideoId: PropTypes.string,\n  VideoTitle: PropTypes.string,\n  VideoButtonTheme: PropTypes.string,\n  Tag: PropTypes.string.isRequired,\n  ArticleTitle: PropTypes.string.isRequired,\n  WhiteText: PropTypes.bool\n});\nvar css$I = \".TabSectionLink {\\n  padding-top: 8px;\\n  padding-bottom: 16px;\\n  display: flex;\\n  align-items: center;\\n  width: 90px;\\n  justify-content: center; }\\n  @media screen and (min-width: 1024px) {\\n    .TabSectionLink {\\n      padding-top: 16px; } }\\n  @media screen and (min-width: 576px) {\\n    .TabSectionLink {\\n      width: 106px; } }\\n  @media screen and (min-width: 1024px) {\\n    .TabSectionLink {\\n      width: 122px; } }\\n  @media screen and (min-width: 1440px) {\\n    .TabSectionLink {\\n      width: 136px; } }\\n  .TabSectionLink * {\\n    text-transform: uppercase; }\\n\\n.TabSectionLink.active {\\n  padding-bottom: 13px;\\n  border-bottom: 3px solid #00aeef; }\\n\";\nstyleInject(css$I);\n\nvar TabSectionLink =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(TabSectionLink, _PureComponent);\n\n  function TabSectionLink() {\n    classCallCheck(this, TabSectionLink);\n    return possibleConstructorReturn(this, getPrototypeOf(TabSectionLink).apply(this, arguments));\n  }\n\n  createClass(TabSectionLink, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          active = _this$props.active,\n          href = _this$props.href,\n          external = _this$props.external,\n          internalLinkComponent = _this$props.internalLinkComponent,\n          title = _this$props.title,\n          blank = _this$props.blank,\n          onClickHandler = _this$props.onClickHandler,\n          tabIndex = _this$props.tabIndex,\n          whiteText = _this$props.whiteText,\n          children = _this$props.children,\n          sectionId = _this$props.sectionId;\n      var linkProps = {\n        active: active,\n        href: href,\n        external: external,\n        internalLinkComponent: internalLinkComponent,\n        title: title,\n        blank: blank,\n        onClickHandler: onClickHandler,\n        tabIndex: tabIndex,\n        whiteText: whiteText\n      };\n      var composedClassName = composeClassName([\"TabSectionLink\", active ? \"active\" : \"\", className]);\n      return React.createElement(\"div\", {\n        className: composedClassName\n      }, React.createElement(BaseLink, _extends_1({\n        className: \"Link\",\n        a11yProps: {\n          id: \"tab-\".concat(sectionId),\n          role: \"tab\",\n          \"aria-controls\": sectionId,\n          \"aria-selected\": active\n        }\n      }, linkProps), children));\n    }\n  }]);\n  return TabSectionLink;\n}(PureComponent);\n\ndefineProperty(TabSectionLink, \"propTypes\", {\n  className: PropTypes.string,\n  active: PropTypes.bool,\n  href: PropTypes.string,\n  external: PropTypes.bool,\n  internalLinkComponent: PropTypes.any,\n  title: PropTypes.string,\n  blank: PropTypes.bool,\n  onClickHandler: PropTypes.func,\n  tabIndex: PropTypes.string,\n  whiteText: PropTypes.bool,\n  sectionId: PropTypes.string\n});\ndefineProperty(TabSectionLink, \"defaultProps\", {\n  active: false\n});\nvar css$J = \".VideoDisplay {\\n  height: 100%; }\\n  .VideoDisplay .VideoDisplayBackground {\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    justify-content: space-between; }\\n    .VideoDisplay .VideoDisplayBackground .PlayButton {\\n      margin-left: auto;\\n      margin-right: auto; }\\n  .VideoDisplay.Columns12 .VideoDisplayBackground {\\n    height: 200px; }\\n    @media screen and (min-width: 768px) {\\n      .VideoDisplay.Columns12 .VideoDisplayBackground {\\n        height: 368px; } }\\n    @media screen and (min-width: 1024px) {\\n      .VideoDisplay.Columns12 .VideoDisplayBackground {\\n        height: 464px; } }\\n    @media screen and (min-width: 1440px) {\\n      .VideoDisplay.Columns12 .VideoDisplayBackground {\\n        height: 632px; } }\\n  .VideoDisplay.Columns6 .VideoDisplayBackground {\\n    height: 200px; }\\n    @media screen and (min-width: 768px) {\\n      .VideoDisplay.Columns6 .VideoDisplayBackground {\\n        height: 176px; } }\\n    @media screen and (min-width: 1024px) {\\n      .VideoDisplay.Columns6 .VideoDisplayBackground {\\n        height: 224px; } }\\n    @media screen and (min-width: 1440px) {\\n      .VideoDisplay.Columns6 .VideoDisplayBackground {\\n        height: 304px; } }\\n  .VideoDisplay .DisplayText {\\n    margin-top: 8px;\\n    margin-bottom: 8px;\\n    color: #516173; }\\n\";\nstyleInject(css$J);\n\nvar VideoDisplay =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(VideoDisplay, _PureComponent);\n\n  function VideoDisplay() {\n    classCallCheck(this, VideoDisplay);\n    return possibleConstructorReturn(this, getPrototypeOf(VideoDisplay).apply(this, arguments));\n  }\n\n  createClass(VideoDisplay, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          allowFullScreen = _this$props.allowFullScreen,\n          videoSource = _this$props.videoSource,\n          videoTitle = _this$props.videoTitle,\n          videoId = _this$props.videoId,\n          videoButtonTheme = _this$props.videoButtonTheme,\n          imgSource = _this$props.imgSource,\n          imgMobileSource = _this$props.imgMobileSource,\n          heading = _this$props.heading,\n          tag = _this$props.tag,\n          size = _this$props.size;\n      var videoProps = {\n        allowFullScreen: allowFullScreen,\n        source: videoSource,\n        title: videoTitle,\n        videoId: videoId,\n        theme: videoButtonTheme\n      };\n      var imageBackgroundProps = {\n        source: imgSource,\n        mobileSource: imgMobileSource\n      };\n      var composedClassName = composeClassName([\"VideoDisplay\", size, className]);\n      return React.createElement(\"div\", {\n        className: composedClassName\n      }, React.createElement(ImageBackground, _extends_1({}, imageBackgroundProps, {\n        className: \"VideoDisplayBackground\"\n      }), React.createElement(ModalVideo, _extends_1({}, videoProps, {\n        noDisplayText: true,\n        className: \"PlayButton\"\n      }))), React.createElement(DisplayText, {\n        size: \"S\"\n      }, tag), React.createElement(Heading, {\n        size: \"S\"\n      }, heading));\n    }\n  }]);\n  return VideoDisplay;\n}(PureComponent);\n\ndefineProperty(VideoDisplay, \"propTypes\", {\n  allowFullScreen: PropTypes.bool,\n  className: PropTypes.string,\n\n  /** Video Player source */\n  videoSource: PropTypes.oneOf([\"vimeo\", \"youtube\"]),\n\n  /** Video Title, required for Accessibility */\n  videoTitle: PropTypes.string.isRequired,\n\n  /** Video Player URL Id, for each player source its different,\n   * can be found at sharing options of the video */\n  videoId: PropTypes.string.isRequired,\n  videoButtonTheme: PropTypes.oneOf([\"light\", \"dark\"]),\n  imgSource: PropTypes.string.isRequired,\n  imgMobileSource: PropTypes.string,\n  heading: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  size: PropTypes.oneOf([\"Columns6\", \"Columns12\"])\n});\ndefineProperty(VideoDisplay, \"defaultProps\", {\n  size: \"Columns12\",\n  videoButtonTheme: \"dark\"\n});\nvar index$2 =\n/*#__PURE__*/\nObject.freeze({\n  Accordion: Accordion,\n  AccordionItem: AccordionItem,\n  Banner: Banner,\n  BaseTile: BaseTile,\n  BulletList: BulletList,\n  BulletListItem: BulletListItem,\n  ButtonBackToTop: ButtonBackToTop,\n  ButtonCloseModal: ButtonCloseModal,\n  ButtonGhost: ButtonGhost,\n  ButtonIcon: ButtonIcon,\n  ButtonLink: ButtonLink,\n  ButtonVideo: ButtonVideo,\n  ContentAligned: ContentAligned,\n  ContentImage: ContentImage,\n  DownloadableResources: DownloadableResources,\n  ImageLink: ImageLink,\n  InputTextArea: InputTextArea,\n  LocaleSwitcherFirstTimeUser: LocaleSwitcherFirstTimeUser,\n  GenericContent: GenericContent,\n  MarkdownParser: MarkdownParser,\n  KeyValuePair: KeyValuePair,\n  LocaleSwitcher: LocaleSwitcher,\n  MarketingTileA: MarketingTileA,\n  MarketingTileB: MarketingTileB,\n  MarketingTileC: MarketingTileC,\n  ModalVideo: ModalVideo,\n  NavigationColumn: NavigationColumn,\n  NavigationItemMobile: NavigationItemMobile,\n  Stories: Stories,\n  TabSectionLink: TabSectionLink,\n  TextWithBackground: TextWithBackground,\n  VideoDisplay: VideoDisplay\n});\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nvar arrayWithoutHoles = _arrayWithoutHoles;\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nvar iterableToArray = _iterableToArray;\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar nonIterableSpread = _nonIterableSpread;\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nvar toConsumableArray = _toConsumableArray;\nvar css$K = \".Footer {\\n  width: 100%;\\n  background-color: #f1f4f8;\\n  padding-top: 25px;\\n  padding-bottom: 30px; }\\n  .Footer .FooterContent {\\n    margin-left: 8px;\\n    margin-right: 8px; }\\n    @media screen and (min-width: 768px) {\\n      .Footer .FooterContent {\\n        padding-top: 30px;\\n        width: 732px;\\n        margin-left: auto;\\n        margin-right: auto; } }\\n    @media screen and (min-width: 1024px) {\\n      .Footer .FooterContent {\\n        width: 924px; } }\\n    @media screen and (min-width: 1440px) {\\n      .Footer .FooterContent {\\n        width: 1140px; } }\\n  .Footer .Logo {\\n    width: 32px;\\n    height: 32px;\\n    margin-bottom: 5px;\\n    margin-left: auto;\\n    margin-right: auto; }\\n    @media screen and (min-width: 768px) {\\n      .Footer .Logo {\\n        margin-bottom: 30px;\\n        margin-left: 0px;\\n        margin-right: auto; } }\\n  @media screen and (min-width: 768px) {\\n    .Footer .FooterColumns {\\n      display: flex; }\\n      .Footer .FooterColumns > * {\\n        flex-grow: 1; } }\\n  .Footer .NavigationColumn {\\n    width: 100%;\\n    padding-top: 20px;\\n    padding-bottom: 20px;\\n    border-bottom: 1px solid #dbdcdf; }\\n    .Footer .NavigationColumn .DisplayText.M {\\n      color: #516173; }\\n      @media screen and (min-width: 768px) {\\n        .Footer .NavigationColumn .DisplayText.M {\\n          color: #19294f; } }\\n    @media screen and (min-width: 768px) {\\n      .Footer .NavigationColumn {\\n        width: 160px;\\n        padding: 0;\\n        border: none; } }\\n  .Footer .FooterDividerSection {\\n    margin-top: 70px;\\n    padding-bottom: 9px;\\n    border-bottom: 1px solid #dbdcdf; }\\n    @media screen and (min-width: 768px) {\\n      .Footer .FooterDividerSection {\\n        display: flex; } }\\n    .Footer .FooterDividerSection .FooterSocialButtons {\\n      display: flex;\\n      margin: 0 -10px 30px -10px;\\n      justify-content: center; }\\n      .Footer .FooterDividerSection .FooterSocialButtons > * {\\n        padding: 0 10px; }\\n      @media screen and (min-width: 768px) {\\n        .Footer .FooterDividerSection .FooterSocialButtons {\\n          justify-content: flex-start;\\n          margin-bottom: 0px; } }\\n    .Footer .FooterDividerSection .NoticeToChildren {\\n      display: block;\\n      margin: 0 auto;\\n      text-align: center; }\\n      @media screen and (min-width: 768px) {\\n        .Footer .FooterDividerSection .NoticeToChildren {\\n          margin-bottom: 0px;\\n          margin-top: auto;\\n          margin-right: 0px;\\n          margin-left: auto;\\n          text-align: left; } }\\n  .Footer .Copyright {\\n    padding-top: 11px;\\n    padding-bottom: 56px;\\n    text-align: center; }\\n    @media screen and (min-width: 768px) {\\n      .Footer .Copyright {\\n        text-align: left; } }\\n  .Footer .FooterBottomLinks {\\n    text-align: center; }\\n    @media screen and (min-width: 768px) {\\n      .Footer .FooterBottomLinks {\\n        text-align: left; } }\\n  .Footer .BaseLinkSeparator {\\n    font-size: 14px;\\n    line-height: 20px;\\n    color: #19294f; }\\n\";\nstyleInject(css$K);\nvar weLogoSource = \"https://static.we.org/logos/WE_RGB_blue_June2016.png\";\n\nvar Footer =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(Footer, _PureComponent);\n\n  function Footer() {\n    classCallCheck(this, Footer);\n    return possibleConstructorReturn(this, getPrototypeOf(Footer).apply(this, arguments));\n  }\n\n  createClass(Footer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          columns = _this$props.columns,\n          socialButtons = _this$props.socialButtons,\n          noticeToChildrenHref = _this$props.noticeToChildrenHref,\n          noticeToChildrenExternal = _this$props.noticeToChildrenExternal,\n          copyrightInfo = _this$props.copyrightInfo,\n          bottomLinks = _this$props.bottomLinks,\n          internalLinkComponent = _this$props.internalLinkComponent;\n      var composedClassName = composeClassName([\"Footer\", className]);\n      var logo = React.createElement(\"div\", {\n        className: \"Logo\"\n      }, React.createElement(Image, {\n        source: weLogoSource,\n        altText: \"\"\n      }));\n      var bottomLinkObjects = bottomLinks.reduce(function (objects, link) {\n        return [].concat(toConsumableArray(objects), [link, React.createElement(\"span\", {\n          className: \"BaseLinkSeparator\",\n          key: \"\".concat(link.key, \"-after\")\n        }, \" | \")]);\n      }, []);\n      bottomLinkObjects.pop();\n      return React.createElement(\"footer\", {\n        className: composedClassName\n      }, React.createElement(\"div\", {\n        className: \"FooterContent\"\n      }, logo, React.createElement(\"div\", {\n        className: \"FooterColumns\"\n      }, columns), React.createElement(\"div\", {\n        className: \"FooterDividerSection\"\n      }, React.createElement(\"div\", {\n        className: \"FooterSocialButtons\"\n      }, socialButtons), React.createElement(BaseLink, {\n        className: \"NoticeToChildren\",\n        internalLinkComponent: internalLinkComponent,\n        href: noticeToChildrenHref,\n        external: noticeToChildrenExternal\n      }, \"Notice to Children Under 13\")), React.createElement(\"div\", null, React.createElement(BodyText, {\n        size: \"M\",\n        className: \"Copyright\"\n      }, copyrightInfo), React.createElement(LocaleSwitcher, {\n        allowedLocales: config_1\n      })), React.createElement(\"div\", {\n        className: \"FooterBottomLinks\"\n      }, bottomLinkObjects)));\n    }\n  }]);\n  return Footer;\n}(PureComponent);\n\ndefineProperty(Footer, \"propTypes\", {\n  className: PropTypes.string,\n  columns: PropTypes.array,\n  socialButtons: PropTypes.array,\n  noticeToChildrenHref: PropTypes.string,\n  noticeToChildrenExternal: PropTypes.bool,\n  copyrightInfo: PropTypes.string,\n  bottomLinks: PropTypes.array,\n  internalLinkComponent: PropTypes.any.isRequired\n});\ndefineProperty(Footer, \"defaultProps\", {\n  className: \"\",\n  columns: [],\n  socialButtons: [],\n  noticeToChildrenHref: \"\",\n  noticeToChildrenExternal: false,\n  copyrightInfo: \"\",\n  bottomLinks: []\n});\nvar css$L = \".LeadGenerator {\\n  width: 100%; }\\n  .LeadGenerator .LeadImage {\\n    width: 100%;\\n    height: 200px; }\\n    @media screen and (min-width: 768px) {\\n      .LeadGenerator .LeadImage {\\n        height: 272px; } }\\n    @media screen and (min-width: 1024px) {\\n      .LeadGenerator .LeadImage {\\n        height: 307px; } }\\n    @media screen and (min-width: 1440px) {\\n      .LeadGenerator .LeadImage {\\n        height: 368px; } }\\n  .LeadGenerator .LeadTextSection {\\n    width: 100%;\\n    margin: 0 auto;\\n    padding-top: 16px;\\n    padding-bottom: 16px;\\n    padding-left: 16px;\\n    padding-right: 16px; }\\n    @media screen and (min-width: 768px) {\\n      .LeadGenerator .LeadTextSection {\\n        width: 544px;\\n        padding-top: 16px;\\n        padding-bottom: 16px;\\n        padding-left: 16px;\\n        padding-right: 16px; } }\\n    @media screen and (min-width: 1024px) {\\n      .LeadGenerator .LeadTextSection {\\n        width: 688px;\\n        padding-top: 24px;\\n        padding-bottom: 24px;\\n        padding-left: 24px;\\n        padding-right: 24px; } }\\n    @media screen and (min-width: 1440px) {\\n      .LeadGenerator .LeadTextSection {\\n        width: 928px;\\n        padding-top: 32px;\\n        padding-bottom: 32px;\\n        padding-left: 32px;\\n        padding-right: 32px; } }\\n  @media screen and (min-width: 768px) {\\n    .LeadGenerator.WithImage .LeadTextSection {\\n      position: relative;\\n      top: -112px; } }\\n  @media screen and (min-width: 768px) and (min-width: 1024px) {\\n    .LeadGenerator.WithImage .LeadTextSection {\\n      top: -128px; } }\\n  @media screen and (min-width: 768px) and (min-width: 1440px) {\\n    .LeadGenerator.WithImage .LeadTextSection {\\n      top: -136px; } }\\n  @media screen and (min-width: 768px) {\\n    .LeadGenerator.WithImage {\\n      margin-bottom: -112px; } }\\n  @media screen and (min-width: 1024px) {\\n    .LeadGenerator.WithImage {\\n      margin-bottom: -128px; } }\\n  @media screen and (min-width: 1440px) {\\n    .LeadGenerator.WithImage {\\n      margin-bottom: -136px; } }\\n  .LeadGenerator .LeadHeading {\\n    height: 96px; }\\n    @media screen and (min-width: 768px) {\\n      .LeadGenerator .LeadHeading {\\n        height: 64px; } }\\n    @media screen and (min-width: 1024px) {\\n      .LeadGenerator .LeadHeading {\\n        height: 64px; } }\\n  .LeadGenerator .LeadCTA {\\n    margin-left: auto;\\n    margin-right: auto;\\n    margin-top: 16px;\\n    margin-bottom: 16px; }\\n    @media screen and (min-width: 768px) {\\n      .LeadGenerator .LeadCTA {\\n        margin-top: 24px;\\n        margin-bottom: 24px; } }\\n    @media screen and (min-width: 1024px) {\\n      .LeadGenerator .LeadCTA {\\n        margin-top: 24px;\\n        margin-bottom: 24px; } }\\n    @media screen and (min-width: 1440px) {\\n      .LeadGenerator .LeadCTA {\\n        margin-top: 24px;\\n        margin-bottom: 24px; } }\\n    .LeadGenerator .LeadCTA .ButtonContainer {\\n      max-width: none; }\\n    .LeadGenerator .LeadCTA .Button {\\n      max-width: none;\\n      margin-left: auto;\\n      margin-right: auto;\\n      width: 328px; }\\n      @media screen and (min-width: 768px) {\\n        .LeadGenerator .LeadCTA .Button {\\n          width: auto; } }\\n  .LeadGenerator .LeadDisplayText {\\n    text-align: center;\\n    min-height: 16px; }\\n    @media screen and (min-width: 1024px) {\\n      .LeadGenerator .LeadDisplayText {\\n        min-height: 16px; } }\\n  .LeadGenerator .ContactLink {\\n    text-align: center; }\\n    @media screen and (min-width: 768px) {\\n      .LeadGenerator .ContactLink {\\n        height: 16px; } }\\n  @media screen and (min-width: 768px) and (min-width: 1024px) {\\n    .LeadGenerator .ContactLink {\\n      height: 24px; } }\\n\";\nstyleInject(css$L);\n\nvar LeadGenerator =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(LeadGenerator, _PureComponent);\n\n  function LeadGenerator() {\n    classCallCheck(this, LeadGenerator);\n    return possibleConstructorReturn(this, getPrototypeOf(LeadGenerator).apply(this, arguments));\n  }\n\n  createClass(LeadGenerator, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          imageSource = _this$props.imageSource,\n          imageLongDesc = _this$props.imageLongDesc,\n          mobileImageSource = _this$props.mobileImageSource,\n          imageAltText = _this$props.imageAltText,\n          title = _this$props.title,\n          buttonText = _this$props.buttonText,\n          buttonTheme = _this$props.buttonTheme,\n          buttonHref = _this$props.buttonHref,\n          buttonIsExternal = _this$props.buttonIsExternal,\n          displayText = _this$props.displayText,\n          contactLinkHref = _this$props.contactLinkHref,\n          contactLinkIsExternal = _this$props.contactLinkIsExternal,\n          contactLinkText = _this$props.contactLinkText,\n          contactLinkTitle = _this$props.contactLinkTitle,\n          color = _this$props.color,\n          whiteText = _this$props.whiteText,\n          internalLinkComponent = _this$props.internalLinkComponent;\n      var withImage = !!(imageSource && imageAltText);\n      var composedClassName = composeClassName([\"LeadGenerator\", withImage ? \"WithImage\" : \"\", className]);\n      var image = null;\n\n      if (withImage) {\n        image = React.createElement(Image, {\n          className: \"LeadImage\",\n          altText: imageAltText,\n          source: imageSource,\n          mobileSource: mobileImageSource,\n          longdesc: imageLongDesc\n        });\n      }\n\n      var contactLink;\n\n      if (contactLinkText) {\n        contactLink = React.createElement(BaseLink, {\n          className: \"ContactLink\",\n          href: contactLinkHref,\n          external: contactLinkIsExternal,\n          title: contactLinkTitle,\n          internalLinkComponent: internalLinkComponent\n        }, contactLinkText);\n      } else {\n        contactLink = React.createElement(DisplayText, {\n          size: \"S\",\n          className: \"ContactLink\"\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: composedClassName\n      }, image, React.createElement(TextWithBackground, {\n        className: \"LeadTextSection\",\n        color: color,\n        whiteText: whiteText\n      }, React.createElement(Heading, {\n        centered: true,\n        className: \"LeadHeading\",\n        size: \"S\"\n      }, title), React.createElement(ButtonLink, {\n        size: \"L\",\n        theme: buttonTheme,\n        href: buttonHref,\n        external: buttonIsExternal,\n        internalLinkComponent: internalLinkComponent,\n        className: \"LeadCTA CTAButton\"\n      }, buttonText), React.createElement(DisplayText, {\n        className: \"LeadDisplayText\",\n        size: \"S\"\n      }, displayText), contactLink));\n    }\n  }]);\n  return LeadGenerator;\n}(PureComponent);\n\ndefineProperty(LeadGenerator, \"propTypes\", {\n  className: PropTypes.string,\n  imageSource: PropTypes.string,\n  imageLongDesc: PropTypes.string,\n  mobileImageSource: PropTypes.string,\n  imageAltText: PropTypes.string,\n\n  /** The text title inside the text-with-background section */\n  title: PropTypes.string.isRequired,\n  buttonText: PropTypes.string.isRequired,\n  buttonTheme: PropTypes.string,\n  buttonHref: PropTypes.string.isRequired,\n  buttonIsExternal: PropTypes.bool,\n  displayText: PropTypes.string,\n  contactLinkHref: PropTypes.string,\n  contactLinkIsExternal: PropTypes.bool,\n  contactLinkText: PropTypes.string,\n  contactLinkTitle: PropTypes.string,\n\n  /** The background color */\n  color: PropTypes.string,\n  whiteText: PropTypes.bool,\n  internalLinkComponent: PropTypes.any.isRequired\n});\ndefineProperty(LeadGenerator, \"defaultProps\", {\n  className: \"\",\n  imageSource: null,\n  imageAltText: null,\n  buttonTheme: \"Primary\",\n  buttonIsExternal: false,\n  displayText: \"\",\n  contactLinkHref: \"\",\n  contactLinkIsExternal: false,\n  contactLinkText: \"\",\n  contactLinkTitle: null,\n  color: \"#ffffff\",\n  whiteText: false\n});\nvar css$M = \".NavigationBarWrapper.Desktop {\\n  width: 100%; }\\n  .NavigationBarWrapper.Desktop .SkipToContentLink {\\n    position: absolute;\\n    left: -10000px;\\n    top: auto;\\n    width: 1px;\\n    height: 1px;\\n    overflow: hidden; }\\n  .NavigationBarWrapper.Desktop .NavigationBar {\\n    width: 100%;\\n    z-index: 100;\\n    position: relative;\\n    background-color: #ffffff;\\n    display: flex;\\n    height: 60px;\\n    border: 1px solid #dbdcdf;\\n    box-sizing: border-box; }\\n    .NavigationBarWrapper.Desktop .NavigationBar .Logo {\\n      width: 50px;\\n      height: 50px;\\n      margin-left: 25px;\\n      margin-top: 5px;\\n      margin-bottom: 5px;\\n      margin-right: 15px; }\\n    .NavigationBarWrapper.Desktop .NavigationBar .NavigationCategory {\\n      display: flex; }\\n      .NavigationBarWrapper.Desktop .NavigationBar .NavigationCategory .CategoryLink {\\n        display: block;\\n        margin-left: 15px;\\n        margin-right: 15px;\\n        padding-top: 20px; }\\n      .NavigationBarWrapper.Desktop .NavigationBar .NavigationCategory .CategoryLink.open {\\n        border-bottom: 2px solid #00aeef; }\\n    .NavigationBarWrapper.Desktop .NavigationBar .NavigationExternal {\\n      margin-left: auto;\\n      margin-right: 11px;\\n      margin-top: 20px;\\n      text-transform: uppercase; }\\n      .NavigationBarWrapper.Desktop .NavigationBar .NavigationExternal .ExternalLink {\\n        margin-left: 15px;\\n        margin-right: 15px; }\\n  .NavigationBarWrapper.Desktop .NavigationMenu {\\n    width: 100%;\\n    transition: transform 1000ms ease-in-out;\\n    z-index: 99;\\n    position: absolute;\\n    background-color: #ffffff;\\n    border: 1px solid #dbdcdf;\\n    padding-top: 20px;\\n    display: flex; }\\n    .NavigationBarWrapper.Desktop .NavigationMenu .Content {\\n      flex: 0 0 25%;\\n      padding-left: 25px;\\n      padding-right: 25px;\\n      box-sizing: border-box;\\n      margin-bottom: 35px; }\\n      .NavigationBarWrapper.Desktop .NavigationMenu .Content .MenuHeading {\\n        padding-bottom: 10px; }\\n      .NavigationBarWrapper.Desktop .NavigationMenu .Content .MenuBodyText {\\n        padding-bottom: 15px; }\\n      .NavigationBarWrapper.Desktop .NavigationMenu .Content .MenuButtonContainer .BaseLink {\\n        display: inline-block; }\\n    .NavigationBarWrapper.Desktop .NavigationMenu .LinkFlexSection {\\n      flex: 0 1 75%; }\\n    .NavigationBarWrapper.Desktop .NavigationMenu .LinkColumns {\\n      box-sizing: border-box;\\n      border-left: 1px solid #dbdcdf;\\n      display: flex;\\n      padding-left: 25px;\\n      padding-right: 25px;\\n      margin-bottom: 35px; }\\n  .NavigationBarWrapper.Desktop .MenuSlide-enter {\\n    transform: translateY(-100%); }\\n  .NavigationBarWrapper.Desktop .MenuSlide-enter-active {\\n    transform: none; }\\n  .NavigationBarWrapper.Desktop .MenuSlide-exit {\\n    transform: none; }\\n  .NavigationBarWrapper.Desktop .MenuSlide-exit-active {\\n    transform: translateY(-100%); }\\n\";\nstyleInject(css$M);\nvar weLogoSource$1 = \"https://static.we.org/logos/WE_RGB_blue_June2016.png\";\nvar sectionPropTypes = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  subMenuTitle: PropTypes.string.isRequired,\n  subMenuBodyText: PropTypes.string,\n  buttonHidden: PropTypes.bool,\n  buttonText: PropTypes.string,\n  buttonHref: PropTypes.string,\n  buttonIsExternal: PropTypes.bool,\n\n  /** An array of the NavigationColumn molecule */\n  columns: PropTypes.array.isRequired\n});\n\nvar NavigationBarDesktop =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(NavigationBarDesktop, _PureComponent);\n\n  function NavigationBarDesktop(props) {\n    var _this;\n\n    classCallCheck(this, NavigationBarDesktop);\n    _this = possibleConstructorReturn(this, getPrototypeOf(NavigationBarDesktop).call(this, props));\n    defineProperty(assertThisInitialized(_this), \"_handleOnKeyDown\", function (event) {\n      // close on Escape\n      if (event.keyCode === 27) {\n        var menu = _this.state.menu;\n\n        if (menu !== null) {\n          _this._toggleMenu(menu);\n        }\n      }\n    });\n    defineProperty(assertThisInitialized(_this), \"_toggleMenu\", function (menu) {\n      var ref;\n\n      _this.setState(function (prevState) {\n        if (prevState.menu === menu) {\n          ref = _this.menuButtonRefs[menu];\n          return {\n            menu: null,\n            exiting: menu\n          };\n        }\n\n        ref = _this.menuRefs[menu];\n        return {\n          menu: menu\n        };\n      }, function () {\n        ref.current.focus();\n      });\n    });\n    defineProperty(assertThisInitialized(_this), \"_menuOpen\", function (menu) {\n      _this.setState({\n        entering: menu\n      });\n    });\n    defineProperty(assertThisInitialized(_this), \"_menuOpened\", function () {\n      _this.setState({\n        entering: null\n      });\n    });\n    defineProperty(assertThisInitialized(_this), \"_menuClose\", function (menu) {\n      _this.setState({\n        exiting: menu\n      });\n    });\n    defineProperty(assertThisInitialized(_this), \"_menuClosed\", function () {\n      _this.setState({\n        exiting: null\n      });\n    });\n    defineProperty(assertThisInitialized(_this), \"_isMenuPresent\", function () {\n      var _this$state = _this.state,\n          menu = _this$state.menu,\n          entering = _this$state.entering,\n          exiting = _this$state.exiting;\n      /** If the menu is currently opening, it will finish opening even if the user has\n       *  pressed the button to close it. */\n\n      if (entering) {\n        return true;\n      }\n      /** If the menu is currently closing or has been set to close, it will finish closing\n       *  even if the user has pressed the button to open it. */\n\n\n      if (exiting) {\n        return false;\n      }\n      /** Otherwise, return true if the current menu is non-null and false if it is null. */\n\n\n      return !!menu;\n    });\n    _this.state = {\n      /** The currently selected menu item. The current series of animations will end with this\n       *  menu showing. It has the value `null` when the menu is closed.\n       */\n      menu: null,\n\n      /** The menu item which is currently exiting, or is queued for exiting while the menu is\n       *  entering. If the menu is in a non-transition state, this has the value `null`.\n       */\n      exiting: null,\n\n      /** The menu item which is currently entering. If the menu is not entering, this has the\n       *  value `null`. If both entering and exiting have values, the menu is entering, but will\n       *  immediately exit when it finishes.\n       */\n      entering: null\n    };\n    var sectionsArray = _this.props.sectionsArray;\n    _this.menuRefs = {};\n    _this.menuButtonRefs = {};\n    sectionsArray.forEach(function (section) {\n      _this.menuRefs[camelize(section.title)] = React.createRef();\n      _this.menuButtonRefs[camelize(section.title)] = React.createRef();\n    });\n    return _this;\n  } // This is just to ensure that the menu ref is recreated when the title of the section is changed\n\n\n  createClass(NavigationBarDesktop, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      var sectionsArray = this.props.sectionsArray;\n      sectionsArray.forEach(function (section) {\n        _this2.menuRefs[camelize(section.title)] = React.createRef();\n        _this2.menuButtonRefs[camelize(section.title)] = React.createRef();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          sectionsArray = _this$props.sectionsArray,\n          internalLinkComponent = _this$props.internalLinkComponent,\n          externalLinkInfo = _this$props.externalLinkInfo;\n      var _this$state2 = this.state,\n          menu = _this$state2.menu,\n          exiting = _this$state2.exiting,\n          entering = _this$state2.entering;\n      var composedClassName = composeClassName([\"NavigationBarWrapper\", \"Desktop\", className]);\n      var logo = React.createElement(\"div\", {\n        className: \"Logo\"\n      }, React.createElement(Image, {\n        source: weLogoSource$1,\n        altText: \"\"\n      }));\n      var categoryLinkInfo = sectionsArray.map(function (section) {\n        return {\n          item: camelize(section.title),\n          label: section.title\n        };\n      });\n      var sections = {};\n      sectionsArray.forEach(function (section) {\n        sections[camelize(section.title)] = section;\n      });\n      var categoryLinks = categoryLinkInfo.map(function (linkInfo, index) {\n        var expanded = menu === linkInfo.item;\n        var key = \"category-\".concat(index, \"-\").concat(linkInfo.label);\n        return React.createElement(\"div\", {\n          key: key,\n          className: \"CategoryLink\".concat(expanded ? \" open\" : \"\")\n        }, React.createElement(BaseLink, {\n          blank: true,\n          a11yProps: {\n            \"aria-expanded\": expanded,\n            ref: _this3.menuButtonRefs[linkInfo.item]\n          },\n          onClickHandler: function onClickHandler() {\n            _this3._toggleMenu(linkInfo.item);\n          },\n          active: menu === linkInfo.item\n        }, linkInfo.label));\n      });\n      var externalLinks = externalLinkInfo.map(function (linkInfo, index) {\n        var key = \"external-\".concat(index, \"-\").concat(linkInfo.label);\n        return React.createElement(BaseLink, {\n          key: key,\n          className: \"ExternalLink\",\n          internalLinkComponent: internalLinkComponent,\n          title: linkInfo.title,\n          href: linkInfo.href,\n          external: linkInfo.external\n        }, linkInfo.label);\n      });\n      var mainBar = React.createElement(\"nav\", {\n        className: \"NavigationBar\"\n      }, logo, React.createElement(\"a\", {\n        className: \"SkipToContentLink\",\n        href: \"#endOfNavbar\"\n      }, \"Skip to Content\"), React.createElement(\"div\", {\n        className: \"NavigationCategory\"\n      }, categoryLinks), React.createElement(\"div\", {\n        className: \"NavigationExternal\"\n      }, externalLinks));\n      var currentMenu = exiting || menu || entering;\n      var section = sections[currentMenu] || {};\n      var menuButton = section.buttonHidden ? null : React.createElement(\"div\", {\n        className: \"MenuButtonContainer\"\n      }, React.createElement(BaseLink, {\n        tabIndex: \"-1\",\n        internalLinkComponent: internalLinkComponent,\n        href: section.buttonHref,\n        external: section.buttonIsExternal\n      }, React.createElement(Button, {\n        size: \"M\",\n        theme: \"Tertiary\",\n        className: \"MenuButton\"\n      }, section.buttonText)));\n      var dropdownMenu = React.createElement(CSSTransition, {\n        classNames: \"MenuSlide\",\n        timeout: 1000,\n        key: \"Menu\",\n        \"in\": this._isMenuPresent(),\n        mountOnEnter: true,\n        unmountOnExit: true,\n        onEnter: function onEnter() {\n          _this3._menuOpen(currentMenu);\n        },\n        onEntered: this._menuOpened,\n        onExit: function onExit() {\n          _this3._menuClose(currentMenu);\n        },\n        onExited: this._menuClosed\n      }, React.createElement(\"div\", {\n        role: \"menu\",\n        tabIndex: \"0\",\n        className: \"NavigationMenu\",\n        ref: this.menuRefs[menu],\n        onKeyDown: this._handleOnKeyDown\n      }, React.createElement(\"div\", {\n        className: \"Content\"\n      }, React.createElement(Heading, {\n        size: \"S\",\n        className: \"MenuHeading\"\n      }, section.subMenuTitle), React.createElement(BodyText, {\n        size: \"L\",\n        className: \"MenuBodyText\"\n      }, section.subMenuBodyText), menuButton), React.createElement(\"div\", {\n        className: \"LinkFlexSection\"\n      }, React.createElement(\"div\", {\n        className: \"LinkColumns\"\n      }, section.columns))));\n      return React.createElement(\"div\", {\n        className: composedClassName\n      }, mainBar, dropdownMenu, React.createElement(\"div\", {\n        id: \"endOfNavbar\"\n      }));\n    }\n  }]);\n  return NavigationBarDesktop;\n}(PureComponent);\n\ndefineProperty(NavigationBarDesktop, \"propTypes\", {\n  className: PropTypes.string,\n\n  /** Each section has the following props:\n   *  `title`, `bodyText`, `buttonHidden`, `buttonText`,\n   *  `buttonHref`, `buttonIsExternal`, `columns` */\n  sectionsArray: PropTypes.arrayOf(sectionPropTypes).isRequired,\n  internalLinkComponent: PropTypes.any.isRequired,\n  externalLinkInfo: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    href: PropTypes.string,\n    external: PropTypes.bool,\n    title: PropTypes.string\n  }))\n});\ndefineProperty(NavigationBarDesktop, \"defaultProps\", {\n  className: \"\",\n  externalLinkInfo: [],\n  sectionsArray: []\n});\nvar css$N = \".NavigationBarWrapper.Mobile {\\n  width: 100%; }\\n  .NavigationBarWrapper.Mobile .SkipToContentLink {\\n    position: absolute;\\n    left: -10000px;\\n    top: auto;\\n    width: 1px;\\n    height: 1px;\\n    overflow: hidden; }\\n  .NavigationBarWrapper.Mobile .NavigationBar {\\n    width: 100%;\\n    display: flex;\\n    z-index: 100;\\n    position: relative;\\n    background-color: #ffffff;\\n    height: 50px;\\n    border: 1px solid #dbdcdf;\\n    box-sizing: border-box; }\\n    .NavigationBarWrapper.Mobile .NavigationBar .Logo {\\n      width: 32px;\\n      height: 32px;\\n      margin-left: 10px;\\n      margin-top: 9px;\\n      margin-bottom: 9px;\\n      margin-right: auto; }\\n    .NavigationBarWrapper.Mobile .NavigationBar .NavigationHamburger {\\n      margin-left: auto;\\n      margin-top: 9px;\\n      margin-bottom: 9px;\\n      margin-right: 10px; }\\n  .NavigationBarWrapper.Mobile .NavigationMenu {\\n    transition: transform 600ms ease-in-out;\\n    z-index: 99;\\n    position: absolute;\\n    width: 100%;\\n    padding-top: 21px;\\n    padding-bottom: 21px;\\n    background-color: #ffffff;\\n    min-height: 510px; }\\n    .NavigationBarWrapper.Mobile .NavigationMenu .NavigationWrapper {\\n      padding-left: 10px;\\n      padding-right: 10px; }\\n    .NavigationBarWrapper.Mobile .NavigationMenu .NavigationItems {\\n      margin: 0;\\n      padding: 0; }\\n    .NavigationBarWrapper.Mobile .NavigationMenu .NavigationBackButton {\\n      display: flex; }\\n      .NavigationBarWrapper.Mobile .NavigationMenu .NavigationBackButton .SubMenuBack {\\n        text-transform: capitalize; }\\n      .NavigationBarWrapper.Mobile .NavigationMenu .NavigationBackButton .Icon {\\n        margin-top: 3px; }\\n    .NavigationBarWrapper.Mobile .NavigationMenu .SubMenuDescription {\\n      border-bottom: 1px solid #dbdcdf;\\n      padding-top: 15px;\\n      padding-bottom: 20px; }\\n      .NavigationBarWrapper.Mobile .NavigationMenu .SubMenuDescription .MenuHeading {\\n        padding-bottom: 20px;\\n        border-bottom: 1px solid #dbdcdf; }\\n      .NavigationBarWrapper.Mobile .NavigationMenu .SubMenuDescription .MenuTitle {\\n        padding-top: 20px;\\n        padding-bottom: 5px; }\\n      .NavigationBarWrapper.Mobile .NavigationMenu .SubMenuDescription .MenuBodyText {\\n        padding-bottom: 10px; }\\n      .NavigationBarWrapper.Mobile .NavigationMenu .SubMenuDescription .MenuDescriptionLink {\\n        display: inline-block; }\\n    .NavigationBarWrapper.Mobile .NavigationMenu .NavigationColumn {\\n      width: 100%;\\n      padding-top: 20px;\\n      padding-bottom: 20px;\\n      border-bottom: 1px solid #dbdcdf; }\\n      .NavigationBarWrapper.Mobile .NavigationMenu .NavigationColumn .DisplayText.M {\\n        color: #516173; }\\n  .NavigationBarWrapper.Mobile .MenuSlide-enter {\\n    transform: translateY(-100%); }\\n  .NavigationBarWrapper.Mobile .MenuSlide-enter-active {\\n    transform: none; }\\n  .NavigationBarWrapper.Mobile .MenuSlide-exit {\\n    transform: none; }\\n  .NavigationBarWrapper.Mobile .MenuSlide-exit-active {\\n    transform: translateY(-100%); }\\n  .NavigationBarWrapper.Mobile .SubMenuSlide-enter {\\n    transform: translateX(100%); }\\n  .NavigationBarWrapper.Mobile .SubMenuSlide-enter-active {\\n    transform: none; }\\n  .NavigationBarWrapper.Mobile .SubMenuSlide-exit {\\n    transform: none; }\\n  .NavigationBarWrapper.Mobile .SubMenuSlide-exit-active {\\n    transform: translateX(100%); }\\n\";\nstyleInject(css$N);\nvar weLogoSource$2 = \"https://static.we.org/logos/WE_RGB_blue_June2016.png\";\nvar sectionPropTypes$1 = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  subMenuTitle: PropTypes.string.isRequired,\n  subMenuBodyText: PropTypes.string,\n  buttonHidden: PropTypes.bool,\n  buttonText: PropTypes.string,\n  buttonHref: PropTypes.string,\n  buttonIsExternal: PropTypes.bool,\n\n  /** An array of the NavigationColumn molecule */\n  columns: PropTypes.array.isRequired\n});\n\nvar NavigationBarMobile =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(NavigationBarMobile, _PureComponent);\n\n  function NavigationBarMobile(props) {\n    var _this;\n\n    classCallCheck(this, NavigationBarMobile);\n    _this = possibleConstructorReturn(this, getPrototypeOf(NavigationBarMobile).call(this, props));\n    defineProperty(assertThisInitialized(_this), \"_toggleMenu\", function () {\n      _this.setState(function (prevState) {\n        if (prevState.subMenuOpen === true) {\n          return {\n            menuOpen: false,\n            subMenuOpen: false\n          };\n        }\n\n        if (prevState.menuOpen === false) {\n          return {\n            menuOpen: true,\n            subMenuOpen: false\n          };\n        }\n\n        return {\n          menuOpen: false,\n          subMenuOpen: false\n        };\n      });\n    });\n    defineProperty(assertThisInitialized(_this), \"_toggleSubMenu\", function (subMenuItem) {\n      _this.setState(function (prevState) {\n        if (prevState.subMenuOpen === false) {\n          return {\n            menu: subMenuItem,\n            subMenuOpen: true\n          };\n        }\n\n        return {\n          menu: subMenuItem,\n          subMenuOpen: false\n        };\n      });\n    });\n    defineProperty(assertThisInitialized(_this), \"_backToMainMenu\", function () {\n      _this.setState(function () {\n        return {\n          menuOpen: true,\n          subMenuOpen: false\n        };\n      });\n    });\n    _this.state = {\n      menu: null,\n      menuOpen: false,\n      subMenuOpen: false\n    };\n    return _this;\n  }\n\n  createClass(NavigationBarMobile, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          sectionsArray = _this$props.sectionsArray,\n          internalLinkComponent = _this$props.internalLinkComponent,\n          externalLinkInfo = _this$props.externalLinkInfo;\n      var _this$state = this.state,\n          menuOpen = _this$state.menuOpen,\n          subMenuOpen = _this$state.subMenuOpen,\n          menu = _this$state.menu;\n      var composedClassName = composeClassName([\"NavigationBarWrapper\", \"Mobile\", className]);\n      var logo = React.createElement(\"div\", {\n        className: \"Logo\"\n      }, React.createElement(Image, {\n        source: weLogoSource$2,\n        altText: \"WE Logo\"\n      }));\n      var mainBar = React.createElement(\"nav\", {\n        className: \"NavigationBar\"\n      }, logo, React.createElement(BaseLink, {\n        blank: true,\n        className: \"Hamburger\",\n        onClickHandler: function onClickHandler() {\n          _this2._toggleMenu();\n        }\n      }, React.createElement(Icon, {\n        icon: \"hamburger\",\n        size: \"M\",\n        className: \"NavigationHamburger\",\n        defaultColor: \"DefaultGrey\",\n        title: \"Toggle Main menu\",\n        role: \"img\"\n      }))); // TODO: Translations\n\n      var categoryLinkInfo = sectionsArray.map(function (section) {\n        return {\n          item: camelize(section.title),\n          label: section.title\n        };\n      });\n      var categoryLinks = categoryLinkInfo.map(function (linkInfo, key) {\n        var itemKey = \"categoryKey-\".concat(key);\n        return React.createElement(NavigationItemMobile, {\n          key: itemKey,\n          itemKey: itemKey,\n          onClickHandler: function onClickHandler() {\n            _this2._toggleSubMenu(linkInfo.item);\n          }\n        }, linkInfo.label);\n      });\n      var externalLinks = externalLinkInfo.map(function (linkInfo, key) {\n        var itemKey = \"externalLinkKey-\".concat(key);\n        return React.createElement(NavigationItemMobile, {\n          key: itemKey,\n          itemKey: itemKey,\n          title: linkInfo.title,\n          internalLinkComponent: internalLinkComponent,\n          href: linkInfo.href,\n          external: linkInfo.external\n        }, linkInfo.label);\n      });\n      var sections = {};\n      sectionsArray.forEach(function (section) {\n        sections[camelize(section.title)] = section;\n      });\n      var currentSubmenuMenu = subMenuOpen;\n      var section = sections[menu] || {}; // TODO: String translation for \"Menu\"\n\n      var mainMenu = React.createElement(CSSTransition, {\n        classNames: \"MenuSlide\",\n        timeout: 600,\n        key: \"Menu\",\n        unmountOnExit: true,\n        \"in\": menuOpen\n      }, React.createElement(\"div\", {\n        className: \"NavigationMenu\"\n      }, React.createElement(\"div\", {\n        className: \"NavigationWrapper\"\n      }, React.createElement(\"a\", {\n        className: \"SkipToContentLink\",\n        href: \"#endOfNavbar\"\n      }, \"Skip to Content\"), React.createElement(Heading, {\n        size: \"M\",\n        className: \"MenuHeading\"\n      }, \"Menu\"), React.createElement(\"ul\", {\n        className: \"NavigationItems\"\n      }, categoryLinks, externalLinks))));\n      var currentCategory = categoryLinkInfo.find(function (link) {\n        return link.item === menu;\n      }); // prettier-ignore\n\n      var subMenuName = undefined !== currentCategory ? currentCategory.label : null;\n      var menuButton = section.buttonHidden ? null : React.createElement(BaseLink, {\n        tabIndex: \"-1\",\n        className: \"MenuDescriptionLink\",\n        internalLinkComponent: internalLinkComponent,\n        href: section.buttonHref,\n        external: section.buttonIsExternal\n      }, section.buttonText); // TODO: String translations for \"Back\"\n\n      var subMenu = React.createElement(CSSTransition, {\n        classNames: \"SubMenuSlide\",\n        timeout: 600,\n        key: \"SubMenu\",\n        unmountOnExit: true,\n        \"in\": currentSubmenuMenu\n      }, React.createElement(\"div\", {\n        className: \"NavigationMenu\"\n      }, React.createElement(\"div\", {\n        className: \"NavigationWrapper\"\n      }, React.createElement(BaseLink, {\n        blank: true,\n        className: \"NavigationBackButton\",\n        onClickHandler: function onClickHandler() {\n          _this2._backToMainMenu();\n        }\n      }, React.createElement(Icon, {\n        icon: \"chevronLeft\",\n        size: \"S\",\n        className: \"NavigationItemCaret\",\n        defaultColor: \"DefaultGrey\"\n      }), React.createElement(DisplayText, {\n        size: \"M\",\n        className: \"SubMenuBack\"\n      }, \"Back\")), React.createElement(\"div\", {\n        className: \"SubMenuDescription\"\n      }, React.createElement(Heading, {\n        size: \"M\",\n        className: \"MenuHeading\"\n      }, subMenuName), React.createElement(Heading, {\n        size: \"S\",\n        className: \"MenuTitle\"\n      }, section.title), React.createElement(BodyText, {\n        size: \"L\",\n        className: \"MenuBodyText\"\n      }, section.bodyText), menuButton), section.columns)));\n      return React.createElement(\"div\", {\n        className: composedClassName\n      }, mainBar, mainMenu, subMenu, React.createElement(\"div\", {\n        id: \"endOfNavbar\"\n      }));\n    }\n  }]);\n  return NavigationBarMobile;\n}(PureComponent);\n\ndefineProperty(NavigationBarMobile, \"propTypes\", {\n  className: PropTypes.string,\n\n  /** Each section has the following props:\n   *  `title`, `bodyText`, `buttonHidden`, `buttonText`,\n   *  `buttonHref`, `buttonIsExternal`, `columns` */\n  sectionsArray: PropTypes.arrayOf(sectionPropTypes$1).isRequired,\n  internalLinkComponent: PropTypes.any.isRequired,\n  externalLinkInfo: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    href: PropTypes.string,\n    external: PropTypes.bool,\n    title: PropTypes.string\n  }))\n});\ndefineProperty(NavigationBarMobile, \"defaultProps\", {\n  className: \"\",\n  externalLinkInfo: [],\n  sectionsArray: []\n});\nvar css$O = \".DesktopOnly {\\n  display: none; }\\n  @media screen and (min-width: 1024px) {\\n    .DesktopOnly {\\n      display: block; } }\\n\\n.MobileOnly {\\n  display: block; }\\n  @media screen and (min-width: 1024px) {\\n    .MobileOnly {\\n      display: none; } }\\n\";\nstyleInject(css$O);\n\nvar NavigationBar =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(NavigationBar, _PureComponent);\n\n  function NavigationBar() {\n    classCallCheck(this, NavigationBar);\n    return possibleConstructorReturn(this, getPrototypeOf(NavigationBar).apply(this, arguments));\n  }\n\n  createClass(NavigationBar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(NavigationBarDesktop, _extends_1({\n        className: \"DesktopOnly\"\n      }, this.props)), React.createElement(NavigationBarMobile, _extends_1({\n        className: \"MobileOnly\"\n      }, this.props)));\n    }\n  }]);\n  return NavigationBar;\n}(PureComponent);\n\nvar css$P = \".NavigationSub {\\n  width: 100%; }\\n  .NavigationSub .NavigationSubItem {\\n    width: 100%;\\n    overflow: hidden; }\\n    .NavigationSub .NavigationSubItem .NavigationSubItemLink {\\n      display: flex;\\n      align-items: center;\\n      overflow: hidden; }\\n      .NavigationSub .NavigationSubItem .NavigationSubItemLink > span {\\n        overflow: hidden;\\n        text-overflow: ellipsis; }\\n  .NavigationSub .NavigationSubDesktop {\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: center;\\n    align-items: center; }\\n    .NavigationSub .NavigationSubDesktop .NavigationSubItem {\\n      display: flex;\\n      align-items: center;\\n      padding-left: 16px;\\n      padding-right: 16px;\\n      height: 52px;\\n      justify-content: center;\\n      max-width: 320px; }\\n    .NavigationSub .NavigationSubDesktop .Current {\\n      border-bottom: 3px solid #00aeef; }\\n  .NavigationSub .NavigationSubMobile .Current {\\n    border-left: 3px solid #00aeef; }\\n  .NavigationSub .NavigationSubMobile .NavigationSubItem {\\n    padding-left: 5px;\\n    padding-right: 7px;\\n    display: flex;\\n    align-items: center; }\\n    .NavigationSub .NavigationSubMobile .NavigationSubItem .NavigationSubItemLink {\\n      width: 100%;\\n      height: 60px;\\n      border-bottom: 1px solid #dbdcdf; }\\n\";\nstyleInject(css$P);\n\nvar NavigationSub =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(NavigationSub, _PureComponent);\n\n  function NavigationSub() {\n    classCallCheck(this, NavigationSub);\n    return possibleConstructorReturn(this, getPrototypeOf(NavigationSub).apply(this, arguments));\n  }\n\n  createClass(NavigationSub, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          items = _this$props.items,\n          internalLinkComponent = _this$props.internalLinkComponent,\n          isMobile = _this$props.isMobile,\n          currentHref = _this$props.currentHref;\n      var navigationSubItems = [];\n      navigationSubItems.push(items.map(function (item) {\n        var external = item.external,\n            href = item.href,\n            label = item.label,\n            title = item.title;\n        return React.createElement(\"div\", {\n          key: title,\n          className: composeClassName([\"NavigationSubItem\", item.href === currentHref ? \"Current\" : \"\"])\n        }, React.createElement(BaseLink, {\n          href: href,\n          external: external,\n          internalLinkComponent: internalLinkComponent,\n          className: \"NavigationSubItemLink\"\n        }, React.createElement(DisplayText, {\n          size: \"M\"\n        }, label)));\n      }));\n      var navigationSubDesktop = React.createElement(\"div\", {\n        className: \"NavigationSubDesktop\"\n      }, navigationSubItems);\n      var navigationSubMobile = React.createElement(\"div\", {\n        className: \"NavigationSubMobile\"\n      }, navigationSubItems);\n      var navigationSub = navigationSubDesktop;\n\n      if (isMobile) {\n        navigationSub = navigationSubMobile;\n      }\n\n      return React.createElement(\"div\", {\n        className: composeClassName([\"NavigationSub\", className])\n      }, navigationSub);\n    }\n  }]);\n  return NavigationSub;\n}(PureComponent);\n\ndefineProperty(NavigationSub, \"propTypes\", {\n  /** An array of the NavigationColumn molecule */\n  isMobile: PropTypes.bool,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    href: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    external: PropTypes.bool,\n    label: PropTypes.string\n  })).isRequired,\n  currentHref: PropTypes.string,\n  internalLinkComponent: PropTypes.any\n});\ndefineProperty(NavigationSub, \"defaultProps\", {\n  isMobile: false,\n  internalLinkComponent: null\n});\nvar css$Q = \".StoriesLayout {\\n  display: flex;\\n  flex-direction: column; }\\n  .StoriesLayout .Heading {\\n    padding: 0 0 24px 8px; }\\n    @media screen and (min-width: 768px) {\\n      .StoriesLayout .Heading {\\n        padding: 0 0 16px 16px; } }\\n  .StoriesLayout .ButtonLink {\\n    display: flex;\\n    justify-content: center;\\n    margin: 16px 8px 0 8px;\\n    width: 100%; }\\n    @media screen and (min-width: 1440px) {\\n      .StoriesLayout .ButtonLink {\\n        margin-top: 32px; } }\\n    .StoriesLayout .ButtonLink > .ButtonContainer {\\n      width: 100%;\\n      max-width: 360px; }\\n      @media screen and (min-width: 576px) {\\n        .StoriesLayout .ButtonLink > .ButtonContainer {\\n          max-width: 208px; } }\\n      @media screen and (min-width: 768px) {\\n        .StoriesLayout .ButtonLink > .ButtonContainer {\\n          max-width: 256px; } }\\n      @media screen and (min-width: 1024px) {\\n        .StoriesLayout .ButtonLink > .ButtonContainer {\\n          max-width: 352px; } }\\n      .StoriesLayout .ButtonLink > .ButtonContainer > button {\\n        width: 100%;\\n        max-width: 360px; }\\n  .StoriesLayout .CenteredTiles {\\n    justify-content: center; }\\n\";\nstyleInject(css$Q);\n\nvar StoriesLayout =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(StoriesLayout, _PureComponent);\n\n  function StoriesLayout() {\n    classCallCheck(this, StoriesLayout);\n    return possibleConstructorReturn(this, getPrototypeOf(StoriesLayout).apply(this, arguments));\n  }\n\n  createClass(StoriesLayout, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          titleText = _this$props.titleText,\n          titleSize = _this$props.titleSize,\n          underlined = _this$props.underlined,\n          underlineColor = _this$props.underlineColor,\n          whiteText = _this$props.whiteText,\n          buttonText = _this$props.buttonText,\n          buttonTheme = _this$props.buttonTheme,\n          href = _this$props.href,\n          external = _this$props.external,\n          linkTitle = _this$props.linkTitle,\n          backgroundColor = _this$props.backgroundColor,\n          centered = _this$props.centered,\n          className = _this$props.className,\n          children = _this$props.children,\n          internalLinkComponent = _this$props.internalLinkComponent;\n      var composedClassName = composeClassName([\"StoriesLayout\", className]);\n      var button = null;\n\n      if (href) {\n        button = React.createElement(ButtonLink, {\n          href: href,\n          external: external,\n          internalLinkComponent: internalLinkComponent,\n          title: linkTitle,\n          theme: buttonTheme\n        }, buttonText);\n      }\n\n      return React.createElement(Container, {\n        className: composedClassName,\n        style: {\n          backgroundColor: colors_2[backgroundColor].color\n        }\n      }, React.createElement(Heading, {\n        size: titleSize,\n        underlined: underlined,\n        underlineColor: underlineColor,\n        whiteText: whiteText\n      }, titleText), React.createElement(Container, {\n        className: centered ? \"CenteredTiles\" : \"\"\n      }, children), button);\n    }\n  }]);\n  return StoriesLayout;\n}(PureComponent);\n\ndefineProperty(StoriesLayout, \"propTypes\", {\n  titleText: PropTypes.string.isRequired,\n  titleSize: PropTypes.oneOf([\"S\", \"M\", \"L\"]),\n  underlined: PropTypes.bool,\n  underlineColor: PropTypes.string,\n  whiteText: PropTypes.bool,\n  buttonText: PropTypes.string.isRequired,\n  buttonTheme: PropTypes.oneOf([\"Primary\", \"Secondary\", \"Tertiary\"]),\n  href: PropTypes.string,\n  external: PropTypes.bool,\n  linkTitle: PropTypes.string,\n  backgroundColor: PropTypes.oneOf([\"base-white-color\", \"base-light-blue-color\", \"brand-navy-color\", \"brand-yellow-color\"]),\n  centered: PropTypes.bool,\n  className: PropTypes.string\n});\ndefineProperty(StoriesLayout, \"defaultProps\", {\n  titleSize: \"L\",\n  underlined: true,\n  underlineColor: \"#00aeef\",\n  whiteText: false,\n  buttonTheme: \"Primary\",\n  backgroundColor: \"base-white-color\",\n  centered: false,\n  className: \"\"\n});\nvar css$R = \".TabSection {\\n  width: 100%; }\\n  .TabSection .TabBar {\\n    list-style-type: none;\\n    margin: 0;\\n    padding: 0;\\n    max-width: 100%;\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: flex-end;\\n    overflow-x: scroll;\\n    scrollbar-width: none;\\n    /* Firefox */\\n    -ms-overflow-style: none;\\n    /* IE 10+ */ }\\n    @media screen and (min-width: 768px) {\\n      .TabSection .TabBar {\\n        justify-content: center; } }\\n    .TabSection .TabBar > * {\\n      flex: 0 0 auto; }\\n    .TabSection .TabBar::-webkit-scrollbar {\\n      /* WebKit */\\n      width: 0;\\n      height: 0; }\\n    @media screen and (min-width: 768px) {\\n      .TabSection .TabBar {\\n        overflow-x: hidden; } }\\n  .TabSection .HiddenPanel {\\n    display: none; }\\n\";\nstyleInject(css$R);\n\nvar TabSection =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  inherits(TabSection, _PureComponent);\n\n  function TabSection(props) {\n    var _this;\n\n    classCallCheck(this, TabSection);\n    _this = possibleConstructorReturn(this, getPrototypeOf(TabSection).call(this, props));\n    defineProperty(assertThisInitialized(_this), \"setCurrentTab\", function (index) {\n      _this.setState({\n        currentTab: index\n      });\n    });\n    _this.state = {\n      currentTab: 0\n    };\n    return _this;\n  }\n\n  createClass(TabSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          tabs = _this$props.tabs;\n      var currentTab = this.state.currentTab;\n      var tabButtons = tabs.map(function (tab, index) {\n        var selected = currentTab === index;\n        return React.createElement(\"li\", {\n          key: tab.key\n        }, React.createElement(TabSectionLink, {\n          className: \"Tab\",\n          sectionId: tab.key,\n          active: selected,\n          tabIndex: selected ? \"0\" : \"-1\",\n          blank: true,\n          onClickHandler: function onClickHandler() {\n            _this2.setCurrentTab(index);\n          }\n        }, tab.text));\n      });\n      var tabPanels = tabs.map(function (tab, index) {\n        var selected = currentTab === index;\n        return React.createElement(\"div\", {\n          key: tab.key,\n          role: \"tabpanel\",\n          \"aria-labelledby\": \"tab-\".concat(tab.key),\n          id: tab.key,\n          className: selected ? \"\" : \"HiddenPanel\"\n        }, tab.content);\n      });\n      var composedClassName = composeClassName([\"TabSection\", className]);\n      return React.createElement(\"div\", {\n        className: composedClassName\n      }, React.createElement(\"ul\", {\n        role: \"tablist\",\n        className: \"TabBar\"\n      }, tabButtons), tabPanels);\n    }\n  }]);\n  return TabSection;\n}(PureComponent);\n\ndefineProperty(TabSection, \"propTypes\", {\n  className: PropTypes.string,\n  tabs: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.string,\n    text: PropTypes.string,\n    content: PropTypes.array\n  }))\n});\ndefineProperty(TabSection, \"defaultProps\", {});\nvar index$3 =\n/*#__PURE__*/\nObject.freeze({\n  Footer: Footer,\n  LeadGenerator: LeadGenerator,\n  NavigationBar: NavigationBar,\n  NavigationBarDesktop: NavigationBarDesktop,\n  NavigationBarMobile: NavigationBarMobile,\n  NavigationSub: NavigationSub,\n  StoriesLayout: StoriesLayout,\n  TabSection: TabSection\n});\nexport { index$1 as Atoms, index$2 as Molecules, index$3 as Organisms, index as Utilities, colors_2 as colors, config_1 as allowedLocales, Form, asFormElement, Input$1 as Input, InputHidden$1 as InputHidden, InputText, InputEmail, InputDropdown$1 as InputDropdown, BaseLink, BodyText, Button, Col, Container, DisplayText, Divider, Heading, Icon, Iframe, Image, ImageBackground, Label, ModalWrapper, VideoPlayer, Accordion, AccordionItem, Banner, BaseTile, BulletList, BulletListItem, ButtonBackToTop, ButtonCloseModal, ButtonGhost, ButtonIcon, ButtonLink, ButtonVideo, ContentAligned, ContentImage, DownloadableResources, ImageLink, InputTextArea, LocaleSwitcherFirstTimeUser, GenericContent, MarkdownParser, KeyValuePair, LocaleSwitcher, MarketingTileA, MarketingTileB, MarketingTileC, ModalVideo, NavigationColumn, NavigationItemMobile, Stories, TabSectionLink, TextWithBackground, VideoDisplay, Footer, LeadGenerator, NavigationBar, NavigationBarDesktop, NavigationBarMobile, NavigationSub, StoriesLayout, TabSection, browser, composeClassName, StringUtils, camelize };","map":null,"metadata":{},"sourceType":"module"}